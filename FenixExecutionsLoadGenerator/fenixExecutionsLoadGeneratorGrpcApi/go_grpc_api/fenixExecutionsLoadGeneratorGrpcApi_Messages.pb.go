// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: FenixExecutionsLoadGenerator/fenixExecutionsLoadGeneratorGrpcApi/fenixExecutionsLoadGeneratorGrpcApi_Messages.proto

package go_grpc_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message having information of how many copies of TestCase-execution and how they are sent
type TestCaseExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoFileVersionUsedByCaller       CurrentFenixExecutionsLoadGeneratorProtoFileVersionEnum `protobuf:"varint,1,opt,name=ProtoFileVersionUsedByCaller,proto3,enum=fenixExecutionsLoadGeneratorGrpcApi.CurrentFenixExecutionsLoadGeneratorProtoFileVersionEnum" json:"ProtoFileVersionUsedByCaller,omitempty"` // The latest proto file version number to be used
	TestCaseUuid                       string                                                  `protobuf:"bytes,2,opt,name=TestCaseUuid,proto3" json:"TestCaseUuid,omitempty"`                                                                                                                                   // The unique uuid for the TestCase to be executed, by Fenix Execution Server
	NumberOfItemsPerGroup              int32                                                   `protobuf:"varint,3,opt,name=NumberOfItemsPerGroup,proto3" json:"NumberOfItemsPerGroup,omitempty"`                                                                                                                // Defines hwo many items in one group that will be sent to ExecutionsServer
	NumberOfParallellGroups            int32                                                   `protobuf:"varint,4,opt,name=NumberOfParallellGroups,proto3" json:"NumberOfParallellGroups,omitempty"`                                                                                                            // Defines how many parallell executions that will be sent to ExecutionServer
	NumberOfSecondsBetweenItemsInGroup int32                                                   `protobuf:"varint,5,opt,name=NumberOfSecondsBetweenItemsInGroup,proto3" json:"NumberOfSecondsBetweenItemsInGroup,omitempty"`                                                                                      // The time between send of two items in each group
}

func (x *TestCaseExecutionRequest) Reset() {
	*x = TestCaseExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCaseExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseExecutionRequest) ProtoMessage() {}

func (x *TestCaseExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseExecutionRequest.ProtoReflect.Descriptor instead.
func (*TestCaseExecutionRequest) Descriptor() ([]byte, []int) {
	return file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescGZIP(), []int{0}
}

func (x *TestCaseExecutionRequest) GetProtoFileVersionUsedByCaller() CurrentFenixExecutionsLoadGeneratorProtoFileVersionEnum {
	if x != nil {
		return x.ProtoFileVersionUsedByCaller
	}
	return CurrentFenixExecutionsLoadGeneratorProtoFileVersionEnum_VERSION_0_0
}

func (x *TestCaseExecutionRequest) GetTestCaseUuid() string {
	if x != nil {
		return x.TestCaseUuid
	}
	return ""
}

func (x *TestCaseExecutionRequest) GetNumberOfItemsPerGroup() int32 {
	if x != nil {
		return x.NumberOfItemsPerGroup
	}
	return 0
}

func (x *TestCaseExecutionRequest) GetNumberOfParallellGroups() int32 {
	if x != nil {
		return x.NumberOfParallellGroups
	}
	return 0
}

func (x *TestCaseExecutionRequest) GetNumberOfSecondsBetweenItemsInGroup() int32 {
	if x != nil {
		return x.NumberOfSecondsBetweenItemsInGroup
	}
	return 0
}

var File_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto protoreflect.FileDescriptor

var file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDesc = []byte{
	0x0a, 0x73, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x66,
	0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f,
	0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41,
	0x70, 0x69, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x1a, 0x82, 0x01, 0x46, 0x65, 0x6e,
	0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f, 0x61, 0x64,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2f, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f, 0x61,
	0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa1, 0x03, 0x0a, 0x18, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0xa0, 0x01, 0x0a,
	0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x5c, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4c, 0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x50, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x38, 0x0a, 0x17, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x4e, 0x0a, 0x22, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x49, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x22, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x67, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescOnce sync.Once
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescData = file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDesc
)

func file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescGZIP() []byte {
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescOnce.Do(func() {
		file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescData)
	})
	return file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDescData
}

var file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_goTypes = []interface{}{
	(*TestCaseExecutionRequest)(nil),                             // 0: fenixExecutionsLoadGeneratorGrpcApi.TestCaseExecutionRequest
	(CurrentFenixExecutionsLoadGeneratorProtoFileVersionEnum)(0), // 1: fenixExecutionsLoadGeneratorGrpcApi.CurrentFenixExecutionsLoadGeneratorProtoFileVersionEnum
}
var file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_depIdxs = []int32{
	1, // 0: fenixExecutionsLoadGeneratorGrpcApi.TestCaseExecutionRequest.ProtoFileVersionUsedByCaller:type_name -> fenixExecutionsLoadGeneratorGrpcApi.CurrentFenixExecutionsLoadGeneratorProtoFileVersionEnum
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() {
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_init()
}
func file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_init() {
	if File_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto != nil {
		return
	}
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_GeneralMessagesAndEnums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCaseExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_goTypes,
		DependencyIndexes: file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_depIdxs,
		MessageInfos:      file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_msgTypes,
	}.Build()
	File_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto = out.File
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_rawDesc = nil
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_goTypes = nil
	file_FenixExecutionsLoadGenerator_fenixExecutionsLoadGeneratorGrpcApi_fenixExecutionsLoadGeneratorGrpcApi_Messages_proto_depIdxs = nil
}
