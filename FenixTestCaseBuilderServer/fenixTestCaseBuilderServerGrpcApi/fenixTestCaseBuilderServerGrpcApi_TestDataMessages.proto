syntax = "proto3";
package fenixTestCaseBuilderServerGrpcApi;
option go_package = "./go_grpc_api";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_GeneralMessagesAndEnums.proto";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_SupportedTestInstructionsAndTestInstructionContainersAndAllowedUsers.proto";

// The Message that Connector sends and holds TestData for one TestDataArea from a "simple" TestData-file.
message TestDataFromSimpleTestDataAreaFileMessage {
  ClientSystemIdentificationMessage ClientSystemIdentification = 1; // Identifies Client System and Proto-file version used
  repeated TestDataFromOneSimpleTestDataAreaFileMessage TestDataFromSimpleTestDataAreaFiles = 2; // The message to be Signe
  SignedMessageByWorkerServiceAccountMessage SignedMessageByWorkerServiceAccount = 3; // Holds information about signature signed by Workers Service Account
}


// The response to TesterGui for all TestData to be used by the user
message    ListAllTestDataForTestDataAreasResponseMessage {
  AckNackResponse ackNackResponse = 1; // Hold all error messages, if there are any. Message also gives of everything was OK or not
  repeated TestDataFromOneSimpleTestDataAreaFileMessage TestDataFromSimpleTestDataAreaFiles = 2; // The message to be Signe
}

// TestData from a Simple-file for one TestDataArea
message TestDataFromOneSimpleTestDataAreaFileMessage {
  string TestDataDomainUuid = 1; // The UUID of the Domain that the TestData belongs to
  string TestDataDomainName = 2; // The Name of the Domain that the TestData belongs to
  string TestDataDomainTemplateName = 3; // The name used in Template to reference correct Domain- This name can't have any spaces in it
  string  TestDataAreaUuid = 4; // The UUID of the TestData-area in Domain that the TestData belongs to
  string TestDataAreaName = 5; // The Name of  the TestData-area in Domain that the TestData belongs to
  repeated  HeaderForTestDataFromOneSimpleTestDataAreaFileMessage HeadersForTestDataFromOneSimpleTestDataAreaFile = 6; // All headers for the TestData
  repeated SimpleTestDataRowMessage SimpleTestDataRows = 7; // All TestDataRows belonging to a simple TestData-file
  string TestDataFileSha256Hash = 8; // The sha256 file hash for the simple TestData-file
  string ImportantDataInFileSha256Hash = 9; // The sha256 of the following data in file;  TestDataDomainUuid, TestDataAreaUuid, SimpleTestDataRows
}

// Message holding one header from a "Simple" TestDataArea-file
message HeaderForTestDataFromOneSimpleTestDataAreaFileMessage {
  bool ShouldHeaderActAsFilter = 1; // Will this 'header' be in the filter when user filters for correct TestData
  string HeaderName = 2; // The Name of the Column. This name can't have any spaces in it and is used in Templates
  string HeaderUiName = 3; // The Name that will be presented in the GUI. Can have spaces in it
}

// One TestDataRow for TestData from a "Simple" TestData-file
message SimpleTestDataRowMessage {
  repeated string TestDataValue = 1; // All values in a TestDataRow that belongs to a SimpleTestData-file
}

// Message holding Groups and their TestDataPoints
message UsersChosenTestDataForTestCaseMessage {
  map<string, TestDataPointNameMapMessage> ChosenTestDataPointsPerGroupMap = 1; // The 'Map[TestDataGroupName]TestDataPointNameMapMessage' is map holding maps with TestDataPoints
  string HashOfThisMessageWithEmptyHashField = 2; // The hash of this message but with hash-field set to empty string.
}

// Message holding one TestDataPoint and indirect its TestDataRows
message TestDataPointNameMapMessage {
  map<string, TestDataRowsMessage> ChosenTestDataRowsPerTestDataPointMap = 1; // The 'Map[TestDataPointName]TestDataRowsMessage' is map holding TestDataRows for a TestDataPoint

}

// Message holding all TestDataRows for one TestDataPoint
message TestDataRowsMessage {
  repeated TestDataRowMessage TestDataRows = 1; // All TestDataRows for one TestDataPoints
}

// Message holding one TestDataRow and all data needed
message TestDataRowMessage {
  string TestDataDomainUuid = 1; // The DomainUuid for the TestDataRow
  string TestDataDomainName = 2; // The DomainName for the TestDataRow
  string TestDataAreaUuid = 3; // The TestDataArea, Uuid, for the Domain
  string TestDataAreaName = 4; //  The TestDataArea, Name, for the Domain
  string TestDataPointName = 5; // The name for the TestDataRow. It create using filter parameters for that row, e.g. 'Sub Custody/Main TestData Area/SEK/AccTest/SE/CRDT/EU/Euroclear/Other bank/NOK/EUR/SEK'
  map<string, TestDataPointRowValueSummaryMapMessage> TestDataPointRowValueSummaryMap = 6; // The Map['TestDataPointRowUuid']TestDataPointRowValueSummaryMapMessage
}

// Message holding
message    TestDataPointRowValueSummaryMapMessage {
  string TestDataPointRowUuid = 1; // The TestDataRows Uuid
  string TestDataPointRowValuesSummary = 2; // The summary of the data, used for filtering, e.g. '613/3010001/5010001/SEK/AccTest/SE/CRDT/MGTCBEBEXXX/EU/Euroclear/Other bank/C/1182633/52018108263/NOK/NO9900027190/RÄNTEBÄRANDE/EUR/SEK/PRINCIPAL/NULL/No/6752528,843/Sub Custody/Main TestData Area/SEK/AccTest/SE/CRDT/EU/Euroclear/Other bank/NOK/EUR/SEK/655345d3-664d-521b-9cd7-50ba40689ff1'
}
