// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters.proto

package go_grpc_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AllTemplateRepositoryConnectionParameters
// Message holding parameters to be used to get all Templates from all Repositories
type AllTemplateRepositoryConnectionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientSystemIdentification *ClientSystemIdentificationMessage        `protobuf:"bytes,1,opt,name=ClientSystemIdentification,proto3" json:"ClientSystemIdentification,omitempty"` // Identifies Client System and Proto-file version used
	AllTemplateRepositories    []*TemplateRepositoryConnectionParameters `protobuf:"bytes,2,rep,name=AllTemplateRepositories,proto3" json:"AllTemplateRepositories,omitempty"`       // A list with all parameters to all different template repositories
	MessageSignatureData       *MessageSignatureDataMessage              `protobuf:"bytes,3,opt,name=MessageSignatureData,proto3" json:"MessageSignatureData,omitempty"`             // The message with the message that was signed and the signature}
}

func (x *AllTemplateRepositoryConnectionParameters) Reset() {
	*x = AllTemplateRepositoryConnectionParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTemplateRepositoryConnectionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTemplateRepositoryConnectionParameters) ProtoMessage() {}

func (x *AllTemplateRepositoryConnectionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTemplateRepositoryConnectionParameters.ProtoReflect.Descriptor instead.
func (*AllTemplateRepositoryConnectionParameters) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescGZIP(), []int{0}
}

func (x *AllTemplateRepositoryConnectionParameters) GetClientSystemIdentification() *ClientSystemIdentificationMessage {
	if x != nil {
		return x.ClientSystemIdentification
	}
	return nil
}

func (x *AllTemplateRepositoryConnectionParameters) GetAllTemplateRepositories() []*TemplateRepositoryConnectionParameters {
	if x != nil {
		return x.AllTemplateRepositories
	}
	return nil
}

func (x *AllTemplateRepositoryConnectionParameters) GetMessageSignatureData() *MessageSignatureDataMessage {
	if x != nil {
		return x.MessageSignatureData
	}
	return nil
}

// TemplateRepositoryConnectionParameters
// Message holding parameters to be used to get a Template or group of Templates from one Repository
// TotalApiUrl := "repositoryApiUrl" + "/" +  repositoryOwner + "/" + repositoryName + "/contents" + repositoryPath
// TotalApiUrl := "https://api.github.com/repos/jlambert68/FenixTesterGui/contents"
type TemplateRepositoryConnectionParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryApiUrlName string `protobuf:"bytes,1,opt,name=RepositoryApiUrlName,proto3" json:"RepositoryApiUrlName,omitempty"` // The name the user will see in UI when to chose Template-repository
	RepositoryApiUrl     string `protobuf:"bytes,2,opt,name=RepositoryApiUrl,proto3" json:"RepositoryApiUrl,omitempty"`         // the base URL to the API e.g. "https://api.github.com/repos"
	RepositoryOwner      string `protobuf:"bytes,3,opt,name=RepositoryOwner,proto3" json:"RepositoryOwner,omitempty"`           // The owner of the repository e.g. "jlambert68"
	RepositoryName       string `protobuf:"bytes,4,opt,name=RepositoryName,proto3" json:"RepositoryName,omitempty"`             // The name of the repository e.g. "FenixTesterGui"
	RepositoryPath       string `protobuf:"bytes,5,opt,name=RepositoryPath,proto3" json:"RepositoryPath,omitempty"`             // The path within the repository e.g "" for storing templates in base of repository
	GitHubApiKey         string `protobuf:"bytes,6,opt,name=GitHubApiKey,proto3" json:"GitHubApiKey,omitempty"`                 // The key used to access the files in this repository
}

func (x *TemplateRepositoryConnectionParameters) Reset() {
	*x = TemplateRepositoryConnectionParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateRepositoryConnectionParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateRepositoryConnectionParameters) ProtoMessage() {}

func (x *TemplateRepositoryConnectionParameters) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateRepositoryConnectionParameters.ProtoReflect.Descriptor instead.
func (*TemplateRepositoryConnectionParameters) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescGZIP(), []int{1}
}

func (x *TemplateRepositoryConnectionParameters) GetRepositoryApiUrlName() string {
	if x != nil {
		return x.RepositoryApiUrlName
	}
	return ""
}

func (x *TemplateRepositoryConnectionParameters) GetRepositoryApiUrl() string {
	if x != nil {
		return x.RepositoryApiUrl
	}
	return ""
}

func (x *TemplateRepositoryConnectionParameters) GetRepositoryOwner() string {
	if x != nil {
		return x.RepositoryOwner
	}
	return ""
}

func (x *TemplateRepositoryConnectionParameters) GetRepositoryName() string {
	if x != nil {
		return x.RepositoryName
	}
	return ""
}

func (x *TemplateRepositoryConnectionParameters) GetRepositoryPath() string {
	if x != nil {
		return x.RepositoryPath
	}
	return ""
}

func (x *TemplateRepositoryConnectionParameters) GetGitHubApiKey() string {
	if x != nil {
		return x.GitHubApiKey
	}
	return ""
}

// ListAllRepositoryApiUrlsResponseMessage
// Message having all url:s to all repositories that a user is allowed to use. Based on same logic as Owner-Domain
type ListAllRepositoryApiUrlsResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AckNackResponse   *AckNackResponse                   `protobuf:"bytes,1,opt,name=ackNackResponse,proto3" json:"ackNackResponse,omitempty"`     // Hold all error messages, if there are any. Message also gives of everything was OK or not
	RepositoryApiUrls []*RepositoryApiUrlResponseMessage `protobuf:"bytes,2,rep,name=RepositoryApiUrls,proto3" json:"RepositoryApiUrls,omitempty"` // A list of all URLs tha the user can use when picking templates in TestCases
}

func (x *ListAllRepositoryApiUrlsResponseMessage) Reset() {
	*x = ListAllRepositoryApiUrlsResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllRepositoryApiUrlsResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllRepositoryApiUrlsResponseMessage) ProtoMessage() {}

func (x *ListAllRepositoryApiUrlsResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllRepositoryApiUrlsResponseMessage.ProtoReflect.Descriptor instead.
func (*ListAllRepositoryApiUrlsResponseMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescGZIP(), []int{2}
}

func (x *ListAllRepositoryApiUrlsResponseMessage) GetAckNackResponse() *AckNackResponse {
	if x != nil {
		return x.AckNackResponse
	}
	return nil
}

func (x *ListAllRepositoryApiUrlsResponseMessage) GetRepositoryApiUrls() []*RepositoryApiUrlResponseMessage {
	if x != nil {
		return x.RepositoryApiUrls
	}
	return nil
}

// RepositoryApiUrlResponseMessage
// One Repository with name, url and it GithubApiKey
type RepositoryApiUrlResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepositoryApiUrlName string `protobuf:"bytes,1,opt,name=RepositoryApiUrlName,proto3" json:"RepositoryApiUrlName,omitempty"` // The name the user will see in UI when to chose Template-repository
	RepositoryApiFullUrl string `protobuf:"bytes,2,opt,name=RepositoryApiFullUrl,proto3" json:"RepositoryApiFullUrl,omitempty"` // The full URL to the API, for TesterGui to use, e.g. "https://api.github.com/repos/jlambert68/FenixTesterGui/contents"
	GitHubApiKey         string `protobuf:"bytes,3,opt,name=GitHubApiKey,proto3" json:"GitHubApiKey,omitempty"`                 // The key used to access the files in this repository
}

func (x *RepositoryApiUrlResponseMessage) Reset() {
	*x = RepositoryApiUrlResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryApiUrlResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryApiUrlResponseMessage) ProtoMessage() {}

func (x *RepositoryApiUrlResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryApiUrlResponseMessage.ProtoReflect.Descriptor instead.
func (*RepositoryApiUrlResponseMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescGZIP(), []int{3}
}

func (x *RepositoryApiUrlResponseMessage) GetRepositoryApiUrlName() string {
	if x != nil {
		return x.RepositoryApiUrlName
	}
	return ""
}

func (x *RepositoryApiUrlResponseMessage) GetRepositoryApiFullUrl() string {
	if x != nil {
		return x.RepositoryApiFullUrl
	}
	return ""
}

func (x *RepositoryApiUrlResponseMessage) GetGitHubApiKey() string {
	if x != nil {
		return x.GitHubApiKey
	}
	return ""
}

// TestCaseTemplateFilesMessage
// Message holding all Template files
type TestCaseTemplateFilesMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestCaseTemplateFile []*TestCaseTemplateFileMessage `protobuf:"bytes,1,rep,name=TestCaseTemplateFile,proto3" json:"TestCaseTemplateFile,omitempty"` // A list with all templates
	HashForAllFiles      string                         `protobuf:"bytes,2,opt,name=HashForAllFiles,proto3" json:"HashForAllFiles,omitempty"`           // Hash calculated from all file-hashes, using Fenix standard method
}

func (x *TestCaseTemplateFilesMessage) Reset() {
	*x = TestCaseTemplateFilesMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCaseTemplateFilesMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseTemplateFilesMessage) ProtoMessage() {}

func (x *TestCaseTemplateFilesMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseTemplateFilesMessage.ProtoReflect.Descriptor instead.
func (*TestCaseTemplateFilesMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescGZIP(), []int{4}
}

func (x *TestCaseTemplateFilesMessage) GetTestCaseTemplateFile() []*TestCaseTemplateFileMessage {
	if x != nil {
		return x.TestCaseTemplateFile
	}
	return nil
}

func (x *TestCaseTemplateFilesMessage) GetHashForAllFiles() string {
	if x != nil {
		return x.HashForAllFiles
	}
	return ""
}

// TestCaseTemplateFileMessage
// Message holding one Template file
type TestCaseTemplateFileMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                               // E.g "TODO.txt"
	URL                 string `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`                                 // E.g "https://api.github.com/repos/jlambert68/FenixTesterGui/contents/TODO.txt?ref=master"
	DownloadURL         string `protobuf:"bytes,3,opt,name=DownloadURL,proto3" json:"DownloadURL,omitempty"`                 // E.g "https://raw.githubusercontent.com/jlambert68/FenixTesterGui/master/TODO.txt"
	SHA                 string `protobuf:"bytes,4,opt,name=SHA,proto3" json:"SHA,omitempty"`                                 // E.g "8d8a4611838f57328ca3ba2a091686911659ef33"
	Size                int64  `protobuf:"varint,5,opt,name=Size,proto3" json:"Size,omitempty"`                              // E.g 114
	FileContentAsString string `protobuf:"bytes,6,opt,name=FileContentAsString,proto3" json:"FileContentAsString,omitempty"` // The file as readable text
	FileHash            string `protobuf:"bytes,7,opt,name=FileHash,proto3" json:"FileHash,omitempty"`                       // The sha256 of the file
}

func (x *TestCaseTemplateFileMessage) Reset() {
	*x = TestCaseTemplateFileMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCaseTemplateFileMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseTemplateFileMessage) ProtoMessage() {}

func (x *TestCaseTemplateFileMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseTemplateFileMessage.ProtoReflect.Descriptor instead.
func (*TestCaseTemplateFileMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescGZIP(), []int{5}
}

func (x *TestCaseTemplateFileMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestCaseTemplateFileMessage) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *TestCaseTemplateFileMessage) GetDownloadURL() string {
	if x != nil {
		return x.DownloadURL
	}
	return ""
}

func (x *TestCaseTemplateFileMessage) GetSHA() string {
	if x != nil {
		return x.SHA
	}
	return ""
}

func (x *TestCaseTemplateFileMessage) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TestCaseTemplateFileMessage) GetFileContentAsString() string {
	if x != nil {
		return x.FileContentAsString
	}
	return ""
}

func (x *TestCaseTemplateFileMessage) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

var File_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto protoreflect.FileDescriptor

var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDesc = []byte{
	0x0a, 0x8b, 0x01, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2f,
	0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x5f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21,
	0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x1a, 0x7c, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2f,
	0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x5f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xac, 0x03, 0x0a, 0x29, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x84, 0x01,
	0x0a, 0x1a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x44, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x83, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x17, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x72, 0x0a, 0x14, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa6,
	0x02, 0x0a, 0x26, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x55, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x47, 0x69, 0x74, 0x48, 0x75,
	0x62, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0xf9, 0x01, 0x0a, 0x27, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69,
	0x55, 0x72, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x66,
	0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69,
	0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0f, 0x61, 0x63, 0x6b, 0x4e, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x70, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x41,
	0x70, 0x69, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x66,
	0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x11, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x55,
	0x72, 0x6c, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x46, 0x75, 0x6c, 0x6c,
	0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x70, 0x69, 0x46, 0x75, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x12,
	0x22, 0x0a, 0x0c, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x22, 0xbc, 0x01, 0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x72, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x14, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x48, 0x61, 0x73, 0x68,
	0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x48, 0x61, 0x73, 0x68, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x1b, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x48,
	0x41, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x48, 0x41, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x42, 0x0f,
	0x5a, 0x0d, 0x2e, 0x2f, 0x67, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescOnce sync.Once
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescData = file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDesc
)

func file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescGZIP() []byte {
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescOnce.Do(func() {
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescData = protoimpl.X.CompressGZIP(file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescData)
	})
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDescData
}

var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_goTypes = []interface{}{
	(*AllTemplateRepositoryConnectionParameters)(nil), // 0: fenixTestCaseBuilderServerGrpcApi.AllTemplateRepositoryConnectionParameters
	(*TemplateRepositoryConnectionParameters)(nil),    // 1: fenixTestCaseBuilderServerGrpcApi.TemplateRepositoryConnectionParameters
	(*ListAllRepositoryApiUrlsResponseMessage)(nil),   // 2: fenixTestCaseBuilderServerGrpcApi.ListAllRepositoryApiUrlsResponseMessage
	(*RepositoryApiUrlResponseMessage)(nil),           // 3: fenixTestCaseBuilderServerGrpcApi.RepositoryApiUrlResponseMessage
	(*TestCaseTemplateFilesMessage)(nil),              // 4: fenixTestCaseBuilderServerGrpcApi.TestCaseTemplateFilesMessage
	(*TestCaseTemplateFileMessage)(nil),               // 5: fenixTestCaseBuilderServerGrpcApi.TestCaseTemplateFileMessage
	(*ClientSystemIdentificationMessage)(nil),         // 6: fenixTestCaseBuilderServerGrpcApi.ClientSystemIdentificationMessage
	(*MessageSignatureDataMessage)(nil),               // 7: fenixTestCaseBuilderServerGrpcApi.MessageSignatureDataMessage
	(*AckNackResponse)(nil),                           // 8: fenixTestCaseBuilderServerGrpcApi.AckNackResponse
}
var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_depIdxs = []int32{
	6, // 0: fenixTestCaseBuilderServerGrpcApi.AllTemplateRepositoryConnectionParameters.ClientSystemIdentification:type_name -> fenixTestCaseBuilderServerGrpcApi.ClientSystemIdentificationMessage
	1, // 1: fenixTestCaseBuilderServerGrpcApi.AllTemplateRepositoryConnectionParameters.AllTemplateRepositories:type_name -> fenixTestCaseBuilderServerGrpcApi.TemplateRepositoryConnectionParameters
	7, // 2: fenixTestCaseBuilderServerGrpcApi.AllTemplateRepositoryConnectionParameters.MessageSignatureData:type_name -> fenixTestCaseBuilderServerGrpcApi.MessageSignatureDataMessage
	8, // 3: fenixTestCaseBuilderServerGrpcApi.ListAllRepositoryApiUrlsResponseMessage.ackNackResponse:type_name -> fenixTestCaseBuilderServerGrpcApi.AckNackResponse
	3, // 4: fenixTestCaseBuilderServerGrpcApi.ListAllRepositoryApiUrlsResponseMessage.RepositoryApiUrls:type_name -> fenixTestCaseBuilderServerGrpcApi.RepositoryApiUrlResponseMessage
	5, // 5: fenixTestCaseBuilderServerGrpcApi.TestCaseTemplateFilesMessage.TestCaseTemplateFile:type_name -> fenixTestCaseBuilderServerGrpcApi.TestCaseTemplateFileMessage
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() {
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_init()
}
func file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_init() {
	if File_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto != nil {
		return
	}
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_GeneralMessagesAndEnums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllTemplateRepositoryConnectionParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateRepositoryConnectionParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllRepositoryApiUrlsResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositoryApiUrlResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCaseTemplateFilesMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCaseTemplateFileMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_goTypes,
		DependencyIndexes: file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_depIdxs,
		MessageInfos:      file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_msgTypes,
	}.Build()
	File_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto = out.File
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_rawDesc = nil
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_goTypes = nil
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TemplateRepositoryConnectionParameters_proto_depIdxs = nil
}
