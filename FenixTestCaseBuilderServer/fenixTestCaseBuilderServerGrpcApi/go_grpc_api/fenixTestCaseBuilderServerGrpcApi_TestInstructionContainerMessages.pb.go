// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages.proto

package go_grpc_api

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum int32

const (
	ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum_DEFAULT_NOT_SET ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum = 0 //Value used for when the variable is not actively set
	ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_USE_DROPZONE_VALUE_FOR_ATTRIBUTE           ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum = 1 // The Attributes value will be used when adding the TestInstruction to the TestCase-model
	ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_REMOVE_ATTRIBUTE_FROM_TESTINSTRUCTION      ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum = 2 // Removes the attributes from the TestInstruction
)

// Enum value maps for ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum.
var (
	ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum_name = map[int32]string{
		0: "AttributeActionCommandEnum_DEFAULT_NOT_SET",
		1: "USE_DROPZONE_VALUE_FOR_ATTRIBUTE",
		2: "REMOVE_ATTRIBUTE_FROM_TESTINSTRUCTION",
	}
	ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum_value = map[string]int32{
		"AttributeActionCommandEnum_DEFAULT_NOT_SET": 0,
		"USE_DROPZONE_VALUE_FOR_ATTRIBUTE":           1,
		"REMOVE_ATTRIBUTE_FROM_TESTINSTRUCTION":      2,
	}
)

func (x ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum) Enum() *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum {
	p := new(ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum)
	*p = x
	return p
}

func (x ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_enumTypes[0].Descriptor()
}

func (ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum) Type() protoreflect.EnumType {
	return &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_enumTypes[0]
}

func (x ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum.Descriptor instead.
func (ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum) EnumDescriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{5, 0, 0, 0}
}

// Message holding information about who is the user and which TestCase that the TestInstructionContainers belong to
type ListAllTestInstructionContainersForSpecificTestCaseRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                       string                                          `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`                                                                                                                                     // The Users Id, SEB S-id will be used for SEB
	ProtoFileVersionUsedByClient CurrentFenixTestCaseBuilderProtoFileVersionEnum `protobuf:"varint,2,opt,name=ProtoFileVersionUsedByClient,proto3,enum=fenixTestCaseBuilderServerGrpcApi.CurrentFenixTestCaseBuilderProtoFileVersionEnum" json:"ProtoFileVersionUsedByClient,omitempty"` // The latest proto file version number to be used
	TestCaseUuid                 string                                          `protobuf:"bytes,3,opt,name=TestCaseUuid,proto3" json:"TestCaseUuid,omitempty"`                                                                                                                         // The TestCase, UUID, that is TestInstructionContainers belong to
}

func (x *ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) Reset() {
	*x = ListAllTestInstructionContainersForSpecificTestCaseRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) ProtoMessage() {}

func (x *ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllTestInstructionContainersForSpecificTestCaseRequestMessage.ProtoReflect.Descriptor instead.
func (*ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{0}
}

func (x *ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) GetProtoFileVersionUsedByClient() CurrentFenixTestCaseBuilderProtoFileVersionEnum {
	if x != nil {
		return x.ProtoFileVersionUsedByClient
	}
	return CurrentFenixTestCaseBuilderProtoFileVersionEnum_CurrentFenixTestCaseBuilderProtoFileVersionEnum_DEFAULT_NOT_SET
}

func (x *ListAllTestInstructionContainersForSpecificTestCaseRequestMessage) GetTestCaseUuid() string {
	if x != nil {
		return x.TestCaseUuid
	}
	return ""
}

// Message holding information about user, TestCaseUUID and the TestInstructions
type SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                          string                                          `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`                                                                                                                                     // The Users Id, SEB S-id will be used for SEB
	ProtoFileVersionUsedByClient    CurrentFenixTestCaseBuilderProtoFileVersionEnum `protobuf:"varint,2,opt,name=ProtoFileVersionUsedByClient,proto3,enum=fenixTestCaseBuilderServerGrpcApi.CurrentFenixTestCaseBuilderProtoFileVersionEnum" json:"ProtoFileVersionUsedByClient,omitempty"` // The latest proto file version number to be used
	TestCaseUuid                    string                                          `protobuf:"bytes,3,opt,name=TestCaseUuid,proto3" json:"TestCaseUuid,omitempty"`                                                                                                                         // The TestCase, UUID, that is TestInstructions belong to
	MatureTestInstructionContainers *MatureTestInstructionContainersMessage         `protobuf:"bytes,4,opt,name=MatureTestInstructionContainers,proto3" json:"MatureTestInstructionContainers,omitempty"`                                                                                   // All TestInstructionContainers to be saved
}

func (x *SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) Reset() {
	*x = SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) ProtoMessage() {}

func (x *SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage.ProtoReflect.Descriptor instead.
func (*SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{1}
}

func (x *SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) GetProtoFileVersionUsedByClient() CurrentFenixTestCaseBuilderProtoFileVersionEnum {
	if x != nil {
		return x.ProtoFileVersionUsedByClient
	}
	return CurrentFenixTestCaseBuilderProtoFileVersionEnum_CurrentFenixTestCaseBuilderProtoFileVersionEnum_DEFAULT_NOT_SET
}

func (x *SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) GetTestCaseUuid() string {
	if x != nil {
		return x.TestCaseUuid
	}
	return ""
}

func (x *SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage) GetMatureTestInstructionContainers() *MatureTestInstructionContainersMessage {
	if x != nil {
		return x.MatureTestInstructionContainers
	}
	return nil
}

// Message holding one Immature TestInstruction which is Dragged n Dropped into the TestCase
type ImmatureTestInstructionContainerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicTestInstructionContainerInformation    *BasicTestInstructionContainerInformationMessage    `protobuf:"bytes,1,opt,name=BasicTestInstructionContainerInformation,proto3" json:"BasicTestInstructionContainerInformation,omitempty"`       // Data is used to describe the basic information for the TestInstructionContainer
	ImmatureTestInstructionContainerInformation *ImmatureTestInstructionContainerInformationMessage `protobuf:"bytes,2,opt,name=ImmatureTestInstructionContainerInformation,proto3" json:"ImmatureTestInstructionContainerInformation,omitempty"` // The immature information for the TestInstructionContainer
	ImmatureSubTestCaseModel                    *ImmatureElementModelMessage                        `protobuf:"bytes,3,opt,name=ImmatureSubTestCaseModel,proto3" json:"ImmatureSubTestCaseModel,omitempty"`                                       // The immature element model for this TestInstructionContainer
}

func (x *ImmatureTestInstructionContainerMessage) Reset() {
	*x = ImmatureTestInstructionContainerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmatureTestInstructionContainerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmatureTestInstructionContainerMessage) ProtoMessage() {}

func (x *ImmatureTestInstructionContainerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmatureTestInstructionContainerMessage.ProtoReflect.Descriptor instead.
func (*ImmatureTestInstructionContainerMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{2}
}

func (x *ImmatureTestInstructionContainerMessage) GetBasicTestInstructionContainerInformation() *BasicTestInstructionContainerInformationMessage {
	if x != nil {
		return x.BasicTestInstructionContainerInformation
	}
	return nil
}

func (x *ImmatureTestInstructionContainerMessage) GetImmatureTestInstructionContainerInformation() *ImmatureTestInstructionContainerInformationMessage {
	if x != nil {
		return x.ImmatureTestInstructionContainerInformation
	}
	return nil
}

func (x *ImmatureTestInstructionContainerMessage) GetImmatureSubTestCaseModel() *ImmatureElementModelMessage {
	if x != nil {
		return x.ImmatureSubTestCaseModel
	}
	return nil
}

// Message holding one Mature TestInstructionContainer which exist in a TestCase
type MatureTestInstructionContainersMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatureTestInstructionContainers []*MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage `protobuf:"bytes,1,rep,name=MatureTestInstructionContainers,proto3" json:"MatureTestInstructionContainers,omitempty"` // A list of list of TestInstructionContainers, received from DB or to be sent to DB
}

func (x *MatureTestInstructionContainersMessage) Reset() {
	*x = MatureTestInstructionContainersMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatureTestInstructionContainersMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatureTestInstructionContainersMessage) ProtoMessage() {}

func (x *MatureTestInstructionContainersMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatureTestInstructionContainersMessage.ProtoReflect.Descriptor instead.
func (*MatureTestInstructionContainersMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{3}
}

func (x *MatureTestInstructionContainersMessage) GetMatureTestInstructionContainers() []*MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage {
	if x != nil {
		return x.MatureTestInstructionContainers
	}
	return nil
}

// Message holding Basic information for one TestInstructionContainer
type BasicTestInstructionContainerInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NonEditableInformation                     *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage                `protobuf:"bytes,1,opt,name=NonEditableInformation,proto3" json:"NonEditableInformation,omitempty"`                                         // All Basic information that can be shown in GUI but can't be changed by the user
	EditableInformation                        *BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage                   `protobuf:"bytes,2,opt,name=EditableInformation,proto3" json:"EditableInformation,omitempty"`                                               // All Basic information that can be shown in GUI and can be changed by the user
	InvisibleBasicInformation                  *BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage                  `protobuf:"bytes,3,opt,name=InvisibleBasicInformation,proto3" json:"InvisibleBasicInformation,omitempty"`                                   // All Basic information that is not directly shown in GUI and can't be changed by the user
	EditableTestInstructionContainerAttributes *BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage `protobuf:"bytes,4,opt,name=EditableTestInstructionContainerAttributes,proto3" json:"EditableTestInstructionContainerAttributes,omitempty"` // All attributes supported by a TestInstructionContainer, can be changed by the user
}

func (x *BasicTestInstructionContainerInformationMessage) Reset() {
	*x = BasicTestInstructionContainerInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicTestInstructionContainerInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicTestInstructionContainerInformationMessage) ProtoMessage() {}

func (x *BasicTestInstructionContainerInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicTestInstructionContainerInformationMessage.ProtoReflect.Descriptor instead.
func (*BasicTestInstructionContainerInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{4}
}

func (x *BasicTestInstructionContainerInformationMessage) GetNonEditableInformation() *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage {
	if x != nil {
		return x.NonEditableInformation
	}
	return nil
}

func (x *BasicTestInstructionContainerInformationMessage) GetEditableInformation() *BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage {
	if x != nil {
		return x.EditableInformation
	}
	return nil
}

func (x *BasicTestInstructionContainerInformationMessage) GetInvisibleBasicInformation() *BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage {
	if x != nil {
		return x.InvisibleBasicInformation
	}
	return nil
}

func (x *BasicTestInstructionContainerInformationMessage) GetEditableTestInstructionContainerAttributes() *BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage {
	if x != nil {
		return x.EditableTestInstructionContainerAttributes
	}
	return nil
}

// Message holding the information about the Immature TestInstructionContainer
type ImmatureTestInstructionContainerInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableDropZones []*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage `protobuf:"bytes,18,rep,name=AvailableDropZones,proto3" json:"AvailableDropZones,omitempty"` // A list of DropZone for this Immature TestInstructionContainer. A DropZone is a collection of pre-defined values that the TestInstructionContainer will get when placed in TestCase
}

func (x *ImmatureTestInstructionContainerInformationMessage) Reset() {
	*x = ImmatureTestInstructionContainerInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmatureTestInstructionContainerInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmatureTestInstructionContainerInformationMessage) ProtoMessage() {}

func (x *ImmatureTestInstructionContainerInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmatureTestInstructionContainerInformationMessage.ProtoReflect.Descriptor instead.
func (*ImmatureTestInstructionContainerInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{5}
}

func (x *ImmatureTestInstructionContainerInformationMessage) GetAvailableDropZones() []*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage {
	if x != nil {
		return x.AvailableDropZones
	}
	return nil
}

// Message holding all data that is set for the Mature TestInstructionContainer
type MatureTestInstructionContainerInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatureTestInstructionContainerInformation *MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage `protobuf:"bytes,1,opt,name=MatureTestInstructionContainerInformation,proto3" json:"MatureTestInstructionContainerInformation,omitempty"` // The Basic information for the Matures TestInstruction
	CreatedAndUpdatedInformation              *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage              `protobuf:"bytes,2,opt,name=CreatedAndUpdatedInformation,proto3" json:"CreatedAndUpdatedInformation,omitempty"`                           // Information regarding who did what and when
}

func (x *MatureTestInstructionContainerInformationMessage) Reset() {
	*x = MatureTestInstructionContainerInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatureTestInstructionContainerInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatureTestInstructionContainerInformationMessage) ProtoMessage() {}

func (x *MatureTestInstructionContainerInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatureTestInstructionContainerInformationMessage.ProtoReflect.Descriptor instead.
func (*MatureTestInstructionContainerInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{6}
}

func (x *MatureTestInstructionContainerInformationMessage) GetMatureTestInstructionContainerInformation() *MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage {
	if x != nil {
		return x.MatureTestInstructionContainerInformation
	}
	return nil
}

func (x *MatureTestInstructionContainerInformationMessage) GetCreatedAndUpdatedInformation() *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage {
	if x != nil {
		return x.CreatedAndUpdatedInformation
	}
	return nil
}

// Message holding one Mature TestInstructionContainer which exist in a TestCase
type MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicTestInstructionContainerInformation  *BasicTestInstructionContainerInformationMessage  `protobuf:"bytes,1,opt,name=BasicTestInstructionContainerInformation,proto3" json:"BasicTestInstructionContainerInformation,omitempty"`   //Data is used to describe the basic information for the TestInstructionContainer
	MatureTestInstructionContainerInformation *MatureTestInstructionContainerInformationMessage `protobuf:"bytes,2,opt,name=MatureTestInstructionContainerInformation,proto3" json:"MatureTestInstructionContainerInformation,omitempty"` // Information about the Mature TestInstructionContainer
}

func (x *MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage) Reset() {
	*x = MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage) ProtoMessage() {}

func (x *MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage.ProtoReflect.Descriptor instead.
func (*MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{3, 0}
}

func (x *MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage) GetBasicTestInstructionContainerInformation() *BasicTestInstructionContainerInformationMessage {
	if x != nil {
		return x.BasicTestInstructionContainerInformation
	}
	return nil
}

func (x *MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage) GetMatureTestInstructionContainerInformation() *MatureTestInstructionContainerInformationMessage {
	if x != nil {
		return x.MatureTestInstructionContainerInformation
	}
	return nil
}

// Message holding All basic information that can be shown in GUI but can't be changed by the user
type BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainUuid                       string               `protobuf:"bytes,1,opt,name=DomainUuid,proto3" json:"DomainUuid,omitempty"`                                             // The Domain, UUID, who created the immature TestInstructionContainer
	DomainName                       string               `protobuf:"bytes,2,opt,name=DomainName,proto3" json:"DomainName,omitempty"`                                             // The Domain, Name, who created the immature TestInstructionContainer
	TestInstructionContainerUuid     string               `protobuf:"bytes,3,opt,name=TestInstructionContainerUuid,proto3" json:"TestInstructionContainerUuid,omitempty"`         // TestInstructionContainer UUID, set by Client system
	TestInstructionContainerName     string               `protobuf:"bytes,4,opt,name=TestInstructionContainerName,proto3" json:"TestInstructionContainerName,omitempty"`         // TestInstructionContainer Name, set by Client system
	TestInstructionContainerTypeUuid string               `protobuf:"bytes,5,opt,name=TestInstructionContainerTypeUuid,proto3" json:"TestInstructionContainerTypeUuid,omitempty"` // The Type(Group), Uuid, of TestInstructionContainer
	TestInstructionContainerTypeName string               `protobuf:"bytes,6,opt,name=TestInstructionContainerTypeName,proto3" json:"TestInstructionContainerTypeName,omitempty"` // The Type(Group), Name, of TestInstructionContainer
	Deprecated                       bool                 `protobuf:"varint,7,opt,name=Deprecated,proto3" json:"Deprecated,omitempty"`                                            // Indicates that this TestInstructionContainer shouldn't be used anymore
	MajorVersionNumber               uint32               `protobuf:"varint,8,opt,name=MajorVersionNumber,proto3" json:"MajorVersionNumber,omitempty"`                            // Change in Major Version Number means that user must act on change
	MinorVersionNumber               uint32               `protobuf:"varint,9,opt,name=MinorVersionNumber,proto3" json:"MinorVersionNumber,omitempty"`                            // Change in Minor Version Number means that user must NOT act on change
	UpdatedTimeStamp                 *timestamp.Timestamp `protobuf:"bytes,10,opt,name=UpdatedTimeStamp,proto3" json:"UpdatedTimeStamp,omitempty"`                                // The TimeStamp when the TestInstructionContainer was last updated by the client system
	TestInstructionContainerColor    string               `protobuf:"bytes,11,opt,name=TestInstructionContainerColor,proto3" json:"TestInstructionContainerColor,omitempty"`      // The color used for presenting the TestInstructionContainer, e.g. #FAF437
	TCRuleDeletion                   string               `protobuf:"bytes,14,opt,name=TCRuleDeletion,proto3" json:"TCRuleDeletion,omitempty"`                                    // The Deletion Rule for this TestInstructionContainer
	TCRuleSwap                       string               `protobuf:"bytes,15,opt,name=TCRuleSwap,proto3" json:"TCRuleSwap,omitempty"`                                            // The Swap Rule for this TestInstructionContainer
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) Reset() {
	*x = BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) ProtoMessage() {
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage.ProtoReflect.Descriptor instead.
func (*BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{4, 0}
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetDomainUuid() string {
	if x != nil {
		return x.DomainUuid
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetDomainName() string {
	if x != nil {
		return x.DomainName
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetTestInstructionContainerUuid() string {
	if x != nil {
		return x.TestInstructionContainerUuid
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetTestInstructionContainerName() string {
	if x != nil {
		return x.TestInstructionContainerName
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetTestInstructionContainerTypeUuid() string {
	if x != nil {
		return x.TestInstructionContainerTypeUuid
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetTestInstructionContainerTypeName() string {
	if x != nil {
		return x.TestInstructionContainerTypeName
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetMajorVersionNumber() uint32 {
	if x != nil {
		return x.MajorVersionNumber
	}
	return 0
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetMinorVersionNumber() uint32 {
	if x != nil {
		return x.MinorVersionNumber
	}
	return 0
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetUpdatedTimeStamp() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedTimeStamp
	}
	return nil
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetTestInstructionContainerColor() string {
	if x != nil {
		return x.TestInstructionContainerColor
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetTCRuleDeletion() string {
	if x != nil {
		return x.TCRuleDeletion
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage) GetTCRuleSwap() string {
	if x != nil {
		return x.TCRuleSwap
	}
	return ""
}

// Message holding all Basic information that can be shown in GUI and can be changed by the user
type BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestInstructionContainerDescription   string `protobuf:"bytes,7,opt,name=TestInstructionContainerDescription,proto3" json:"TestInstructionContainerDescription,omitempty"`     // The description of the TestInstructionContainer
	TestInstructionContainerMouseOverText string `protobuf:"bytes,8,opt,name=TestInstructionContainerMouseOverText,proto3" json:"TestInstructionContainerMouseOverText,omitempty"` // The mouse over text when hovering over TestInstructionContainer
}

func (x *BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage) Reset() {
	*x = BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage) ProtoMessage() {
}

func (x *BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage.ProtoReflect.Descriptor instead.
func (*BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{4, 1}
}

func (x *BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage) GetTestInstructionContainerDescription() string {
	if x != nil {
		return x.TestInstructionContainerDescription
	}
	return ""
}

func (x *BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage) GetTestInstructionContainerMouseOverText() string {
	if x != nil {
		return x.TestInstructionContainerMouseOverText
	}
	return ""
}

// Message holding all Basic information that is not directly shown in GUI and can't be changed by the user
type BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,10,opt,name=Enabled,proto3" json:"Enabled,omitempty"` // TestInstructionContainer can be disabled when the user shouldn't use it anymore
}

func (x *BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage) Reset() {
	*x = BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage) ProtoMessage() {
}

func (x *BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage.ProtoReflect.Descriptor instead.
func (*BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{4, 2}
}

func (x *BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Message holding all attributes supported by a TestInstructionContainer, can be changed by the user
type BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestInstructionContainerExecutionType TestInstructionContainerExecutionTypeEnum `protobuf:"varint,1,opt,name=TestInstructionContainerExecutionType,proto3,enum=fenixTestCaseBuilderServerGrpcApi.TestInstructionContainerExecutionTypeEnum" json:"TestInstructionContainerExecutionType,omitempty"` // Should children in the TestInstructionContainer be Serial or Parallel executed
}

func (x *BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage) Reset() {
	*x = BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage) ProtoMessage() {
}

func (x *BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage.ProtoReflect.Descriptor instead.
func (*BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{4, 3}
}

func (x *BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage) GetTestInstructionContainerExecutionType() TestInstructionContainerExecutionTypeEnum {
	if x != nil {
		return x.TestInstructionContainerExecutionType
	}
	return TestInstructionContainerExecutionTypeEnum_TestInstructionContainerExecutionTypeEnum_DEFAULT_NOT_SET
}

// Message holding one DropZone
type ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DropZoneUuid                            string                                                                                                                       `protobuf:"bytes,1,opt,name=DropZoneUuid,proto3" json:"DropZoneUuid,omitempty"`                                                       // A DropZone, UUID, for the TestInstructionContainer
	DropZoneName                            string                                                                                                                       `protobuf:"bytes,2,opt,name=DropZoneName,proto3" json:"DropZoneName,omitempty"`                                                       // A DropZone, Name, for the TestInstructionContainer
	DropZoneDescription                     string                                                                                                                       `protobuf:"bytes,3,opt,name=DropZoneDescription,proto3" json:"DropZoneDescription,omitempty"`                                         // Description of the DropZone
	DropZoneMouseOver                       string                                                                                                                       `protobuf:"bytes,4,opt,name=DropZoneMouseOver,proto3" json:"DropZoneMouseOver,omitempty"`                                             // The mouse over text for the DropZone
	DropZoneColor                           string                                                                                                                       `protobuf:"bytes,5,opt,name=DropZoneColor,proto3" json:"DropZoneColor,omitempty"`                                                     // The color used for presenting the DropsZone, e.g. #FAF437
	DropZonePreSetTestInstructionAttributes []*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage `protobuf:"bytes,6,rep,name=DropZonePreSetTestInstructionAttributes,proto3" json:"DropZonePreSetTestInstructionAttributes,omitempty"` // A list of the attributes and their pre-set values
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) Reset() {
	*x = ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) ProtoMessage() {}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage.ProtoReflect.Descriptor instead.
func (*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) GetDropZoneUuid() string {
	if x != nil {
		return x.DropZoneUuid
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) GetDropZoneName() string {
	if x != nil {
		return x.DropZoneName
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) GetDropZoneDescription() string {
	if x != nil {
		return x.DropZoneDescription
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) GetDropZoneMouseOver() string {
	if x != nil {
		return x.DropZoneMouseOver
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) GetDropZoneColor() string {
	if x != nil {
		return x.DropZoneColor
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage) GetDropZonePreSetTestInstructionAttributes() []*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage {
	if x != nil {
		return x.DropZonePreSetTestInstructionAttributes
	}
	return nil
}

// Message holding one attribute with its pre-set value
type ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestInstructionAttributeType TestInstructionAttributeTypeEnum                                                                                                                     `protobuf:"varint,1,opt,name=TestInstructionAttributeType,proto3,enum=fenixTestCaseBuilderServerGrpcApi.TestInstructionAttributeTypeEnum" json:"TestInstructionAttributeType,omitempty"`                                                                                                         // Defines witch type attribute; TEXTBOX, COMBOBOX...
	TestInstructionAttributeUuid string                                                                                                                                               `protobuf:"bytes,2,opt,name=TestInstructionAttributeUuid,proto3" json:"TestInstructionAttributeUuid,omitempty"`                                                                                                                                                                                  // The unique uuid for the TestInstructionAttribute, set by client system
	TestInstructionAttributeName string                                                                                                                                               `protobuf:"bytes,3,opt,name=TestInstructionAttributeName,proto3" json:"TestInstructionAttributeName,omitempty"`                                                                                                                                                                                  // The name of the TestInstructionAttribute
	AttributeValueAsString       string                                                                                                                                               `protobuf:"bytes,4,opt,name=AttributeValueAsString,proto3" json:"AttributeValueAsString,omitempty"`                                                                                                                                                                                              // The String-representation of the value
	AttributeValueUuid           string                                                                                                                                               `protobuf:"bytes,5,opt,name=AttributeValueUuid,proto3" json:"AttributeValueUuid,omitempty"`                                                                                                                                                                                                      // Combo-boxes can us a UUID as unique value behind the text visible in the combo-box
	AttributeActionCommand       ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum `protobuf:"varint,6,opt,name=AttributeActionCommand,proto3,enum=fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum" json:"AttributeActionCommand,omitempty"` // Decides what to do with Attribute
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) Reset() {
	*x = ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) ProtoMessage() {
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage.ProtoReflect.Descriptor instead.
func (*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) GetTestInstructionAttributeType() TestInstructionAttributeTypeEnum {
	if x != nil {
		return x.TestInstructionAttributeType
	}
	return TestInstructionAttributeTypeEnum_TestInstructionAttributeTypeEnum_DEFAULT_NOT_SET
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) GetTestInstructionAttributeUuid() string {
	if x != nil {
		return x.TestInstructionAttributeUuid
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) GetTestInstructionAttributeName() string {
	if x != nil {
		return x.TestInstructionAttributeName
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) GetAttributeValueAsString() string {
	if x != nil {
		return x.AttributeValueAsString
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) GetAttributeValueUuid() string {
	if x != nil {
		return x.AttributeValueUuid
	}
	return ""
}

func (x *ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage) GetAttributeActionCommand() ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum {
	if x != nil {
		return x.AttributeActionCommand
	}
	return ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum_DEFAULT_NOT_SET
}

// Message holding the mature basic information about the TestInstruction
type MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestCaseUuid                       string `protobuf:"bytes,1,opt,name=TestCaseUuid,proto3" json:"TestCaseUuid,omitempty"`                                             // Reference to the TestCase where this TestInstructionContainer exists
	TestInstructionContainerMatureUuid string `protobuf:"bytes,2,opt,name=TestInstructionContainerMatureUuid,proto3" json:"TestInstructionContainerMatureUuid,omitempty"` // The Mature UUID that the TestInstructionContainer gets when it is added to the TestCase
}

func (x *MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage) Reset() {
	*x = MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage) ProtoMessage() {
}

func (x *MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage.ProtoReflect.Descriptor instead.
func (*MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{6, 0}
}

func (x *MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage) GetTestCaseUuid() string {
	if x != nil {
		return x.TestCaseUuid
	}
	return ""
}

func (x *MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage) GetTestInstructionContainerMatureUuid() string {
	if x != nil {
		return x.TestInstructionContainerMatureUuid
	}
	return ""
}

// Message holding information about changes to the TestInstructionContainer, who and when
type MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddedToTestCaseTimeStamp       *timestamp.Timestamp `protobuf:"bytes,1,opt,name=AddedToTestCaseTimeStamp,proto3" json:"AddedToTestCaseTimeStamp,omitempty"`             // The TimeStamp when the TestInstructionContainer was first added to the TestCase
	AddedToTestCaseByUserId        string               `protobuf:"bytes,2,opt,name=AddedToTestCaseByUserId,proto3" json:"AddedToTestCaseByUserId,omitempty"`               // Which user added the TestInstructionContainer to the TestCase
	LastUpdatedInTestCaseTimeStamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=LastUpdatedInTestCaseTimeStamp,proto3" json:"LastUpdatedInTestCaseTimeStamp,omitempty"` // The TimeStamp when the TestInstructionContainer was updated in the TestCase
	LastUpdatedInTestCaseByUserId  string               `protobuf:"bytes,4,opt,name=LastUpdatedInTestCaseByUserId,proto3" json:"LastUpdatedInTestCaseByUserId,omitempty"`   // Which user was the last to update the TestInstructionContainer in the TestCase
	DeletedFromTestCaseTimeStamp   *timestamp.Timestamp `protobuf:"bytes,5,opt,name=DeletedFromTestCaseTimeStamp,proto3" json:"DeletedFromTestCaseTimeStamp,omitempty"`     // The TimeStamp when the TestInstructionContainer was deleted from the TestCase
	DeletedFromTestCaseByUserId    string               `protobuf:"bytes,6,opt,name=DeletedFromTestCaseByUserId,proto3" json:"DeletedFromTestCaseByUserId,omitempty"`       // Which user deleted the TestInstructionContainer from the TestCase
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) Reset() {
	*x = MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) ProtoMessage() {
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage.ProtoReflect.Descriptor instead.
func (*MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) Descriptor() ([]byte, []int) {
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP(), []int{6, 1}
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) GetAddedToTestCaseTimeStamp() *timestamp.Timestamp {
	if x != nil {
		return x.AddedToTestCaseTimeStamp
	}
	return nil
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) GetAddedToTestCaseByUserId() string {
	if x != nil {
		return x.AddedToTestCaseByUserId
	}
	return ""
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) GetLastUpdatedInTestCaseTimeStamp() *timestamp.Timestamp {
	if x != nil {
		return x.LastUpdatedInTestCaseTimeStamp
	}
	return nil
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) GetLastUpdatedInTestCaseByUserId() string {
	if x != nil {
		return x.LastUpdatedInTestCaseByUserId
	}
	return ""
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) GetDeletedFromTestCaseTimeStamp() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedFromTestCaseTimeStamp
	}
	return nil
}

func (x *MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage) GetDeletedFromTestCaseByUserId() string {
	if x != nil {
		return x.DeletedFromTestCaseByUserId
	}
	return ""
}

var File_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto protoreflect.FileDescriptor

var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDesc = []byte{
	0x0a, 0x85, 0x01, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2f,
	0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x5f, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x7c, 0x46, 0x65,
	0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x5f, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x41, 0x6e, 0x64, 0x45,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x7a, 0x46, 0x65, 0x6e, 0x69,
	0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x5f, 0x54, 0x65, 0x73, 0x74, 0x43,
	0x61, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x41, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x96, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69,
	0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x22, 0xae, 0x03, 0x0a, 0x41, 0x53, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x96, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x1c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64,
	0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x93, 0x01, 0x0a,
	0x1f, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x1f, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x22, 0x90, 0x04, 0x0a, 0x27, 0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0xae,
	0x01, 0x0a, 0x28, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x52, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73,
	0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72,
	0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x28, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0xb7, 0x01, 0x0a, 0x2b, 0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x55, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x2b, 0x49, 0x6d,
	0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7a, 0x0a, 0x18, 0x49, 0x6d, 0x6d,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x75, 0x62, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e,
	0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x18, 0x49, 0x6d, 0x6d,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x75, 0x62, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xf3, 0x04, 0x0a, 0x26, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0xb9, 0x01, 0x0a, 0x1f, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6f, 0x2e, 0x66, 0x65, 0x6e,
	0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x4d,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1f, 0x4d, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0x8c, 0x03, 0x0a,
	0x25, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x28, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x66, 0x65, 0x6e, 0x69,
	0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x28, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb1, 0x01, 0x0a, 0x29, 0x4d, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e,
	0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x29, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe6, 0x0f, 0x0a, 0x2f,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0xad, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x75, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x16, 0x4e, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0xa4, 0x01, 0x0a, 0x13, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x72, 0x2e,
	0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x13, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xb1, 0x01, 0x0a, 0x19, 0x49, 0x6e, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x73, 0x2e, 0x66, 0x65, 0x6e,
	0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x19, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xe5, 0x01, 0x0a, 0x2a, 0x45,
	0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x84, 0x01, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70,
	0x63, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x2a, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x1a, 0xda, 0x05, 0x0a, 0x22, 0x4e, 0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x42, 0x0a,
	0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x4a, 0x0a, 0x20, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x4a, 0x0a,
	0x20, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x4d, 0x61, 0x6a,
	0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x4d, 0x69, 0x6e,
	0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x44, 0x0a, 0x1d, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x43, 0x52, 0x75, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x54, 0x43, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x43, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x43, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x1a,
	0xc9, 0x01, 0x0a, 0x1f, 0x45, 0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x23, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x23, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x25, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x25, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x6f,
	0x75, 0x73, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x1a, 0x3c, 0x0a, 0x20, 0x49,
	0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x1a, 0xd8, 0x01, 0x0a, 0x31, 0x45, 0x64,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0xa2, 0x01, 0x0a, 0x25, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4c, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x41, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x25, 0x54,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xf9, 0x0b, 0x0a, 0x32, 0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x12,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e,
	0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x6e, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x6d,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x12, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x1a, 0xa1, 0x0a, 0x0a,
	0x18, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f,
	0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x72, 0x6f,
	0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x4d,
	0x6f, 0x75, 0x73, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4f, 0x76, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f,
	0x6e, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0xf7, 0x01, 0x0a, 0x27, 0x44, 0x72, 0x6f, 0x70,
	0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x9c, 0x01, 0x2e, 0x66, 0x65, 0x6e,
	0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x49,
	0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x5a,
	0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x5a,
	0x6f, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x27, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f,
	0x6e, 0x65, 0x50, 0x72, 0x65, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x1a, 0xbc, 0x06, 0x0a, 0x2d, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x72,
	0x65, 0x53, 0x65, 0x74, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x66, 0x65, 0x6e,
	0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a,
	0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x42, 0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a,
	0x12, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0xf0, 0x01,
	0x0a, 0x16, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0xb7,
	0x01, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63,
	0x41, 0x70, 0x69, 0x2e, 0x49, 0x6d, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x50, 0x72, 0x65, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x16, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x2e, 0x0a, 0x2a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x44, 0x45,
	0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12,
	0x24, 0x0a, 0x20, 0x55, 0x53, 0x45, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5a, 0x4f, 0x4e, 0x45, 0x5f,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42,
	0x55, 0x54, 0x45, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f,
	0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x54,
	0x45, 0x53, 0x54, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x22, 0x85, 0x09, 0x0a, 0x30, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0xe3, 0x01, 0x0a, 0x29, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x84, 0x01, 0x2e, 0x66, 0x65, 0x6e,
	0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x4d,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x29, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xbb, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x77, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa6, 0x01, 0x0a, 0x30, 0x4d, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x4e, 0x0a, 0x22, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x22,
	0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x1a, 0x83, 0x04, 0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x6e,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x18, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x54, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x18, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54,
	0x6f, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x38, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x17, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x1e,
	0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x1e, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x54,
	0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x44, 0x0a, 0x1d, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x40, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x67, 0x6f,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescOnce sync.Once
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescData = file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDesc
)

func file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescGZIP() []byte {
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescOnce.Do(func() {
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescData)
	})
	return file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDescData
}

var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_goTypes = []interface{}{
	(ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage_AttributeActionCommandEnum)(0), // 0: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage.DropZonePreSetTestInstructionAttributeMessage.AttributeActionCommandEnum
	(*ListAllTestInstructionContainersForSpecificTestCaseRequestMessage)(nil),                                                                                 // 1: fenixTestCaseBuilderServerGrpcApi.ListAllTestInstructionContainersForSpecificTestCaseRequestMessage
	(*SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage)(nil),                                                                                 // 2: fenixTestCaseBuilderServerGrpcApi.SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage
	(*ImmatureTestInstructionContainerMessage)(nil),                                                                                                           // 3: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerMessage
	(*MatureTestInstructionContainersMessage)(nil),                                                                                                            // 4: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainersMessage
	(*BasicTestInstructionContainerInformationMessage)(nil),                                                                                                   // 5: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage
	(*ImmatureTestInstructionContainerInformationMessage)(nil),                                                                                                // 6: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage
	(*MatureTestInstructionContainerInformationMessage)(nil),                                                                                                  // 7: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage
	(*MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage)(nil),                                                                      // 8: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainersMessage.MatureTestInstructionContainerMessage
	(*BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage)(nil),                                                                // 9: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.NonEditableBasicInformationMessage
	(*BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage)(nil),                                                                   // 10: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.EditableBasicInformationMessage
	(*BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage)(nil),                                                                  // 11: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.InvisibleBasicInformationMessage
	(*BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage)(nil),                                                 // 12: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.EditableTestInstructionContainerAttributesMessage
	(*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage)(nil),                                                                       // 13: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage
	(*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage)(nil),                         // 14: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage.DropZonePreSetTestInstructionAttributeMessage
	(*MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage)(nil),                                                 // 15: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.MatureTestInstructionContainerInformationMessage
	(*MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage)(nil),                                                              // 16: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.CreatedAndUpdatedInformationMessage
	(CurrentFenixTestCaseBuilderProtoFileVersionEnum)(0),                                                                                                      // 17: fenixTestCaseBuilderServerGrpcApi.CurrentFenixTestCaseBuilderProtoFileVersionEnum
	(*ImmatureElementModelMessage)(nil),                                                                                                                       // 18: fenixTestCaseBuilderServerGrpcApi.ImmatureElementModelMessage
	(*timestamp.Timestamp)(nil),                                                                                                                               // 19: google.protobuf.Timestamp
	(TestInstructionContainerExecutionTypeEnum)(0),                                                                                                            // 20: fenixTestCaseBuilderServerGrpcApi.TestInstructionContainerExecutionTypeEnum
	(TestInstructionAttributeTypeEnum)(0),                                                                                                                     // 21: fenixTestCaseBuilderServerGrpcApi.TestInstructionAttributeTypeEnum
}
var file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_depIdxs = []int32{
	17, // 0: fenixTestCaseBuilderServerGrpcApi.ListAllTestInstructionContainersForSpecificTestCaseRequestMessage.ProtoFileVersionUsedByClient:type_name -> fenixTestCaseBuilderServerGrpcApi.CurrentFenixTestCaseBuilderProtoFileVersionEnum
	17, // 1: fenixTestCaseBuilderServerGrpcApi.SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage.ProtoFileVersionUsedByClient:type_name -> fenixTestCaseBuilderServerGrpcApi.CurrentFenixTestCaseBuilderProtoFileVersionEnum
	4,  // 2: fenixTestCaseBuilderServerGrpcApi.SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage.MatureTestInstructionContainers:type_name -> fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainersMessage
	5,  // 3: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerMessage.BasicTestInstructionContainerInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage
	6,  // 4: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerMessage.ImmatureTestInstructionContainerInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage
	18, // 5: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerMessage.ImmatureSubTestCaseModel:type_name -> fenixTestCaseBuilderServerGrpcApi.ImmatureElementModelMessage
	8,  // 6: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainersMessage.MatureTestInstructionContainers:type_name -> fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainersMessage.MatureTestInstructionContainerMessage
	9,  // 7: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.NonEditableInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.NonEditableBasicInformationMessage
	10, // 8: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.EditableInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.EditableBasicInformationMessage
	11, // 9: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.InvisibleBasicInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.InvisibleBasicInformationMessage
	12, // 10: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.EditableTestInstructionContainerAttributes:type_name -> fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.EditableTestInstructionContainerAttributesMessage
	13, // 11: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZones:type_name -> fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage
	15, // 12: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.MatureTestInstructionContainerInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.MatureTestInstructionContainerInformationMessage
	16, // 13: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.CreatedAndUpdatedInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.CreatedAndUpdatedInformationMessage
	5,  // 14: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainersMessage.MatureTestInstructionContainerMessage.BasicTestInstructionContainerInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage
	7,  // 15: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainersMessage.MatureTestInstructionContainerMessage.MatureTestInstructionContainerInformation:type_name -> fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage
	19, // 16: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.NonEditableBasicInformationMessage.UpdatedTimeStamp:type_name -> google.protobuf.Timestamp
	20, // 17: fenixTestCaseBuilderServerGrpcApi.BasicTestInstructionContainerInformationMessage.EditableTestInstructionContainerAttributesMessage.TestInstructionContainerExecutionType:type_name -> fenixTestCaseBuilderServerGrpcApi.TestInstructionContainerExecutionTypeEnum
	14, // 18: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage.DropZonePreSetTestInstructionAttributes:type_name -> fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage.DropZonePreSetTestInstructionAttributeMessage
	21, // 19: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage.DropZonePreSetTestInstructionAttributeMessage.TestInstructionAttributeType:type_name -> fenixTestCaseBuilderServerGrpcApi.TestInstructionAttributeTypeEnum
	0,  // 20: fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage.DropZonePreSetTestInstructionAttributeMessage.AttributeActionCommand:type_name -> fenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionContainerInformationMessage.AvailableDropZoneMessage.DropZonePreSetTestInstructionAttributeMessage.AttributeActionCommandEnum
	19, // 21: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.CreatedAndUpdatedInformationMessage.AddedToTestCaseTimeStamp:type_name -> google.protobuf.Timestamp
	19, // 22: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.CreatedAndUpdatedInformationMessage.LastUpdatedInTestCaseTimeStamp:type_name -> google.protobuf.Timestamp
	19, // 23: fenixTestCaseBuilderServerGrpcApi.MatureTestInstructionContainerInformationMessage.CreatedAndUpdatedInformationMessage.DeletedFromTestCaseTimeStamp:type_name -> google.protobuf.Timestamp
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() {
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_init()
}
func file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_init() {
	if File_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto != nil {
		return
	}
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_GeneralMessagesAndEnums_proto_init()
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestCaseModelMessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAllTestInstructionContainersForSpecificTestCaseRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmatureTestInstructionContainerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatureTestInstructionContainersMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicTestInstructionContainerInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmatureTestInstructionContainerInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatureTestInstructionContainerInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatureTestInstructionContainersMessage_MatureTestInstructionContainerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicTestInstructionContainerInformationMessage_NonEditableBasicInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicTestInstructionContainerInformationMessage_EditableBasicInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicTestInstructionContainerInformationMessage_InvisibleBasicInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicTestInstructionContainerInformationMessage_EditableTestInstructionContainerAttributesMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmatureTestInstructionContainerInformationMessage_AvailableDropZoneMessage_DropZonePreSetTestInstructionAttributeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatureTestInstructionContainerInformationMessage_MatureTestInstructionContainerInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatureTestInstructionContainerInformationMessage_CreatedAndUpdatedInformationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_goTypes,
		DependencyIndexes: file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_depIdxs,
		EnumInfos:         file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_enumTypes,
		MessageInfos:      file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_msgTypes,
	}.Build()
	File_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto = out.File
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_rawDesc = nil
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_goTypes = nil
	file_FenixTestCaseBuilderServer_fenixTestCaseBuilderServerGrpcApi_fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages_proto_depIdxs = nil
}
