syntax = "proto3";
package fenixTestCaseBuilderServerGrpcApi;
option go_package = "./go_grpc_api";

import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_GeneralMessagesAndEnums.proto";

// AllTemplateRepositoryConnectionParameters
// Message holding parameters to be used to get all Templates from all Repositories
message AllTemplateRepositoryConnectionParameters {
  ClientSystemIdentificationMessage ClientSystemIdentification = 1; // Identifies Client System and Proto-file version used
  repeated TemplateRepositoryConnectionParameters AllTemplateRepositories = 2; // A list with all parameters to all different template repositories
  MessageSignatureDataMessage MessageSignatureData = 3; // The message with the message that was signed and the signature}
}

// TemplateRepositoryConnectionParameters
// Message holding parameters to be used to get a Template or group of Templates from one Repository
// TotalApiUrl := "repositoryApiUrl" + "/" +  repositoryOwner + "/" + repositoryName + "/contents" + repositoryPath
// TotalApiUrl := "https://api.github.com/repos/jlambert68/FenixTesterGui/contents"
message TemplateRepositoryConnectionParameters {
  string RepositoryApiUrlName = 1; // The name the user will see in UI when to chose Template-repository
  string RepositoryApiUrl = 2; // the base URL to the API e.g. "https://api.github.com/repos"
  string RepositoryOwner = 3; // The owner of the repository e.g. "jlambert68"
  string RepositoryName = 4; // The name of the repository e.g. "FenixTesterGui"
  string RepositoryPath = 5; // The path within the repository e.g "" for storing templates in base of repository
  string GitHubApiKey = 6; // The key used to access the files in this repository
}


// ListAllRepositoryApiUrlsResponseMessage
// Message having all url:s to all repositories that a user is allowed to use. Based on same logic as Owner-Domain
message ListAllRepositoryApiUrlsResponseMessage {
  AckNackResponse ackNackResponse = 1; // Hold all error messages, if there are any. Message also gives of everything was OK or not
  repeated RepositoryApiUrlResponseMessage RepositoryApiUrls = 2; // A list of all URLs tha the user can use when picking templates in TestCases
}

// RepositoryApiUrlResponseMessage
// One Repository with name, url and it GithubApiKey
message RepositoryApiUrlResponseMessage {
  string RepositoryApiUrlName = 1; // The name the user will see in UI when to chose Template-repository
  string RepositoryApiFullUrl = 2; // The full URL to the API, for TesterGui to use, e.g. "https://api.github.com/repos/jlambert68/FenixTesterGui/contents"
  string GitHubApiKey = 3; // The key used to access the files in this repository
}


// TestCaseTemplateFilesMessage
// Message holding all Template files
message     TestCaseTemplateFilesMessage {
  repeated TestCaseTemplateFileMessage TestCaseTemplateFile = 1; // A list with all templates
  string HashForAllFiles = 2; // Hash calculated from all file-hashes, using Fenix standard method
}


// TestCaseTemplateFileMessage
// Message holding one Template file
message TestCaseTemplateFileMessage {
  string Name = 1; // E.g "TODO.txt"
  string URL = 2; // E.g "https://api.github.com/repos/jlambert68/FenixTesterGui/contents/TODO.txt?ref=master"
  string DownloadURL = 3; // E.g "https://raw.githubusercontent.com/jlambert68/FenixTesterGui/master/TODO.txt"
  string SHA = 4; // E.g "8d8a4611838f57328ca3ba2a091686911659ef33"
  int64 Size = 5; // E.g 114
  string FileContentAsString = 6; // The file as readable text
  string FileHash = 7; // The sha256 of the file
}
