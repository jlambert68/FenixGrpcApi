syntax = "proto3";
package fenixTestCaseBuilderServerGrpcApi;
option go_package = "./go_grpc_api";
import "google/protobuf/timestamp.proto";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_GeneralMessagesAndEnums.proto";

// All messages in this file is used to define the TestCase-model, and how it was constructed

// ****************************************************************************************************
// TestCaseModelMessage

// A message holding the complete model of the TestCase together with the steps to create the model
message TestCaseModelMessage {
  string TestCaseUuid = 1; // The TestCase, UUID, set by TestCase-builder
  string TestCaseName = 2; // The TestCase, Name, set in TestCase-builder
  string TestCaseModelAsString = 3; // The string representation of the TestCase, e.g. 'TC=B1-TICX(B11-TI-B12-TIX-B11X)-B1' - The last TIX could be used to clean up the environment

  string FirstMatureElementUuid = 4; // The UUID of first element in the TestCase-model
  repeated TestCaseModelElementMessage TestCaseModelElements = 5; // All elements in the TestCase

  // The model of The TestCase
  repeated TestCaseModelCommandMessage TestCaseModelCommands = 6; // All commands that was used to create the TestCase
  // One command that describe one change to the TestCase
  message TestCaseModelCommandMessage {
    TestCaseCommandTypeEnum TestCaseCommandType = 1; // The type of command that was used
    string FirstParameter = 2; // The first parameter, an UUID, in the command
    string SecondParameter = 3; // The second parameter, an UUID, in the command
  }
}

// ****************************************************************************************************
// ImmatureSubTestCaseModelMessage

// A message holding the model for Immature elements, e.g. TestInstructions and pre-created TestInstructionContainers
message ImmatureElementModelMessage {
  string FirstImmatureElementUuid = 1; // The UUID of first element in the Immature element structure
  repeated TestCaseModelElementMessage TestCaseModelElements = 2; // All elements in the immature element structure
}

// ****************************************************************************************************
// Objects used in several places

// One TestCaseElement, that is not a TestInstructionContainer, that hold type, reference to previous, next and parent elements
message TestCaseModelElementMessage {
  string OriginalElementUuid = 1; // The original elements UUID, e.g. a TestInstruction unique UUID set by client system
  string OriginalElementName = 2; // The original elements Name, e.g. a TestInstruction Name set by client system
  string MatureElementUuid = 3; // The UUID that is created in the TestCase to give it a unique id
  string PreviousElementUuid = 4;  // The UUID of the previous element. When there are no previous element then this field is populated with current element UUID
  string NextElementUuid = 5;  // The UUID of the previous element. When there are no next element then this field is populated with current element UUID
  string FirstChildElementUuid = 6; // The UUID of the first child element. Only applicable when this is a TestInstructionContainer
  string ParentElementUuid = 7; // The UUID of the parent, TestInstructionContainer. Only applicable when this is the last element inside a TestInstructionContainer
  TestCaseModelElementTypeEnum TestCaseModelElementType = 8; // The specific type of this TestCase-element
}



