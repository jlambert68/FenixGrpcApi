// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace FenixTestCaseBuilderServerGrpcApi {

  /// <summary>Holder for reflection information generated from FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionMessages.proto</summary>
  public static partial class FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CnxGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpX1Rlc3RJbnN0cnVjdGlvbk1lc3NhZ2VzLnByb3RvEiFmZW5peFRl",
            "c3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkaH2dvb2dsZS9wcm90b2J1Zi90",
            "aW1lc3RhbXAucHJvdG8afEZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyL2Zl",
            "bml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS9mZW5peFRlc3RDYXNl",
            "QnVpbGRlclNlcnZlckdycGNBcGlfR2VuZXJhbE1lc3NhZ2VzQW5kRW51bXMu",
            "cHJvdG8aekZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyL2Zlbml4VGVzdENh",
            "c2VCdWlsZGVyU2VydmVyR3JwY0FwaS9mZW5peFRlc3RDYXNlQnVpbGRlclNl",
            "cnZlckdycGNBcGlfVGVzdENhc2VNb2RlbE1lc3NhZ2VzLnByb3RvItoBCjhM",
            "aXN0QWxsVGVzdEluc3RydWN0aW9uc0ZvclNwZWNpZmljVGVzdENhc2VSZXF1",
            "ZXN0TWVzc2FnZRIOCgZVc2VySWQYASABKAkSeAocUHJvdG9GaWxlVmVyc2lv",
            "blVzZWRCeUNsaWVudBgCIAEoDjJSLmZlbml4VGVzdENhc2VCdWlsZGVyU2Vy",
            "dmVyR3JwY0FwaS5DdXJyZW50RmVuaXhUZXN0Q2FzZUJ1aWxkZXJQcm90b0Zp",
            "bGVWZXJzaW9uRW51bRIUCgxUZXN0Q2FzZVV1aWQYAyABKAkivAIKOFNhdmVB",
            "bGxUZXN0SW5zdHJ1Y3Rpb25zRm9yU3BlY2lmaWNUZXN0Q2FzZVJlcXVlc3RN",
            "ZXNzYWdlEg4KBlVzZXJJZBgBIAEoCRJ4ChxQcm90b0ZpbGVWZXJzaW9uVXNl",
            "ZEJ5Q2xpZW50GAIgASgOMlIuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpLkN1cnJlbnRGZW5peFRlc3RDYXNlQnVpbGRlclByb3RvRmlsZVZl",
            "cnNpb25FbnVtEhQKDFRlc3RDYXNlVXVpZBgDIAEoCRJgChZNYXR1cmVUZXN0",
            "SW5zdHJ1Y3Rpb25zGAQgAygLMkAuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2",
            "ZXJHcnBjQXBpLk1hdHVyZVRlc3RJbnN0cnVjdGlvbnNNZXNzYWdlIvACCh5J",
            "bW1hdHVyZVRlc3RJbnN0cnVjdGlvbk1lc3NhZ2UScgofQmFzaWNUZXN0SW5z",
            "dHJ1Y3Rpb25JbmZvcm1hdGlvbhgBIAEoCzJJLmZlbml4VGVzdENhc2VCdWls",
            "ZGVyU2VydmVyR3JwY0FwaS5CYXNpY1Rlc3RJbnN0cnVjdGlvbkluZm9ybWF0",
            "aW9uTWVzc2FnZRJ4CiJJbW1hdHVyZVRlc3RJbnN0cnVjdGlvbkluZm9ybWF0",
            "aW9uGAIgASgLMkwuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBp",
            "LkltbWF0dXJlVGVzdEluc3RydWN0aW9uSW5mb3JtYXRpb25NZXNzYWdlEmAK",
            "GEltbWF0dXJlU3ViVGVzdENhc2VNb2RlbBgDIAEoCzI+LmZlbml4VGVzdENh",
            "c2VCdWlsZGVyU2VydmVyR3JwY0FwaS5JbW1hdHVyZUVsZW1lbnRNb2RlbE1l",
            "c3NhZ2UiqQMKHU1hdHVyZVRlc3RJbnN0cnVjdGlvbnNNZXNzYWdlEn0KFk1h",
            "dHVyZVRlc3RJbnN0cnVjdGlvbnMYASADKAsyXS5mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGkuTWF0dXJlVGVzdEluc3RydWN0aW9uc01lc3Nh",
            "Z2UuTWF0dXJlVGVzdEluc3RydWN0aW9uTWVzc2FnZRqIAgocTWF0dXJlVGVz",
            "dEluc3RydWN0aW9uTWVzc2FnZRJyCh9CYXNpY1Rlc3RJbnN0cnVjdGlvbklu",
            "Zm9ybWF0aW9uGAEgASgLMkkuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpLkJhc2ljVGVzdEluc3RydWN0aW9uSW5mb3JtYXRpb25NZXNzYWdl",
            "EnQKIE1hdHVyZVRlc3RJbnN0cnVjdGlvbkluZm9ybWF0aW9uGAIgASgLMkou",
            "ZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLk1hdHVyZVRlc3RJ",
            "bnN0cnVjdGlvbkluZm9ybWF0aW9uTWVzc2FnZSKJCAomQmFzaWNUZXN0SW5z",
            "dHJ1Y3Rpb25JbmZvcm1hdGlvbk1lc3NhZ2USjAEKFk5vbkVkaXRhYmxlSW5m",
            "b3JtYXRpb24YASABKAsybC5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdy",
            "cGNBcGkuQmFzaWNUZXN0SW5zdHJ1Y3Rpb25JbmZvcm1hdGlvbk1lc3NhZ2Uu",
            "Tm9uRWRpdGFibGVCYXNpY0luZm9ybWF0aW9uTWVzc2FnZRKGAQoTRWRpdGFi",
            "bGVJbmZvcm1hdGlvbhgCIAEoCzJpLmZlbml4VGVzdENhc2VCdWlsZGVyU2Vy",
            "dmVyR3JwY0FwaS5CYXNpY1Rlc3RJbnN0cnVjdGlvbkluZm9ybWF0aW9uTWVz",
            "c2FnZS5FZGl0YWJsZUJhc2ljSW5mb3JtYXRpb25NZXNzYWdlEo0BChlJbnZp",
            "c2libGVCYXNpY0luZm9ybWF0aW9uGAMgASgLMmouZmVuaXhUZXN0Q2FzZUJ1",
            "aWxkZXJTZXJ2ZXJHcnBjQXBpLkJhc2ljVGVzdEluc3RydWN0aW9uSW5mb3Jt",
            "YXRpb25NZXNzYWdlLkludmlzaWJsZUJhc2ljSW5mb3JtYXRpb25NZXNzYWdl",
            "GpQDCiJOb25FZGl0YWJsZUJhc2ljSW5mb3JtYXRpb25NZXNzYWdlEhIKCkRv",
            "bWFpblV1aWQYASABKAkSEgoKRG9tYWluTmFtZRgCIAEoCRIbChNUZXN0SW5z",
            "dHJ1Y3Rpb25VdWlkGAMgASgJEhsKE1Rlc3RJbnN0cnVjdGlvbk5hbWUYBCAB",
            "KAkSHwoXVGVzdEluc3RydWN0aW9uVHlwZVV1aWQYBSABKAkSHwoXVGVzdElu",
            "c3RydWN0aW9uVHlwZU5hbWUYBiABKAkSEgoKRGVwcmVjYXRlZBgHIAEoCBIa",
            "ChJNYWpvclZlcnNpb25OdW1iZXIYCCABKA0SGgoSTWlub3JWZXJzaW9uTnVt",
            "YmVyGAkgASgNEjQKEFVwZGF0ZWRUaW1lU3RhbXAYCiABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEhwKFFRlc3RJbnN0cnVjdGlvbkNvbG9yGAsg",
            "ASgJEhYKDlRDUnVsZURlbGV0aW9uGA4gASgJEhIKClRDUnVsZVN3YXAYDyAB",
            "KAkaawofRWRpdGFibGVCYXNpY0luZm9ybWF0aW9uTWVzc2FnZRIiChpUZXN0",
            "SW5zdHJ1Y3Rpb25EZXNjcmlwdGlvbhgBIAEoCRIkChxUZXN0SW5zdHJ1Y3Rp",
            "b25Nb3VzZU92ZXJUZXh0GAIgASgJGjMKIEludmlzaWJsZUJhc2ljSW5mb3Jt",
            "YXRpb25NZXNzYWdlEg8KB0VuYWJsZWQYASABKAgitAYKKUltbWF0dXJlVGVz",
            "dEluc3RydWN0aW9uSW5mb3JtYXRpb25NZXNzYWdlEoEBChJBdmFpbGFibGVE",
            "cm9wWm9uZXMYEiADKAsyZS5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdy",
            "cGNBcGkuSW1tYXR1cmVUZXN0SW5zdHJ1Y3Rpb25JbmZvcm1hdGlvbk1lc3Nh",
            "Z2UuQXZhaWxhYmxlRHJvcFpvbmVNZXNzYWdlGoIFChhBdmFpbGFibGVEcm9w",
            "Wm9uZU1lc3NhZ2USFAoMRHJvcFpvbmVVdWlkGAEgASgJEhQKDERyb3Bab25l",
            "TmFtZRgCIAEoCRIbChNEcm9wWm9uZURlc2NyaXB0aW9uGAMgASgJEhkKEURy",
            "b3Bab25lTW91c2VPdmVyGAQgASgJEhUKDURyb3Bab25lQ29sb3IYBSABKAkS",
            "xQEKJ0Ryb3Bab25lUHJlU2V0VGVzdEluc3RydWN0aW9uQXR0cmlidXRlcxgG",
            "IAMoCzKTAS5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuSW1t",
            "YXR1cmVUZXN0SW5zdHJ1Y3Rpb25JbmZvcm1hdGlvbk1lc3NhZ2UuQXZhaWxh",
            "YmxlRHJvcFpvbmVNZXNzYWdlLkRyb3Bab25lUHJlU2V0VGVzdEluc3RydWN0",
            "aW9uQXR0cmlidXRlTWVzc2FnZRqiAgotRHJvcFpvbmVQcmVTZXRUZXN0SW5z",
            "dHJ1Y3Rpb25BdHRyaWJ1dGVNZXNzYWdlEmkKHFRlc3RJbnN0cnVjdGlvbkF0",
            "dHJpYnV0ZVR5cGUYASABKA4yQy5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZl",
            "ckdycGNBcGkuVGVzdEluc3RydWN0aW9uQXR0cmlidXRlVHlwZUVudW0SJAoc",
            "VGVzdEluc3RydWN0aW9uQXR0cmlidXRlVXVpZBgCIAEoCRIkChxUZXN0SW5z",
            "dHJ1Y3Rpb25BdHRyaWJ1dGVOYW1lGAMgASgJEh4KFkF0dHJpYnV0ZVZhbHVl",
            "QXNTdHJpbmcYBCABKAkSGgoSQXR0cmlidXRlVmFsdWVVdWlkGAUgASgJItwc",
            "CidNYXR1cmVUZXN0SW5zdHJ1Y3Rpb25JbmZvcm1hdGlvbk1lc3NhZ2USpgEK",
            "JU1hdHVyZUJhc2ljVGVzdEluc3RydWN0aW9uSW5mb3JtYXRpb24YASABKAsy",
            "dy5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuTWF0dXJlVGVz",
            "dEluc3RydWN0aW9uSW5mb3JtYXRpb25NZXNzYWdlLk1hdHVyZUJhc2ljVGVz",
            "dEluc3RydWN0aW9uSW5mb3JtYXRpb25NZXNzYWdlEpQBChxDcmVhdGVkQW5k",
            "VXBkYXRlZEluZm9ybWF0aW9uGAIgASgLMm4uZmVuaXhUZXN0Q2FzZUJ1aWxk",
            "ZXJTZXJ2ZXJHcnBjQXBpLk1hdHVyZVRlc3RJbnN0cnVjdGlvbkluZm9ybWF0",
            "aW9uTWVzc2FnZS5DcmVhdGVkQW5kVXBkYXRlZEluZm9ybWF0aW9uTWVzc2Fn",
            "ZRKRAQodVGVzdEluc3RydWN0aW9uQXR0cmlidXRlc0xpc3QYAyADKAsyai5m",
            "ZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuTWF0dXJlVGVzdElu",
            "c3RydWN0aW9uSW5mb3JtYXRpb25NZXNzYWdlLlRlc3RJbnN0cnVjdGlvbkF0",
            "dHJpYnV0ZU1lc3NhZ2Ua/QEKLE1hdHVyZUJhc2ljVGVzdEluc3RydWN0aW9u",
            "SW5mb3JtYXRpb25NZXNzYWdlEhQKDFRlc3RDYXNlVXVpZBgBIAEoCRIhChlU",
            "ZXN0SW5zdHJ1Y3Rpb25NYXR1cmVVdWlkGAIgASgJEioKIlBhcmVudFRlc3RJ",
            "bnN0cnVjdGlvbkNvbnRhaW5lclV1aWQYAyABKAkSMAooUGFyZW50VGVzdElu",
            "c3RydWN0aW9uQ29udGFpbmVyTWF0dXJlVXVpZBgEIAEoCRIaChJDaG9zZW5E",
            "cm9wWm9uZVV1aWQYBSABKAkSGgoSQ2hvc2VuRHJvcFpvbmVOYW1lGAYgASgJ",
            "GtYCCiNDcmVhdGVkQW5kVXBkYXRlZEluZm9ybWF0aW9uTWVzc2FnZRI8ChhB",
            "ZGRlZFRvVGVzdENhc2VUaW1lU3RhbXAYASABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEh8KF0FkZGVkVG9UZXN0Q2FzZUJ5VXNlcklkGAIgASgJ",
            "EkIKHkxhc3RVcGRhdGVkSW5UZXN0Q2FzZVRpbWVTdGFtcBgDIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASJQodTGFzdFVwZGF0ZWRJblRlc3RD",
            "YXNlQnlVc2VySWQYBCABKAkSQAocRGVsZXRlZEZyb21UZXN0Q2FzZVRpbWVT",
            "dGFtcBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASIwobRGVs",
            "ZXRlZEZyb21UZXN0Q2FzZUJ5VXNlcklkGAYgASgJGoMUCh9UZXN0SW5zdHJ1",
            "Y3Rpb25BdHRyaWJ1dGVNZXNzYWdlEq0BChhCYXNlQXR0cmlidXRlSW5mb3Jt",
            "YXRpb24YASABKAsyigEuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBj",
            "QXBpLk1hdHVyZVRlc3RJbnN0cnVjdGlvbkluZm9ybWF0aW9uTWVzc2FnZS5U",
            "ZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1dGVNZXNzYWdlLkJhc2VBdHRyaWJ1dGVJ",
            "bmZvcm1hdGlvbk1lc3NhZ2USpQEKFEF0dHJpYnV0ZUluZm9ybWF0aW9uGAIg",
            "ASgLMoYBLmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5NYXR1",
            "cmVUZXN0SW5zdHJ1Y3Rpb25JbmZvcm1hdGlvbk1lc3NhZ2UuVGVzdEluc3Ry",
            "dWN0aW9uQXR0cmlidXRlTWVzc2FnZS5BdHRyaWJ1dGVJbmZvcm1hdGlvbk1l",
            "c3NhZ2Ua5QQKH0Jhc2VBdHRyaWJ1dGVJbmZvcm1hdGlvbk1lc3NhZ2USJAoc",
            "VGVzdEluc3RydWN0aW9uQXR0cmlidXRlVXVpZBgBIAEoCRIkChxUZXN0SW5z",
            "dHJ1Y3Rpb25BdHRyaWJ1dGVOYW1lGAIgASgJEigKIFRlc3RJbnN0cnVjdGlv",
            "bkF0dHJpYnV0ZVR5cGVVdWlkGAMgASgJEigKIFRlc3RJbnN0cnVjdGlvbkF0",
            "dHJpYnV0ZVR5cGVOYW1lGAQgASgJEisKI1Rlc3RJbnN0cnVjdGlvbkF0dHJp",
            "YnV0ZURlc2NyaXB0aW9uGAUgASgJEikKIVRlc3RJbnN0cnVjdGlvbkF0dHJp",
            "YnV0ZU1vdXNlT3ZlchgGIAEoCRInCh9UZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1",
            "dGVWaXNpYmxlGAcgASgIEiYKHlRlc3RJbnN0cnVjdGlvbkF0dHJpYnV0ZUVu",
            "YWJsZRgIIAEoCBIpCiFUZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1dGVNYW5kYXRv",
            "cnkYCSABKAgSNQotVGVzdEluc3RydWN0aW9uQXR0cmlidXRlVmlzaWJsZUlu",
            "VGVzdENhc2VBcmVhGAogASgIEiwKJFRlc3RJbnN0cnVjdGlvbkF0dHJpYnV0",
            "ZUlzRGVwcmVjYXRlZBgLIAEoCBJpChxUZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1",
            "dGVUeXBlGAwgASgOMkMuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBj",
            "QXBpLlRlc3RJbnN0cnVjdGlvbkF0dHJpYnV0ZVR5cGVFbnVtGp8MChtBdHRy",
            "aWJ1dGVJbmZvcm1hdGlvbk1lc3NhZ2US0gEKFGlucHV0VGV4dEJveFByb3Bl",
            "cnR5GAEgASgLMrMBLmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0Fw",
            "aS5NYXR1cmVUZXN0SW5zdHJ1Y3Rpb25JbmZvcm1hdGlvbk1lc3NhZ2UuVGVz",
            "dEluc3RydWN0aW9uQXR0cmlidXRlTWVzc2FnZS5BdHRyaWJ1dGVJbmZvcm1h",
            "dGlvbk1lc3NhZ2UuVGVzdEluc3RydWN0aW9uQXR0cmlidXRlSW5wdXRUZXh0",
            "Qm94UHJvcGVydHkS1AEKFUlucHV0Q29tYm9Cb3hQcm9wZXJ0eRgCIAEoCzK0",
            "AS5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuTWF0dXJlVGVz",
            "dEluc3RydWN0aW9uSW5mb3JtYXRpb25NZXNzYWdlLlRlc3RJbnN0cnVjdGlv",
            "bkF0dHJpYnV0ZU1lc3NhZ2UuQXR0cmlidXRlSW5mb3JtYXRpb25NZXNzYWdl",
            "LlRlc3RJbnN0cnVjdGlvbkF0dHJpYnV0ZUlucHV0Q29tYm9Cb3hQcm9wZXJ0",
            "eRLcAQoZSW5wdXRGaWxlU2VsZWN0b3JQcm9wZXJ0eRgDIAEoCzK4AS5mZW5p",
            "eFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuTWF0dXJlVGVzdEluc3Ry",
            "dWN0aW9uSW5mb3JtYXRpb25NZXNzYWdlLlRlc3RJbnN0cnVjdGlvbkF0dHJp",
            "YnV0ZU1lc3NhZ2UuQXR0cmlidXRlSW5mb3JtYXRpb25NZXNzYWdlLlRlc3RJ",
            "bnN0cnVjdGlvbkF0dHJpYnV0ZUlucHV0RmlsZVNlbGVjdG9yUHJvcGVydHka",
            "pwIKLFRlc3RJbnN0cnVjdGlvbkF0dHJpYnV0ZUlucHV0VGV4dEJveFByb3Bl",
            "cnR5Ei8KJ1Rlc3RJbnN0cnVjdGlvbkF0dHJpYnV0ZUlucHV0VGV4dEJvVXVp",
            "ZBgBIAEoCRIwCihUZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1dGVJbnB1dFRleHRC",
            "b3hOYW1lGAIgASgJEhcKD1RleHRCb3hFZGl0YWJsZRgDIAEoCBIYChBUZXh0",
            "Qm94SW5wdXRNYXNrGAQgASgJEiAKGFRleHRCb3hBdHRyaWJ1dGVUeXBlVXVp",
            "ZBgFIAEoCRIgChhUZXh0Qm94QXR0cmlidXRlVHlwZU5hbWUYBiABKAkSHQoV",
            "VGV4dEJveEF0dHJpYnV0ZVZhbHVlGAcgASgJGsoCCi1UZXN0SW5zdHJ1Y3Rp",
            "b25BdHRyaWJ1dGVJbnB1dENvbWJvQm94UHJvcGVydHkSLAokVGVzdEluc3Ry",
            "dWN0aW9uQXR0cmlidXRlQ29tYm9Cb3hVdWlkGAEgASgJEiwKJFRlc3RJbnN0",
            "cnVjdGlvbkF0dHJpYnV0ZUNvbWJvQm94TmFtZRgCIAEoCRIYChBDb21ib0Jv",
            "eEVkaXRhYmxlGAMgASgIEhkKEUNvbWJvQm94SW5wdXRNYXNrGAQgASgJEiEK",
            "GUNvbWJvQm94QXR0cmlidXRlVHlwZVV1aWQYBSABKAkSIQoZQ29tYm9Cb3hB",
            "dHRyaWJ1dGVUeXBlTmFtZRgGIAEoCRIiChpDb21ib0JveEF0dHJpYnV0ZVZh",
            "bHVlVXVpZBgHIAEoCRIeChZDb21ib0JveEF0dHJpYnV0ZVZhbHVlGAggASgJ",
            "Gv0BCjFUZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1dGVJbnB1dEZpbGVTZWxlY3Rv",
            "clByb3BlcnR5EjAKKFRlc3RJbnN0cnVjdGlvbkF0dHJpYnV0ZUZpbGVTZWxl",
            "Y3RvclV1aWQYASABKAkSMAooVGVzdEluc3RydWN0aW9uQXR0cmlidXRlRmls",
            "ZVNlbGVjdG9yTmFtZRgCIAEoCRIxCilUZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1",
            "dGVGaWxlUmVmZXJlbmNlVXVpZBgDIAEoCRIxCilUZXN0SW5zdHJ1Y3Rpb25B",
            "dHRyaWJ1dGVGaWxlUmVmZXJlbmNlTmFtZRgEIAEoCUIPWg0uL2dvX2dycGNf",
            "YXBpYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiGeneralMessagesAndEnumsReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.ListAllTestInstructionsForSpecificTestCaseRequestMessage), global::FenixTestCaseBuilderServerGrpcApi.ListAllTestInstructionsForSpecificTestCaseRequestMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient", "TestCaseUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.SaveAllTestInstructionsForSpecificTestCaseRequestMessage), global::FenixTestCaseBuilderServerGrpcApi.SaveAllTestInstructionsForSpecificTestCaseRequestMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient", "TestCaseUuid", "MatureTestInstructions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionMessage), global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionMessage.Parser, new[]{ "BasicTestInstructionInformation", "ImmatureTestInstructionInformation", "ImmatureSubTestCaseModel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Parser, new[]{ "MatureTestInstructions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Types.MatureTestInstructionMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Types.MatureTestInstructionMessage.Parser, new[]{ "BasicTestInstructionInformation", "MatureTestInstructionInformation" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Parser, new[]{ "NonEditableInformation", "EditableInformation", "InvisibleBasicInformation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.NonEditableBasicInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.NonEditableBasicInformationMessage.Parser, new[]{ "DomainUuid", "DomainName", "TestInstructionUuid", "TestInstructionName", "TestInstructionTypeUuid", "TestInstructionTypeName", "Deprecated", "MajorVersionNumber", "MinorVersionNumber", "UpdatedTimeStamp", "TestInstructionColor", "TCRuleDeletion", "TCRuleSwap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.EditableBasicInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.EditableBasicInformationMessage.Parser, new[]{ "TestInstructionDescription", "TestInstructionMouseOverText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.InvisibleBasicInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.InvisibleBasicInformationMessage.Parser, new[]{ "Enabled" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Parser, new[]{ "AvailableDropZones" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage), global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Parser, new[]{ "DropZoneUuid", "DropZoneName", "DropZoneDescription", "DropZoneMouseOver", "DropZoneColor", "DropZonePreSetTestInstructionAttributes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage), global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage.Parser, new[]{ "TestInstructionAttributeType", "TestInstructionAttributeUuid", "TestInstructionAttributeName", "AttributeValueAsString", "AttributeValueUuid" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Parser, new[]{ "MatureBasicTestInstructionInformation", "CreatedAndUpdatedInformation", "TestInstructionAttributesList" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.MatureBasicTestInstructionInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.MatureBasicTestInstructionInformationMessage.Parser, new[]{ "TestCaseUuid", "TestInstructionMatureUuid", "ParentTestInstructionContainerUuid", "ParentTestInstructionContainerMatureUuid", "ChosenDropZoneUuid", "ChosenDropZoneName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.CreatedAndUpdatedInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.CreatedAndUpdatedInformationMessage.Parser, new[]{ "AddedToTestCaseTimeStamp", "AddedToTestCaseByUserId", "LastUpdatedInTestCaseTimeStamp", "LastUpdatedInTestCaseByUserId", "DeletedFromTestCaseTimeStamp", "DeletedFromTestCaseByUserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Parser, new[]{ "BaseAttributeInformation", "AttributeInformation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.BaseAttributeInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.BaseAttributeInformationMessage.Parser, new[]{ "TestInstructionAttributeUuid", "TestInstructionAttributeName", "TestInstructionAttributeTypeUuid", "TestInstructionAttributeTypeName", "TestInstructionAttributeDescription", "TestInstructionAttributeMouseOver", "TestInstructionAttributeVisible", "TestInstructionAttributeEnable", "TestInstructionAttributeMandatory", "TestInstructionAttributeVisibleInTestCaseArea", "TestInstructionAttributeIsDeprecated", "TestInstructionAttributeType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Parser, new[]{ "InputTextBoxProperty", "InputComboBoxProperty", "InputFileSelectorProperty" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputTextBoxProperty), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputTextBoxProperty.Parser, new[]{ "TestInstructionAttributeInputTextBoUuid", "TestInstructionAttributeInputTextBoxName", "TextBoxEditable", "TextBoxInputMask", "TextBoxAttributeTypeUuid", "TextBoxAttributeTypeName", "TextBoxAttributeValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputComboBoxProperty), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputComboBoxProperty.Parser, new[]{ "TestInstructionAttributeComboBoxUuid", "TestInstructionAttributeComboBoxName", "ComboBoxEditable", "ComboBoxInputMask", "ComboBoxAttributeTypeUuid", "ComboBoxAttributeTypeName", "ComboBoxAttributeValueUuid", "ComboBoxAttributeValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputFileSelectorProperty), global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputFileSelectorProperty.Parser, new[]{ "TestInstructionAttributeFileSelectorUuid", "TestInstructionAttributeFileSelectorName", "TestInstructionAttributeFileReferenceUuid", "TestInstructionAttributeFileReferenceName" }, null, null, null, null)})})})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message holding information about who is the user and which TestCase that the TestInstructions belong to
  /// </summary>
  public sealed partial class ListAllTestInstructionsForSpecificTestCaseRequestMessage : pb::IMessage<ListAllTestInstructionsForSpecificTestCaseRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListAllTestInstructionsForSpecificTestCaseRequestMessage> _parser = new pb::MessageParser<ListAllTestInstructionsForSpecificTestCaseRequestMessage>(() => new ListAllTestInstructionsForSpecificTestCaseRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAllTestInstructionsForSpecificTestCaseRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAllTestInstructionsForSpecificTestCaseRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAllTestInstructionsForSpecificTestCaseRequestMessage(ListAllTestInstructionsForSpecificTestCaseRequestMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      testCaseUuid_ = other.testCaseUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAllTestInstructionsForSpecificTestCaseRequestMessage Clone() {
      return new ListAllTestInstructionsForSpecificTestCaseRequestMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseUuid" field.</summary>
    public const int TestCaseUuidFieldNumber = 3;
    private string testCaseUuid_ = "";
    /// <summary>
    /// The TestCase, UUID, that is TestInstructions belong to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestCaseUuid {
      get { return testCaseUuid_; }
      set {
        testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAllTestInstructionsForSpecificTestCaseRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAllTestInstructionsForSpecificTestCaseRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      if (TestCaseUuid != other.TestCaseUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAllTestInstructionsForSpecificTestCaseRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      if (other.TestCaseUuid.Length != 0) {
        TestCaseUuid = other.TestCaseUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding information about user, TestCaseUUID and the TestInstructions
  /// </summary>
  public sealed partial class SaveAllTestInstructionsForSpecificTestCaseRequestMessage : pb::IMessage<SaveAllTestInstructionsForSpecificTestCaseRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SaveAllTestInstructionsForSpecificTestCaseRequestMessage> _parser = new pb::MessageParser<SaveAllTestInstructionsForSpecificTestCaseRequestMessage>(() => new SaveAllTestInstructionsForSpecificTestCaseRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveAllTestInstructionsForSpecificTestCaseRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAllTestInstructionsForSpecificTestCaseRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAllTestInstructionsForSpecificTestCaseRequestMessage(SaveAllTestInstructionsForSpecificTestCaseRequestMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      testCaseUuid_ = other.testCaseUuid_;
      matureTestInstructions_ = other.matureTestInstructions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAllTestInstructionsForSpecificTestCaseRequestMessage Clone() {
      return new SaveAllTestInstructionsForSpecificTestCaseRequestMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseUuid" field.</summary>
    public const int TestCaseUuidFieldNumber = 3;
    private string testCaseUuid_ = "";
    /// <summary>
    /// The TestCase, UUID, that is TestInstructions belong to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestCaseUuid {
      get { return testCaseUuid_; }
      set {
        testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MatureTestInstructions" field.</summary>
    public const int MatureTestInstructionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage> _repeated_matureTestInstructions_codec
        = pb::FieldCodec.ForMessage(34, global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Parser);
    private readonly pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage> matureTestInstructions_ = new pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage>();
    /// <summary>
    /// All TestInstructions to be saved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage> MatureTestInstructions {
      get { return matureTestInstructions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveAllTestInstructionsForSpecificTestCaseRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveAllTestInstructionsForSpecificTestCaseRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      if (TestCaseUuid != other.TestCaseUuid) return false;
      if(!matureTestInstructions_.Equals(other.matureTestInstructions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
      hash ^= matureTestInstructions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      matureTestInstructions_.WriteTo(output, _repeated_matureTestInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      matureTestInstructions_.WriteTo(ref output, _repeated_matureTestInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
      }
      size += matureTestInstructions_.CalculateSize(_repeated_matureTestInstructions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveAllTestInstructionsForSpecificTestCaseRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      if (other.TestCaseUuid.Length != 0) {
        TestCaseUuid = other.TestCaseUuid;
      }
      matureTestInstructions_.Add(other.matureTestInstructions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
          case 34: {
            matureTestInstructions_.AddEntriesFrom(input, _repeated_matureTestInstructions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
          case 34: {
            matureTestInstructions_.AddEntriesFrom(ref input, _repeated_matureTestInstructions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding one Immature TestInstruction which is Dragged n Dropped into the TestCase
  /// </summary>
  public sealed partial class ImmatureTestInstructionMessage : pb::IMessage<ImmatureTestInstructionMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmatureTestInstructionMessage> _parser = new pb::MessageParser<ImmatureTestInstructionMessage>(() => new ImmatureTestInstructionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImmatureTestInstructionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionMessage(ImmatureTestInstructionMessage other) : this() {
      basicTestInstructionInformation_ = other.basicTestInstructionInformation_ != null ? other.basicTestInstructionInformation_.Clone() : null;
      immatureTestInstructionInformation_ = other.immatureTestInstructionInformation_ != null ? other.immatureTestInstructionInformation_.Clone() : null;
      immatureSubTestCaseModel_ = other.immatureSubTestCaseModel_ != null ? other.immatureSubTestCaseModel_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionMessage Clone() {
      return new ImmatureTestInstructionMessage(this);
    }

    /// <summary>Field number for the "BasicTestInstructionInformation" field.</summary>
    public const int BasicTestInstructionInformationFieldNumber = 1;
    private global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage basicTestInstructionInformation_;
    /// <summary>
    /// Data is used to describe the basic information for the TestInstruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage BasicTestInstructionInformation {
      get { return basicTestInstructionInformation_; }
      set {
        basicTestInstructionInformation_ = value;
      }
    }

    /// <summary>Field number for the "ImmatureTestInstructionInformation" field.</summary>
    public const int ImmatureTestInstructionInformationFieldNumber = 2;
    private global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage immatureTestInstructionInformation_;
    /// <summary>
    /// The immature information for the TestInstruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage ImmatureTestInstructionInformation {
      get { return immatureTestInstructionInformation_; }
      set {
        immatureTestInstructionInformation_ = value;
      }
    }

    /// <summary>Field number for the "ImmatureSubTestCaseModel" field.</summary>
    public const int ImmatureSubTestCaseModelFieldNumber = 3;
    private global::SubCustodyServer.ImmatureElementModelMessage immatureSubTestCaseModel_;
    /// <summary>
    /// The immature element model for this TestInstruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.ImmatureElementModelMessage ImmatureSubTestCaseModel {
      get { return immatureSubTestCaseModel_; }
      set {
        immatureSubTestCaseModel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImmatureTestInstructionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImmatureTestInstructionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicTestInstructionInformation, other.BasicTestInstructionInformation)) return false;
      if (!object.Equals(ImmatureTestInstructionInformation, other.ImmatureTestInstructionInformation)) return false;
      if (!object.Equals(ImmatureSubTestCaseModel, other.ImmatureSubTestCaseModel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (basicTestInstructionInformation_ != null) hash ^= BasicTestInstructionInformation.GetHashCode();
      if (immatureTestInstructionInformation_ != null) hash ^= ImmatureTestInstructionInformation.GetHashCode();
      if (immatureSubTestCaseModel_ != null) hash ^= ImmatureSubTestCaseModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (basicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestInstructionInformation);
      }
      if (immatureTestInstructionInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ImmatureTestInstructionInformation);
      }
      if (immatureSubTestCaseModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ImmatureSubTestCaseModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (basicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestInstructionInformation);
      }
      if (immatureTestInstructionInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ImmatureTestInstructionInformation);
      }
      if (immatureSubTestCaseModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ImmatureSubTestCaseModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (basicTestInstructionInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicTestInstructionInformation);
      }
      if (immatureTestInstructionInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImmatureTestInstructionInformation);
      }
      if (immatureSubTestCaseModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImmatureSubTestCaseModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImmatureTestInstructionMessage other) {
      if (other == null) {
        return;
      }
      if (other.basicTestInstructionInformation_ != null) {
        if (basicTestInstructionInformation_ == null) {
          BasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage();
        }
        BasicTestInstructionInformation.MergeFrom(other.BasicTestInstructionInformation);
      }
      if (other.immatureTestInstructionInformation_ != null) {
        if (immatureTestInstructionInformation_ == null) {
          ImmatureTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage();
        }
        ImmatureTestInstructionInformation.MergeFrom(other.ImmatureTestInstructionInformation);
      }
      if (other.immatureSubTestCaseModel_ != null) {
        if (immatureSubTestCaseModel_ == null) {
          ImmatureSubTestCaseModel = new global::SubCustodyServer.ImmatureElementModelMessage();
        }
        ImmatureSubTestCaseModel.MergeFrom(other.ImmatureSubTestCaseModel);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicTestInstructionInformation_ == null) {
              BasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage();
            }
            input.ReadMessage(BasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (immatureTestInstructionInformation_ == null) {
              ImmatureTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage();
            }
            input.ReadMessage(ImmatureTestInstructionInformation);
            break;
          }
          case 26: {
            if (immatureSubTestCaseModel_ == null) {
              ImmatureSubTestCaseModel = new global::SubCustodyServer.ImmatureElementModelMessage();
            }
            input.ReadMessage(ImmatureSubTestCaseModel);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (basicTestInstructionInformation_ == null) {
              BasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage();
            }
            input.ReadMessage(BasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (immatureTestInstructionInformation_ == null) {
              ImmatureTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage();
            }
            input.ReadMessage(ImmatureTestInstructionInformation);
            break;
          }
          case 26: {
            if (immatureSubTestCaseModel_ == null) {
              ImmatureSubTestCaseModel = new global::SubCustodyServer.ImmatureElementModelMessage();
            }
            input.ReadMessage(ImmatureSubTestCaseModel);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding a list of TestInstructions, received from DB or to be sent to DB
  /// </summary>
  public sealed partial class MatureTestInstructionsMessage : pb::IMessage<MatureTestInstructionsMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatureTestInstructionsMessage> _parser = new pb::MessageParser<MatureTestInstructionsMessage>(() => new MatureTestInstructionsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatureTestInstructionsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionsMessage(MatureTestInstructionsMessage other) : this() {
      matureTestInstructions_ = other.matureTestInstructions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionsMessage Clone() {
      return new MatureTestInstructionsMessage(this);
    }

    /// <summary>Field number for the "MatureTestInstructions" field.</summary>
    public const int MatureTestInstructionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Types.MatureTestInstructionMessage> _repeated_matureTestInstructions_codec
        = pb::FieldCodec.ForMessage(10, global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Types.MatureTestInstructionMessage.Parser);
    private readonly pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Types.MatureTestInstructionMessage> matureTestInstructions_ = new pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Types.MatureTestInstructionMessage>();
    /// <summary>
    /// A list of list of TestInstructions, received from DB or to be sent to DB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Types.MatureTestInstructionMessage> MatureTestInstructions {
      get { return matureTestInstructions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatureTestInstructionsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatureTestInstructionsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!matureTestInstructions_.Equals(other.matureTestInstructions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= matureTestInstructions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      matureTestInstructions_.WriteTo(output, _repeated_matureTestInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      matureTestInstructions_.WriteTo(ref output, _repeated_matureTestInstructions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += matureTestInstructions_.CalculateSize(_repeated_matureTestInstructions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatureTestInstructionsMessage other) {
      if (other == null) {
        return;
      }
      matureTestInstructions_.Add(other.matureTestInstructions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            matureTestInstructions_.AddEntriesFrom(input, _repeated_matureTestInstructions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            matureTestInstructions_.AddEntriesFrom(ref input, _repeated_matureTestInstructions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MatureTestInstructionsMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding one Mature TestInstruction which exist in a TestCase
      /// </summary>
      public sealed partial class MatureTestInstructionMessage : pb::IMessage<MatureTestInstructionMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MatureTestInstructionMessage> _parser = new pb::MessageParser<MatureTestInstructionMessage>(() => new MatureTestInstructionMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MatureTestInstructionMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionsMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureTestInstructionMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureTestInstructionMessage(MatureTestInstructionMessage other) : this() {
          basicTestInstructionInformation_ = other.basicTestInstructionInformation_ != null ? other.basicTestInstructionInformation_.Clone() : null;
          matureTestInstructionInformation_ = other.matureTestInstructionInformation_ != null ? other.matureTestInstructionInformation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureTestInstructionMessage Clone() {
          return new MatureTestInstructionMessage(this);
        }

        /// <summary>Field number for the "BasicTestInstructionInformation" field.</summary>
        public const int BasicTestInstructionInformationFieldNumber = 1;
        private global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage basicTestInstructionInformation_;
        /// <summary>
        /// Data is used to describe the basic information for the TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage BasicTestInstructionInformation {
          get { return basicTestInstructionInformation_; }
          set {
            basicTestInstructionInformation_ = value;
          }
        }

        /// <summary>Field number for the "MatureTestInstructionInformation" field.</summary>
        public const int MatureTestInstructionInformationFieldNumber = 2;
        private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage matureTestInstructionInformation_;
        /// <summary>
        /// Information about the Mature TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage MatureTestInstructionInformation {
          get { return matureTestInstructionInformation_; }
          set {
            matureTestInstructionInformation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MatureTestInstructionMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MatureTestInstructionMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(BasicTestInstructionInformation, other.BasicTestInstructionInformation)) return false;
          if (!object.Equals(MatureTestInstructionInformation, other.MatureTestInstructionInformation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (basicTestInstructionInformation_ != null) hash ^= BasicTestInstructionInformation.GetHashCode();
          if (matureTestInstructionInformation_ != null) hash ^= MatureTestInstructionInformation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (basicTestInstructionInformation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BasicTestInstructionInformation);
          }
          if (matureTestInstructionInformation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MatureTestInstructionInformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (basicTestInstructionInformation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BasicTestInstructionInformation);
          }
          if (matureTestInstructionInformation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MatureTestInstructionInformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (basicTestInstructionInformation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicTestInstructionInformation);
          }
          if (matureTestInstructionInformation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatureTestInstructionInformation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MatureTestInstructionMessage other) {
          if (other == null) {
            return;
          }
          if (other.basicTestInstructionInformation_ != null) {
            if (basicTestInstructionInformation_ == null) {
              BasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage();
            }
            BasicTestInstructionInformation.MergeFrom(other.BasicTestInstructionInformation);
          }
          if (other.matureTestInstructionInformation_ != null) {
            if (matureTestInstructionInformation_ == null) {
              MatureTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage();
            }
            MatureTestInstructionInformation.MergeFrom(other.MatureTestInstructionInformation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (basicTestInstructionInformation_ == null) {
                  BasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage();
                }
                input.ReadMessage(BasicTestInstructionInformation);
                break;
              }
              case 18: {
                if (matureTestInstructionInformation_ == null) {
                  MatureTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage();
                }
                input.ReadMessage(MatureTestInstructionInformation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (basicTestInstructionInformation_ == null) {
                  BasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage();
                }
                input.ReadMessage(BasicTestInstructionInformation);
                break;
              }
              case 18: {
                if (matureTestInstructionInformation_ == null) {
                  MatureTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage();
                }
                input.ReadMessage(MatureTestInstructionInformation);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message holding Basic information for one TestInstruction
  /// </summary>
  public sealed partial class BasicTestInstructionInformationMessage : pb::IMessage<BasicTestInstructionInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BasicTestInstructionInformationMessage> _parser = new pb::MessageParser<BasicTestInstructionInformationMessage>(() => new BasicTestInstructionInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicTestInstructionInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestInstructionInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestInstructionInformationMessage(BasicTestInstructionInformationMessage other) : this() {
      nonEditableInformation_ = other.nonEditableInformation_ != null ? other.nonEditableInformation_.Clone() : null;
      editableInformation_ = other.editableInformation_ != null ? other.editableInformation_.Clone() : null;
      invisibleBasicInformation_ = other.invisibleBasicInformation_ != null ? other.invisibleBasicInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestInstructionInformationMessage Clone() {
      return new BasicTestInstructionInformationMessage(this);
    }

    /// <summary>Field number for the "NonEditableInformation" field.</summary>
    public const int NonEditableInformationFieldNumber = 1;
    private global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.NonEditableBasicInformationMessage nonEditableInformation_;
    /// <summary>
    /// All Basic information that can be shown in GUI but can't be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.NonEditableBasicInformationMessage NonEditableInformation {
      get { return nonEditableInformation_; }
      set {
        nonEditableInformation_ = value;
      }
    }

    /// <summary>Field number for the "EditableInformation" field.</summary>
    public const int EditableInformationFieldNumber = 2;
    private global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.EditableBasicInformationMessage editableInformation_;
    /// <summary>
    /// All Basic information that can be shown in GUI and can be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.EditableBasicInformationMessage EditableInformation {
      get { return editableInformation_; }
      set {
        editableInformation_ = value;
      }
    }

    /// <summary>Field number for the "InvisibleBasicInformation" field.</summary>
    public const int InvisibleBasicInformationFieldNumber = 3;
    private global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.InvisibleBasicInformationMessage invisibleBasicInformation_;
    /// <summary>
    /// All Basic information that is not directly shown in GUI and can't be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.InvisibleBasicInformationMessage InvisibleBasicInformation {
      get { return invisibleBasicInformation_; }
      set {
        invisibleBasicInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicTestInstructionInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicTestInstructionInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NonEditableInformation, other.NonEditableInformation)) return false;
      if (!object.Equals(EditableInformation, other.EditableInformation)) return false;
      if (!object.Equals(InvisibleBasicInformation, other.InvisibleBasicInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nonEditableInformation_ != null) hash ^= NonEditableInformation.GetHashCode();
      if (editableInformation_ != null) hash ^= EditableInformation.GetHashCode();
      if (invisibleBasicInformation_ != null) hash ^= InvisibleBasicInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nonEditableInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EditableInformation);
      }
      if (invisibleBasicInformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InvisibleBasicInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nonEditableInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EditableInformation);
      }
      if (invisibleBasicInformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InvisibleBasicInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nonEditableInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EditableInformation);
      }
      if (invisibleBasicInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvisibleBasicInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicTestInstructionInformationMessage other) {
      if (other == null) {
        return;
      }
      if (other.nonEditableInformation_ != null) {
        if (nonEditableInformation_ == null) {
          NonEditableInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.NonEditableBasicInformationMessage();
        }
        NonEditableInformation.MergeFrom(other.NonEditableInformation);
      }
      if (other.editableInformation_ != null) {
        if (editableInformation_ == null) {
          EditableInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.EditableBasicInformationMessage();
        }
        EditableInformation.MergeFrom(other.EditableInformation);
      }
      if (other.invisibleBasicInformation_ != null) {
        if (invisibleBasicInformation_ == null) {
          InvisibleBasicInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.InvisibleBasicInformationMessage();
        }
        InvisibleBasicInformation.MergeFrom(other.InvisibleBasicInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nonEditableInformation_ == null) {
              NonEditableInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.NonEditableBasicInformationMessage();
            }
            input.ReadMessage(NonEditableInformation);
            break;
          }
          case 18: {
            if (editableInformation_ == null) {
              EditableInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.EditableBasicInformationMessage();
            }
            input.ReadMessage(EditableInformation);
            break;
          }
          case 26: {
            if (invisibleBasicInformation_ == null) {
              InvisibleBasicInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.InvisibleBasicInformationMessage();
            }
            input.ReadMessage(InvisibleBasicInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nonEditableInformation_ == null) {
              NonEditableInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.NonEditableBasicInformationMessage();
            }
            input.ReadMessage(NonEditableInformation);
            break;
          }
          case 18: {
            if (editableInformation_ == null) {
              EditableInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.EditableBasicInformationMessage();
            }
            input.ReadMessage(EditableInformation);
            break;
          }
          case 26: {
            if (invisibleBasicInformation_ == null) {
              InvisibleBasicInformation = new global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Types.InvisibleBasicInformationMessage();
            }
            input.ReadMessage(InvisibleBasicInformation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BasicTestInstructionInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding All basic information that can be shown in GUI but can't be changed by the user
      /// </summary>
      public sealed partial class NonEditableBasicInformationMessage : pb::IMessage<NonEditableBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NonEditableBasicInformationMessage> _parser = new pb::MessageParser<NonEditableBasicInformationMessage>(() => new NonEditableBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NonEditableBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage(NonEditableBasicInformationMessage other) : this() {
          domainUuid_ = other.domainUuid_;
          domainName_ = other.domainName_;
          testInstructionUuid_ = other.testInstructionUuid_;
          testInstructionName_ = other.testInstructionName_;
          testInstructionTypeUuid_ = other.testInstructionTypeUuid_;
          testInstructionTypeName_ = other.testInstructionTypeName_;
          deprecated_ = other.deprecated_;
          majorVersionNumber_ = other.majorVersionNumber_;
          minorVersionNumber_ = other.minorVersionNumber_;
          updatedTimeStamp_ = other.updatedTimeStamp_ != null ? other.updatedTimeStamp_.Clone() : null;
          testInstructionColor_ = other.testInstructionColor_;
          tCRuleDeletion_ = other.tCRuleDeletion_;
          tCRuleSwap_ = other.tCRuleSwap_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage Clone() {
          return new NonEditableBasicInformationMessage(this);
        }

        /// <summary>Field number for the "DomainUuid" field.</summary>
        public const int DomainUuidFieldNumber = 1;
        private string domainUuid_ = "";
        /// <summary>
        /// The Domain, UUID, to be tested with this TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DomainUuid {
          get { return domainUuid_; }
          set {
            domainUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DomainName" field.</summary>
        public const int DomainNameFieldNumber = 2;
        private string domainName_ = "";
        /// <summary>
        /// The Domain, Name, to be tested with this TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DomainName {
          get { return domainName_; }
          set {
            domainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionUuid" field.</summary>
        public const int TestInstructionUuidFieldNumber = 3;
        private string testInstructionUuid_ = "";
        /// <summary>
        /// TestInstruction UUID, set by Client system
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionUuid {
          get { return testInstructionUuid_; }
          set {
            testInstructionUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionName" field.</summary>
        public const int TestInstructionNameFieldNumber = 4;
        private string testInstructionName_ = "";
        /// <summary>
        /// TestInstruction Name, set by Client system
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionName {
          get { return testInstructionName_; }
          set {
            testInstructionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionTypeUuid" field.</summary>
        public const int TestInstructionTypeUuidFieldNumber = 5;
        private string testInstructionTypeUuid_ = "";
        /// <summary>
        /// The Type(Group), Uuid, of TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionTypeUuid {
          get { return testInstructionTypeUuid_; }
          set {
            testInstructionTypeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionTypeName" field.</summary>
        public const int TestInstructionTypeNameFieldNumber = 6;
        private string testInstructionTypeName_ = "";
        /// <summary>
        /// The Type(Group), Name, of TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionTypeName {
          get { return testInstructionTypeName_; }
          set {
            testInstructionTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Deprecated" field.</summary>
        public const int DeprecatedFieldNumber = 7;
        private bool deprecated_;
        /// <summary>
        /// Indicates that this TestInstruction shouldn't be used anymore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Deprecated {
          get { return deprecated_; }
          set {
            deprecated_ = value;
          }
        }

        /// <summary>Field number for the "MajorVersionNumber" field.</summary>
        public const int MajorVersionNumberFieldNumber = 8;
        private uint majorVersionNumber_;
        /// <summary>
        /// Change in Major Version Number means that user must act on change
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint MajorVersionNumber {
          get { return majorVersionNumber_; }
          set {
            majorVersionNumber_ = value;
          }
        }

        /// <summary>Field number for the "MinorVersionNumber" field.</summary>
        public const int MinorVersionNumberFieldNumber = 9;
        private uint minorVersionNumber_;
        /// <summary>
        /// Change in Minor Version Number means that user must NOT act on change
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint MinorVersionNumber {
          get { return minorVersionNumber_; }
          set {
            minorVersionNumber_ = value;
          }
        }

        /// <summary>Field number for the "UpdatedTimeStamp" field.</summary>
        public const int UpdatedTimeStampFieldNumber = 10;
        private global::Google.Protobuf.WellKnownTypes.Timestamp updatedTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstruction was last updated by the client system
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp UpdatedTimeStamp {
          get { return updatedTimeStamp_; }
          set {
            updatedTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "TestInstructionColor" field.</summary>
        public const int TestInstructionColorFieldNumber = 11;
        private string testInstructionColor_ = "";
        /// <summary>
        /// The color used for presenting the TestInstruction, e.g. #FAF437
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionColor {
          get { return testInstructionColor_; }
          set {
            testInstructionColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TCRuleDeletion" field.</summary>
        public const int TCRuleDeletionFieldNumber = 14;
        private string tCRuleDeletion_ = "";
        /// <summary>
        /// The Deletion Rule for this TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TCRuleDeletion {
          get { return tCRuleDeletion_; }
          set {
            tCRuleDeletion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TCRuleSwap" field.</summary>
        public const int TCRuleSwapFieldNumber = 15;
        private string tCRuleSwap_ = "";
        /// <summary>
        /// The Swap Rule for this TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TCRuleSwap {
          get { return tCRuleSwap_; }
          set {
            tCRuleSwap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NonEditableBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NonEditableBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DomainUuid != other.DomainUuid) return false;
          if (DomainName != other.DomainName) return false;
          if (TestInstructionUuid != other.TestInstructionUuid) return false;
          if (TestInstructionName != other.TestInstructionName) return false;
          if (TestInstructionTypeUuid != other.TestInstructionTypeUuid) return false;
          if (TestInstructionTypeName != other.TestInstructionTypeName) return false;
          if (Deprecated != other.Deprecated) return false;
          if (MajorVersionNumber != other.MajorVersionNumber) return false;
          if (MinorVersionNumber != other.MinorVersionNumber) return false;
          if (!object.Equals(UpdatedTimeStamp, other.UpdatedTimeStamp)) return false;
          if (TestInstructionColor != other.TestInstructionColor) return false;
          if (TCRuleDeletion != other.TCRuleDeletion) return false;
          if (TCRuleSwap != other.TCRuleSwap) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DomainUuid.Length != 0) hash ^= DomainUuid.GetHashCode();
          if (DomainName.Length != 0) hash ^= DomainName.GetHashCode();
          if (TestInstructionUuid.Length != 0) hash ^= TestInstructionUuid.GetHashCode();
          if (TestInstructionName.Length != 0) hash ^= TestInstructionName.GetHashCode();
          if (TestInstructionTypeUuid.Length != 0) hash ^= TestInstructionTypeUuid.GetHashCode();
          if (TestInstructionTypeName.Length != 0) hash ^= TestInstructionTypeName.GetHashCode();
          if (Deprecated != false) hash ^= Deprecated.GetHashCode();
          if (MajorVersionNumber != 0) hash ^= MajorVersionNumber.GetHashCode();
          if (MinorVersionNumber != 0) hash ^= MinorVersionNumber.GetHashCode();
          if (updatedTimeStamp_ != null) hash ^= UpdatedTimeStamp.GetHashCode();
          if (TestInstructionColor.Length != 0) hash ^= TestInstructionColor.GetHashCode();
          if (TCRuleDeletion.Length != 0) hash ^= TCRuleDeletion.GetHashCode();
          if (TCRuleSwap.Length != 0) hash ^= TCRuleSwap.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DomainUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DomainUuid);
          }
          if (DomainName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DomainName);
          }
          if (TestInstructionUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TestInstructionUuid);
          }
          if (TestInstructionName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TestInstructionName);
          }
          if (TestInstructionTypeUuid.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TestInstructionTypeUuid);
          }
          if (TestInstructionTypeName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TestInstructionTypeName);
          }
          if (Deprecated != false) {
            output.WriteRawTag(56);
            output.WriteBool(Deprecated);
          }
          if (MajorVersionNumber != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(MajorVersionNumber);
          }
          if (MinorVersionNumber != 0) {
            output.WriteRawTag(72);
            output.WriteUInt32(MinorVersionNumber);
          }
          if (updatedTimeStamp_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(UpdatedTimeStamp);
          }
          if (TestInstructionColor.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(TestInstructionColor);
          }
          if (TCRuleDeletion.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(TCRuleSwap);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DomainUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DomainUuid);
          }
          if (DomainName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DomainName);
          }
          if (TestInstructionUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TestInstructionUuid);
          }
          if (TestInstructionName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TestInstructionName);
          }
          if (TestInstructionTypeUuid.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TestInstructionTypeUuid);
          }
          if (TestInstructionTypeName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TestInstructionTypeName);
          }
          if (Deprecated != false) {
            output.WriteRawTag(56);
            output.WriteBool(Deprecated);
          }
          if (MajorVersionNumber != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(MajorVersionNumber);
          }
          if (MinorVersionNumber != 0) {
            output.WriteRawTag(72);
            output.WriteUInt32(MinorVersionNumber);
          }
          if (updatedTimeStamp_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(UpdatedTimeStamp);
          }
          if (TestInstructionColor.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(TestInstructionColor);
          }
          if (TCRuleDeletion.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(TCRuleSwap);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DomainUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainUuid);
          }
          if (DomainName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainName);
          }
          if (TestInstructionUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionUuid);
          }
          if (TestInstructionName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionName);
          }
          if (TestInstructionTypeUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionTypeUuid);
          }
          if (TestInstructionTypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionTypeName);
          }
          if (Deprecated != false) {
            size += 1 + 1;
          }
          if (MajorVersionNumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MajorVersionNumber);
          }
          if (MinorVersionNumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinorVersionNumber);
          }
          if (updatedTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedTimeStamp);
          }
          if (TestInstructionColor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionColor);
          }
          if (TCRuleDeletion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TCRuleSwap);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NonEditableBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.DomainUuid.Length != 0) {
            DomainUuid = other.DomainUuid;
          }
          if (other.DomainName.Length != 0) {
            DomainName = other.DomainName;
          }
          if (other.TestInstructionUuid.Length != 0) {
            TestInstructionUuid = other.TestInstructionUuid;
          }
          if (other.TestInstructionName.Length != 0) {
            TestInstructionName = other.TestInstructionName;
          }
          if (other.TestInstructionTypeUuid.Length != 0) {
            TestInstructionTypeUuid = other.TestInstructionTypeUuid;
          }
          if (other.TestInstructionTypeName.Length != 0) {
            TestInstructionTypeName = other.TestInstructionTypeName;
          }
          if (other.Deprecated != false) {
            Deprecated = other.Deprecated;
          }
          if (other.MajorVersionNumber != 0) {
            MajorVersionNumber = other.MajorVersionNumber;
          }
          if (other.MinorVersionNumber != 0) {
            MinorVersionNumber = other.MinorVersionNumber;
          }
          if (other.updatedTimeStamp_ != null) {
            if (updatedTimeStamp_ == null) {
              UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            UpdatedTimeStamp.MergeFrom(other.UpdatedTimeStamp);
          }
          if (other.TestInstructionColor.Length != 0) {
            TestInstructionColor = other.TestInstructionColor;
          }
          if (other.TCRuleDeletion.Length != 0) {
            TCRuleDeletion = other.TCRuleDeletion;
          }
          if (other.TCRuleSwap.Length != 0) {
            TCRuleSwap = other.TCRuleSwap;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DomainUuid = input.ReadString();
                break;
              }
              case 18: {
                DomainName = input.ReadString();
                break;
              }
              case 26: {
                TestInstructionUuid = input.ReadString();
                break;
              }
              case 34: {
                TestInstructionName = input.ReadString();
                break;
              }
              case 42: {
                TestInstructionTypeUuid = input.ReadString();
                break;
              }
              case 50: {
                TestInstructionTypeName = input.ReadString();
                break;
              }
              case 56: {
                Deprecated = input.ReadBool();
                break;
              }
              case 64: {
                MajorVersionNumber = input.ReadUInt32();
                break;
              }
              case 72: {
                MinorVersionNumber = input.ReadUInt32();
                break;
              }
              case 82: {
                if (updatedTimeStamp_ == null) {
                  UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdatedTimeStamp);
                break;
              }
              case 90: {
                TestInstructionColor = input.ReadString();
                break;
              }
              case 114: {
                TCRuleDeletion = input.ReadString();
                break;
              }
              case 122: {
                TCRuleSwap = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                DomainUuid = input.ReadString();
                break;
              }
              case 18: {
                DomainName = input.ReadString();
                break;
              }
              case 26: {
                TestInstructionUuid = input.ReadString();
                break;
              }
              case 34: {
                TestInstructionName = input.ReadString();
                break;
              }
              case 42: {
                TestInstructionTypeUuid = input.ReadString();
                break;
              }
              case 50: {
                TestInstructionTypeName = input.ReadString();
                break;
              }
              case 56: {
                Deprecated = input.ReadBool();
                break;
              }
              case 64: {
                MajorVersionNumber = input.ReadUInt32();
                break;
              }
              case 72: {
                MinorVersionNumber = input.ReadUInt32();
                break;
              }
              case 82: {
                if (updatedTimeStamp_ == null) {
                  UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdatedTimeStamp);
                break;
              }
              case 90: {
                TestInstructionColor = input.ReadString();
                break;
              }
              case 114: {
                TCRuleDeletion = input.ReadString();
                break;
              }
              case 122: {
                TCRuleSwap = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding all Basic information that can be shown in GUI and can be changed by the user
      /// </summary>
      public sealed partial class EditableBasicInformationMessage : pb::IMessage<EditableBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EditableBasicInformationMessage> _parser = new pb::MessageParser<EditableBasicInformationMessage>(() => new EditableBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EditableBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage(EditableBasicInformationMessage other) : this() {
          testInstructionDescription_ = other.testInstructionDescription_;
          testInstructionMouseOverText_ = other.testInstructionMouseOverText_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage Clone() {
          return new EditableBasicInformationMessage(this);
        }

        /// <summary>Field number for the "TestInstructionDescription" field.</summary>
        public const int TestInstructionDescriptionFieldNumber = 1;
        private string testInstructionDescription_ = "";
        /// <summary>
        /// The description of the TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionDescription {
          get { return testInstructionDescription_; }
          set {
            testInstructionDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionMouseOverText" field.</summary>
        public const int TestInstructionMouseOverTextFieldNumber = 2;
        private string testInstructionMouseOverText_ = "";
        /// <summary>
        /// The mouse over text when hovering over TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionMouseOverText {
          get { return testInstructionMouseOverText_; }
          set {
            testInstructionMouseOverText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EditableBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EditableBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestInstructionDescription != other.TestInstructionDescription) return false;
          if (TestInstructionMouseOverText != other.TestInstructionMouseOverText) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestInstructionDescription.Length != 0) hash ^= TestInstructionDescription.GetHashCode();
          if (TestInstructionMouseOverText.Length != 0) hash ^= TestInstructionMouseOverText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestInstructionDescription.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestInstructionDescription);
          }
          if (TestInstructionMouseOverText.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestInstructionMouseOverText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestInstructionDescription.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestInstructionDescription);
          }
          if (TestInstructionMouseOverText.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestInstructionMouseOverText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestInstructionDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionDescription);
          }
          if (TestInstructionMouseOverText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionMouseOverText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EditableBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestInstructionDescription.Length != 0) {
            TestInstructionDescription = other.TestInstructionDescription;
          }
          if (other.TestInstructionMouseOverText.Length != 0) {
            TestInstructionMouseOverText = other.TestInstructionMouseOverText;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TestInstructionDescription = input.ReadString();
                break;
              }
              case 18: {
                TestInstructionMouseOverText = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TestInstructionDescription = input.ReadString();
                break;
              }
              case 18: {
                TestInstructionMouseOverText = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding all Basic information that is not directly shown in GUI and can't be changed by the user
      /// </summary>
      public sealed partial class InvisibleBasicInformationMessage : pb::IMessage<InvisibleBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InvisibleBasicInformationMessage> _parser = new pb::MessageParser<InvisibleBasicInformationMessage>(() => new InvisibleBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InvisibleBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.BasicTestInstructionInformationMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvisibleBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvisibleBasicInformationMessage(InvisibleBasicInformationMessage other) : this() {
          enabled_ = other.enabled_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvisibleBasicInformationMessage Clone() {
          return new InvisibleBasicInformationMessage(this);
        }

        /// <summary>Field number for the "Enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        /// TestInstruction can be disabled when the user shouldn't use it anymore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InvisibleBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InvisibleBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InvisibleBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message holding the information about the Immature TestInstruction
  /// </summary>
  public sealed partial class ImmatureTestInstructionInformationMessage : pb::IMessage<ImmatureTestInstructionInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmatureTestInstructionInformationMessage> _parser = new pb::MessageParser<ImmatureTestInstructionInformationMessage>(() => new ImmatureTestInstructionInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImmatureTestInstructionInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionInformationMessage(ImmatureTestInstructionInformationMessage other) : this() {
      availableDropZones_ = other.availableDropZones_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionInformationMessage Clone() {
      return new ImmatureTestInstructionInformationMessage(this);
    }

    /// <summary>Field number for the "AvailableDropZones" field.</summary>
    public const int AvailableDropZonesFieldNumber = 18;
    private static readonly pb::FieldCodec<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage> _repeated_availableDropZones_codec
        = pb::FieldCodec.ForMessage(146, global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Parser);
    private readonly pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage> availableDropZones_ = new pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage>();
    /// <summary>
    /// A list of DropZone for this Immature TestInstruction. A DropZone is a collection of pre-defined values that the TestInstruction will get when placed in TestCase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage> AvailableDropZones {
      get { return availableDropZones_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImmatureTestInstructionInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImmatureTestInstructionInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availableDropZones_.Equals(other.availableDropZones_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availableDropZones_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      availableDropZones_.WriteTo(output, _repeated_availableDropZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      availableDropZones_.WriteTo(ref output, _repeated_availableDropZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availableDropZones_.CalculateSize(_repeated_availableDropZones_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImmatureTestInstructionInformationMessage other) {
      if (other == null) {
        return;
      }
      availableDropZones_.Add(other.availableDropZones_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 146: {
            availableDropZones_.AddEntriesFrom(input, _repeated_availableDropZones_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 146: {
            availableDropZones_.AddEntriesFrom(ref input, _repeated_availableDropZones_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ImmatureTestInstructionInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding one DropZone
      /// </summary>
      public sealed partial class AvailableDropZoneMessage : pb::IMessage<AvailableDropZoneMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AvailableDropZoneMessage> _parser = new pb::MessageParser<AvailableDropZoneMessage>(() => new AvailableDropZoneMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AvailableDropZoneMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableDropZoneMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableDropZoneMessage(AvailableDropZoneMessage other) : this() {
          dropZoneUuid_ = other.dropZoneUuid_;
          dropZoneName_ = other.dropZoneName_;
          dropZoneDescription_ = other.dropZoneDescription_;
          dropZoneMouseOver_ = other.dropZoneMouseOver_;
          dropZoneColor_ = other.dropZoneColor_;
          dropZonePreSetTestInstructionAttributes_ = other.dropZonePreSetTestInstructionAttributes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableDropZoneMessage Clone() {
          return new AvailableDropZoneMessage(this);
        }

        /// <summary>Field number for the "DropZoneUuid" field.</summary>
        public const int DropZoneUuidFieldNumber = 1;
        private string dropZoneUuid_ = "";
        /// <summary>
        /// A DropZone, UUID, for the TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneUuid {
          get { return dropZoneUuid_; }
          set {
            dropZoneUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneName" field.</summary>
        public const int DropZoneNameFieldNumber = 2;
        private string dropZoneName_ = "";
        /// <summary>
        /// A DropZone, Name, for the TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneName {
          get { return dropZoneName_; }
          set {
            dropZoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneDescription" field.</summary>
        public const int DropZoneDescriptionFieldNumber = 3;
        private string dropZoneDescription_ = "";
        /// <summary>
        /// Description of the DropZone
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneDescription {
          get { return dropZoneDescription_; }
          set {
            dropZoneDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneMouseOver" field.</summary>
        public const int DropZoneMouseOverFieldNumber = 4;
        private string dropZoneMouseOver_ = "";
        /// <summary>
        /// The mouse over text for the DropZone
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneMouseOver {
          get { return dropZoneMouseOver_; }
          set {
            dropZoneMouseOver_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneColor" field.</summary>
        public const int DropZoneColorFieldNumber = 5;
        private string dropZoneColor_ = "";
        /// <summary>
        /// The color used for presenting the DropsZone, e.g. #FAF437
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneColor {
          get { return dropZoneColor_; }
          set {
            dropZoneColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZonePreSetTestInstructionAttributes" field.</summary>
        public const int DropZonePreSetTestInstructionAttributesFieldNumber = 6;
        private static readonly pb::FieldCodec<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage> _repeated_dropZonePreSetTestInstructionAttributes_codec
            = pb::FieldCodec.ForMessage(50, global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage.Parser);
        private readonly pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage> dropZonePreSetTestInstructionAttributes_ = new pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage>();
        /// <summary>
        /// A list of the attributes and their pre-set values
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage> DropZonePreSetTestInstructionAttributes {
          get { return dropZonePreSetTestInstructionAttributes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AvailableDropZoneMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AvailableDropZoneMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DropZoneUuid != other.DropZoneUuid) return false;
          if (DropZoneName != other.DropZoneName) return false;
          if (DropZoneDescription != other.DropZoneDescription) return false;
          if (DropZoneMouseOver != other.DropZoneMouseOver) return false;
          if (DropZoneColor != other.DropZoneColor) return false;
          if(!dropZonePreSetTestInstructionAttributes_.Equals(other.dropZonePreSetTestInstructionAttributes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DropZoneUuid.Length != 0) hash ^= DropZoneUuid.GetHashCode();
          if (DropZoneName.Length != 0) hash ^= DropZoneName.GetHashCode();
          if (DropZoneDescription.Length != 0) hash ^= DropZoneDescription.GetHashCode();
          if (DropZoneMouseOver.Length != 0) hash ^= DropZoneMouseOver.GetHashCode();
          if (DropZoneColor.Length != 0) hash ^= DropZoneColor.GetHashCode();
          hash ^= dropZonePreSetTestInstructionAttributes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DropZoneUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DropZoneUuid);
          }
          if (DropZoneName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DropZoneName);
          }
          if (DropZoneDescription.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DropZoneDescription);
          }
          if (DropZoneMouseOver.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DropZoneMouseOver);
          }
          if (DropZoneColor.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(DropZoneColor);
          }
          dropZonePreSetTestInstructionAttributes_.WriteTo(output, _repeated_dropZonePreSetTestInstructionAttributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DropZoneUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DropZoneUuid);
          }
          if (DropZoneName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DropZoneName);
          }
          if (DropZoneDescription.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DropZoneDescription);
          }
          if (DropZoneMouseOver.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DropZoneMouseOver);
          }
          if (DropZoneColor.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(DropZoneColor);
          }
          dropZonePreSetTestInstructionAttributes_.WriteTo(ref output, _repeated_dropZonePreSetTestInstructionAttributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DropZoneUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneUuid);
          }
          if (DropZoneName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneName);
          }
          if (DropZoneDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneDescription);
          }
          if (DropZoneMouseOver.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneMouseOver);
          }
          if (DropZoneColor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneColor);
          }
          size += dropZonePreSetTestInstructionAttributes_.CalculateSize(_repeated_dropZonePreSetTestInstructionAttributes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AvailableDropZoneMessage other) {
          if (other == null) {
            return;
          }
          if (other.DropZoneUuid.Length != 0) {
            DropZoneUuid = other.DropZoneUuid;
          }
          if (other.DropZoneName.Length != 0) {
            DropZoneName = other.DropZoneName;
          }
          if (other.DropZoneDescription.Length != 0) {
            DropZoneDescription = other.DropZoneDescription;
          }
          if (other.DropZoneMouseOver.Length != 0) {
            DropZoneMouseOver = other.DropZoneMouseOver;
          }
          if (other.DropZoneColor.Length != 0) {
            DropZoneColor = other.DropZoneColor;
          }
          dropZonePreSetTestInstructionAttributes_.Add(other.dropZonePreSetTestInstructionAttributes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DropZoneUuid = input.ReadString();
                break;
              }
              case 18: {
                DropZoneName = input.ReadString();
                break;
              }
              case 26: {
                DropZoneDescription = input.ReadString();
                break;
              }
              case 34: {
                DropZoneMouseOver = input.ReadString();
                break;
              }
              case 42: {
                DropZoneColor = input.ReadString();
                break;
              }
              case 50: {
                dropZonePreSetTestInstructionAttributes_.AddEntriesFrom(input, _repeated_dropZonePreSetTestInstructionAttributes_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                DropZoneUuid = input.ReadString();
                break;
              }
              case 18: {
                DropZoneName = input.ReadString();
                break;
              }
              case 26: {
                DropZoneDescription = input.ReadString();
                break;
              }
              case 34: {
                DropZoneMouseOver = input.ReadString();
                break;
              }
              case 42: {
                DropZoneColor = input.ReadString();
                break;
              }
              case 50: {
                dropZonePreSetTestInstructionAttributes_.AddEntriesFrom(ref input, _repeated_dropZonePreSetTestInstructionAttributes_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the AvailableDropZoneMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Message holding one attribute with its pre-set value
          /// </summary>
          public sealed partial class DropZonePreSetTestInstructionAttributeMessage : pb::IMessage<DropZonePreSetTestInstructionAttributeMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DropZonePreSetTestInstructionAttributeMessage> _parser = new pb::MessageParser<DropZonePreSetTestInstructionAttributeMessage>(() => new DropZonePreSetTestInstructionAttributeMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DropZonePreSetTestInstructionAttributeMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionInformationMessage.Types.AvailableDropZoneMessage.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DropZonePreSetTestInstructionAttributeMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DropZonePreSetTestInstructionAttributeMessage(DropZonePreSetTestInstructionAttributeMessage other) : this() {
              testInstructionAttributeType_ = other.testInstructionAttributeType_;
              testInstructionAttributeUuid_ = other.testInstructionAttributeUuid_;
              testInstructionAttributeName_ = other.testInstructionAttributeName_;
              attributeValueAsString_ = other.attributeValueAsString_;
              attributeValueUuid_ = other.attributeValueUuid_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DropZonePreSetTestInstructionAttributeMessage Clone() {
              return new DropZonePreSetTestInstructionAttributeMessage(this);
            }

            /// <summary>Field number for the "TestInstructionAttributeType" field.</summary>
            public const int TestInstructionAttributeTypeFieldNumber = 1;
            private global::SubCustodyServer.TestInstructionAttributeTypeEnum testInstructionAttributeType_ = global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox;
            /// <summary>
            /// Defines witch type attribute; TEXTBOX, COMBOBOX...
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::SubCustodyServer.TestInstructionAttributeTypeEnum TestInstructionAttributeType {
              get { return testInstructionAttributeType_; }
              set {
                testInstructionAttributeType_ = value;
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeUuid" field.</summary>
            public const int TestInstructionAttributeUuidFieldNumber = 2;
            private string testInstructionAttributeUuid_ = "";
            /// <summary>
            /// The unique uuid for the TestInstructionAttribute, set by client system
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeUuid {
              get { return testInstructionAttributeUuid_; }
              set {
                testInstructionAttributeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeName" field.</summary>
            public const int TestInstructionAttributeNameFieldNumber = 3;
            private string testInstructionAttributeName_ = "";
            /// <summary>
            /// The name of the TestInstructionAttribute
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeName {
              get { return testInstructionAttributeName_; }
              set {
                testInstructionAttributeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "AttributeValueAsString" field.</summary>
            public const int AttributeValueAsStringFieldNumber = 4;
            private string attributeValueAsString_ = "";
            /// <summary>
            /// The String-representation of the value
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string AttributeValueAsString {
              get { return attributeValueAsString_; }
              set {
                attributeValueAsString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "AttributeValueUuid" field.</summary>
            public const int AttributeValueUuidFieldNumber = 5;
            private string attributeValueUuid_ = "";
            /// <summary>
            /// Combo-boxes can us a UUID as unique value behind the text visible in the combo-box
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string AttributeValueUuid {
              get { return attributeValueUuid_; }
              set {
                attributeValueUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DropZonePreSetTestInstructionAttributeMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DropZonePreSetTestInstructionAttributeMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (TestInstructionAttributeType != other.TestInstructionAttributeType) return false;
              if (TestInstructionAttributeUuid != other.TestInstructionAttributeUuid) return false;
              if (TestInstructionAttributeName != other.TestInstructionAttributeName) return false;
              if (AttributeValueAsString != other.AttributeValueAsString) return false;
              if (AttributeValueUuid != other.AttributeValueUuid) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) hash ^= TestInstructionAttributeType.GetHashCode();
              if (TestInstructionAttributeUuid.Length != 0) hash ^= TestInstructionAttributeUuid.GetHashCode();
              if (TestInstructionAttributeName.Length != 0) hash ^= TestInstructionAttributeName.GetHashCode();
              if (AttributeValueAsString.Length != 0) hash ^= AttributeValueAsString.GetHashCode();
              if (AttributeValueUuid.Length != 0) hash ^= AttributeValueUuid.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                output.WriteRawTag(8);
                output.WriteEnum((int) TestInstructionAttributeType);
              }
              if (TestInstructionAttributeUuid.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(TestInstructionAttributeName);
              }
              if (AttributeValueAsString.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(AttributeValueAsString);
              }
              if (AttributeValueUuid.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(AttributeValueUuid);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                output.WriteRawTag(8);
                output.WriteEnum((int) TestInstructionAttributeType);
              }
              if (TestInstructionAttributeUuid.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(TestInstructionAttributeName);
              }
              if (AttributeValueAsString.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(AttributeValueAsString);
              }
              if (AttributeValueUuid.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(AttributeValueUuid);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestInstructionAttributeType);
              }
              if (TestInstructionAttributeUuid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeName);
              }
              if (AttributeValueAsString.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeValueAsString);
              }
              if (AttributeValueUuid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeValueUuid);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DropZonePreSetTestInstructionAttributeMessage other) {
              if (other == null) {
                return;
              }
              if (other.TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                TestInstructionAttributeType = other.TestInstructionAttributeType;
              }
              if (other.TestInstructionAttributeUuid.Length != 0) {
                TestInstructionAttributeUuid = other.TestInstructionAttributeUuid;
              }
              if (other.TestInstructionAttributeName.Length != 0) {
                TestInstructionAttributeName = other.TestInstructionAttributeName;
              }
              if (other.AttributeValueAsString.Length != 0) {
                AttributeValueAsString = other.AttributeValueAsString;
              }
              if (other.AttributeValueUuid.Length != 0) {
                AttributeValueUuid = other.AttributeValueUuid;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    TestInstructionAttributeType = (global::SubCustodyServer.TestInstructionAttributeTypeEnum) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    TestInstructionAttributeUuid = input.ReadString();
                    break;
                  }
                  case 26: {
                    TestInstructionAttributeName = input.ReadString();
                    break;
                  }
                  case 34: {
                    AttributeValueAsString = input.ReadString();
                    break;
                  }
                  case 42: {
                    AttributeValueUuid = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    TestInstructionAttributeType = (global::SubCustodyServer.TestInstructionAttributeTypeEnum) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    TestInstructionAttributeUuid = input.ReadString();
                    break;
                  }
                  case 26: {
                    TestInstructionAttributeName = input.ReadString();
                    break;
                  }
                  case 34: {
                    AttributeValueAsString = input.ReadString();
                    break;
                  }
                  case 42: {
                    AttributeValueUuid = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  ///  Message holding all data that is set for the Mature TestInstruction
  /// </summary>
  public sealed partial class MatureTestInstructionInformationMessage : pb::IMessage<MatureTestInstructionInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatureTestInstructionInformationMessage> _parser = new pb::MessageParser<MatureTestInstructionInformationMessage>(() => new MatureTestInstructionInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatureTestInstructionInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionInformationMessage(MatureTestInstructionInformationMessage other) : this() {
      matureBasicTestInstructionInformation_ = other.matureBasicTestInstructionInformation_ != null ? other.matureBasicTestInstructionInformation_.Clone() : null;
      createdAndUpdatedInformation_ = other.createdAndUpdatedInformation_ != null ? other.createdAndUpdatedInformation_.Clone() : null;
      testInstructionAttributesList_ = other.testInstructionAttributesList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionInformationMessage Clone() {
      return new MatureTestInstructionInformationMessage(this);
    }

    /// <summary>Field number for the "MatureBasicTestInstructionInformation" field.</summary>
    public const int MatureBasicTestInstructionInformationFieldNumber = 1;
    private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.MatureBasicTestInstructionInformationMessage matureBasicTestInstructionInformation_;
    /// <summary>
    /// The Basic information for the Matures TestInstruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.MatureBasicTestInstructionInformationMessage MatureBasicTestInstructionInformation {
      get { return matureBasicTestInstructionInformation_; }
      set {
        matureBasicTestInstructionInformation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedAndUpdatedInformation" field.</summary>
    public const int CreatedAndUpdatedInformationFieldNumber = 2;
    private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.CreatedAndUpdatedInformationMessage createdAndUpdatedInformation_;
    /// <summary>
    /// Information regarding who did what and when
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.CreatedAndUpdatedInformationMessage CreatedAndUpdatedInformation {
      get { return createdAndUpdatedInformation_; }
      set {
        createdAndUpdatedInformation_ = value;
      }
    }

    /// <summary>Field number for the "TestInstructionAttributesList" field.</summary>
    public const int TestInstructionAttributesListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage> _repeated_testInstructionAttributesList_codec
        = pb::FieldCodec.ForMessage(26, global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Parser);
    private readonly pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage> testInstructionAttributesList_ = new pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage>();
    /// <summary>
    /// All attributes that belongs to the TestInstruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage> TestInstructionAttributesList {
      get { return testInstructionAttributesList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatureTestInstructionInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatureTestInstructionInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MatureBasicTestInstructionInformation, other.MatureBasicTestInstructionInformation)) return false;
      if (!object.Equals(CreatedAndUpdatedInformation, other.CreatedAndUpdatedInformation)) return false;
      if(!testInstructionAttributesList_.Equals(other.testInstructionAttributesList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (matureBasicTestInstructionInformation_ != null) hash ^= MatureBasicTestInstructionInformation.GetHashCode();
      if (createdAndUpdatedInformation_ != null) hash ^= CreatedAndUpdatedInformation.GetHashCode();
      hash ^= testInstructionAttributesList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (matureBasicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      testInstructionAttributesList_.WriteTo(output, _repeated_testInstructionAttributesList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (matureBasicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      testInstructionAttributesList_.WriteTo(ref output, _repeated_testInstructionAttributesList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (matureBasicTestInstructionInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAndUpdatedInformation);
      }
      size += testInstructionAttributesList_.CalculateSize(_repeated_testInstructionAttributesList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatureTestInstructionInformationMessage other) {
      if (other == null) {
        return;
      }
      if (other.matureBasicTestInstructionInformation_ != null) {
        if (matureBasicTestInstructionInformation_ == null) {
          MatureBasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.MatureBasicTestInstructionInformationMessage();
        }
        MatureBasicTestInstructionInformation.MergeFrom(other.MatureBasicTestInstructionInformation);
      }
      if (other.createdAndUpdatedInformation_ != null) {
        if (createdAndUpdatedInformation_ == null) {
          CreatedAndUpdatedInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.CreatedAndUpdatedInformationMessage();
        }
        CreatedAndUpdatedInformation.MergeFrom(other.CreatedAndUpdatedInformation);
      }
      testInstructionAttributesList_.Add(other.testInstructionAttributesList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (matureBasicTestInstructionInformation_ == null) {
              MatureBasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.MatureBasicTestInstructionInformationMessage();
            }
            input.ReadMessage(MatureBasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
          case 26: {
            testInstructionAttributesList_.AddEntriesFrom(input, _repeated_testInstructionAttributesList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (matureBasicTestInstructionInformation_ == null) {
              MatureBasicTestInstructionInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.MatureBasicTestInstructionInformationMessage();
            }
            input.ReadMessage(MatureBasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
          case 26: {
            testInstructionAttributesList_.AddEntriesFrom(ref input, _repeated_testInstructionAttributesList_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MatureTestInstructionInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding the mature basic information about the TestInstruction
      /// </summary>
      public sealed partial class MatureBasicTestInstructionInformationMessage : pb::IMessage<MatureBasicTestInstructionInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MatureBasicTestInstructionInformationMessage> _parser = new pb::MessageParser<MatureBasicTestInstructionInformationMessage>(() => new MatureBasicTestInstructionInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MatureBasicTestInstructionInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicTestInstructionInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicTestInstructionInformationMessage(MatureBasicTestInstructionInformationMessage other) : this() {
          testCaseUuid_ = other.testCaseUuid_;
          testInstructionMatureUuid_ = other.testInstructionMatureUuid_;
          parentTestInstructionContainerUuid_ = other.parentTestInstructionContainerUuid_;
          parentTestInstructionContainerMatureUuid_ = other.parentTestInstructionContainerMatureUuid_;
          chosenDropZoneUuid_ = other.chosenDropZoneUuid_;
          chosenDropZoneName_ = other.chosenDropZoneName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicTestInstructionInformationMessage Clone() {
          return new MatureBasicTestInstructionInformationMessage(this);
        }

        /// <summary>Field number for the "TestCaseUuid" field.</summary>
        public const int TestCaseUuidFieldNumber = 1;
        private string testCaseUuid_ = "";
        /// <summary>
        /// Reference to the TestCase where this TestInstruction exists
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestCaseUuid {
          get { return testCaseUuid_; }
          set {
            testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionMatureUuid" field.</summary>
        public const int TestInstructionMatureUuidFieldNumber = 2;
        private string testInstructionMatureUuid_ = "";
        /// <summary>
        /// The Mature UUID that the TestInstruction gets when it is added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionMatureUuid {
          get { return testInstructionMatureUuid_; }
          set {
            testInstructionMatureUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ParentTestInstructionContainerUuid" field.</summary>
        public const int ParentTestInstructionContainerUuidFieldNumber = 3;
        private string parentTestInstructionContainerUuid_ = "";
        /// <summary>
        /// A UUID-reference to TestInstructionContainer where this TestInstruction exists
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ParentTestInstructionContainerUuid {
          get { return parentTestInstructionContainerUuid_; }
          set {
            parentTestInstructionContainerUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ParentTestInstructionContainerMatureUuid" field.</summary>
        public const int ParentTestInstructionContainerMatureUuidFieldNumber = 4;
        private string parentTestInstructionContainerMatureUuid_ = "";
        /// <summary>
        /// A Mature-UUID-reference to TestInstructionContainer where this TestInstruction exists
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ParentTestInstructionContainerMatureUuid {
          get { return parentTestInstructionContainerMatureUuid_; }
          set {
            parentTestInstructionContainerMatureUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ChosenDropZoneUuid" field.</summary>
        public const int ChosenDropZoneUuidFieldNumber = 5;
        private string chosenDropZoneUuid_ = "";
        /// <summary>
        /// The chosen dropzone, UUID, which set the attributes in TestInstruction when it was added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ChosenDropZoneUuid {
          get { return chosenDropZoneUuid_; }
          set {
            chosenDropZoneUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ChosenDropZoneName" field.</summary>
        public const int ChosenDropZoneNameFieldNumber = 6;
        private string chosenDropZoneName_ = "";
        /// <summary>
        /// The chosen dropzone, Name, which set the attributes in TestInstruction when it was added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ChosenDropZoneName {
          get { return chosenDropZoneName_; }
          set {
            chosenDropZoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MatureBasicTestInstructionInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MatureBasicTestInstructionInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestCaseUuid != other.TestCaseUuid) return false;
          if (TestInstructionMatureUuid != other.TestInstructionMatureUuid) return false;
          if (ParentTestInstructionContainerUuid != other.ParentTestInstructionContainerUuid) return false;
          if (ParentTestInstructionContainerMatureUuid != other.ParentTestInstructionContainerMatureUuid) return false;
          if (ChosenDropZoneUuid != other.ChosenDropZoneUuid) return false;
          if (ChosenDropZoneName != other.ChosenDropZoneName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
          if (TestInstructionMatureUuid.Length != 0) hash ^= TestInstructionMatureUuid.GetHashCode();
          if (ParentTestInstructionContainerUuid.Length != 0) hash ^= ParentTestInstructionContainerUuid.GetHashCode();
          if (ParentTestInstructionContainerMatureUuid.Length != 0) hash ^= ParentTestInstructionContainerMatureUuid.GetHashCode();
          if (ChosenDropZoneUuid.Length != 0) hash ^= ChosenDropZoneUuid.GetHashCode();
          if (ChosenDropZoneName.Length != 0) hash ^= ChosenDropZoneName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestCaseUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseUuid);
          }
          if (TestInstructionMatureUuid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestInstructionMatureUuid);
          }
          if (ParentTestInstructionContainerUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ParentTestInstructionContainerUuid);
          }
          if (ParentTestInstructionContainerMatureUuid.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ParentTestInstructionContainerMatureUuid);
          }
          if (ChosenDropZoneUuid.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ChosenDropZoneUuid);
          }
          if (ChosenDropZoneName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(ChosenDropZoneName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestCaseUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseUuid);
          }
          if (TestInstructionMatureUuid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestInstructionMatureUuid);
          }
          if (ParentTestInstructionContainerUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ParentTestInstructionContainerUuid);
          }
          if (ParentTestInstructionContainerMatureUuid.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(ParentTestInstructionContainerMatureUuid);
          }
          if (ChosenDropZoneUuid.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ChosenDropZoneUuid);
          }
          if (ChosenDropZoneName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(ChosenDropZoneName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestCaseUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
          }
          if (TestInstructionMatureUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionMatureUuid);
          }
          if (ParentTestInstructionContainerUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentTestInstructionContainerUuid);
          }
          if (ParentTestInstructionContainerMatureUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentTestInstructionContainerMatureUuid);
          }
          if (ChosenDropZoneUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ChosenDropZoneUuid);
          }
          if (ChosenDropZoneName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ChosenDropZoneName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MatureBasicTestInstructionInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestCaseUuid.Length != 0) {
            TestCaseUuid = other.TestCaseUuid;
          }
          if (other.TestInstructionMatureUuid.Length != 0) {
            TestInstructionMatureUuid = other.TestInstructionMatureUuid;
          }
          if (other.ParentTestInstructionContainerUuid.Length != 0) {
            ParentTestInstructionContainerUuid = other.ParentTestInstructionContainerUuid;
          }
          if (other.ParentTestInstructionContainerMatureUuid.Length != 0) {
            ParentTestInstructionContainerMatureUuid = other.ParentTestInstructionContainerMatureUuid;
          }
          if (other.ChosenDropZoneUuid.Length != 0) {
            ChosenDropZoneUuid = other.ChosenDropZoneUuid;
          }
          if (other.ChosenDropZoneName.Length != 0) {
            ChosenDropZoneName = other.ChosenDropZoneName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TestCaseUuid = input.ReadString();
                break;
              }
              case 18: {
                TestInstructionMatureUuid = input.ReadString();
                break;
              }
              case 26: {
                ParentTestInstructionContainerUuid = input.ReadString();
                break;
              }
              case 34: {
                ParentTestInstructionContainerMatureUuid = input.ReadString();
                break;
              }
              case 42: {
                ChosenDropZoneUuid = input.ReadString();
                break;
              }
              case 50: {
                ChosenDropZoneName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TestCaseUuid = input.ReadString();
                break;
              }
              case 18: {
                TestInstructionMatureUuid = input.ReadString();
                break;
              }
              case 26: {
                ParentTestInstructionContainerUuid = input.ReadString();
                break;
              }
              case 34: {
                ParentTestInstructionContainerMatureUuid = input.ReadString();
                break;
              }
              case 42: {
                ChosenDropZoneUuid = input.ReadString();
                break;
              }
              case 50: {
                ChosenDropZoneName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding information about changes to the TestInstruction, who and when
      /// </summary>
      public sealed partial class CreatedAndUpdatedInformationMessage : pb::IMessage<CreatedAndUpdatedInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreatedAndUpdatedInformationMessage> _parser = new pb::MessageParser<CreatedAndUpdatedInformationMessage>(() => new CreatedAndUpdatedInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreatedAndUpdatedInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage(CreatedAndUpdatedInformationMessage other) : this() {
          addedToTestCaseTimeStamp_ = other.addedToTestCaseTimeStamp_ != null ? other.addedToTestCaseTimeStamp_.Clone() : null;
          addedToTestCaseByUserId_ = other.addedToTestCaseByUserId_;
          lastUpdatedInTestCaseTimeStamp_ = other.lastUpdatedInTestCaseTimeStamp_ != null ? other.lastUpdatedInTestCaseTimeStamp_.Clone() : null;
          lastUpdatedInTestCaseByUserId_ = other.lastUpdatedInTestCaseByUserId_;
          deletedFromTestCaseTimeStamp_ = other.deletedFromTestCaseTimeStamp_ != null ? other.deletedFromTestCaseTimeStamp_.Clone() : null;
          deletedFromTestCaseByUserId_ = other.deletedFromTestCaseByUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage Clone() {
          return new CreatedAndUpdatedInformationMessage(this);
        }

        /// <summary>Field number for the "AddedToTestCaseTimeStamp" field.</summary>
        public const int AddedToTestCaseTimeStampFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp addedToTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstruction was first added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp AddedToTestCaseTimeStamp {
          get { return addedToTestCaseTimeStamp_; }
          set {
            addedToTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "AddedToTestCaseByUserId" field.</summary>
        public const int AddedToTestCaseByUserIdFieldNumber = 2;
        private string addedToTestCaseByUserId_ = "";
        /// <summary>
        /// Which user added the TestInstruction to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AddedToTestCaseByUserId {
          get { return addedToTestCaseByUserId_; }
          set {
            addedToTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseTimeStamp" field.</summary>
        public const int LastUpdatedInTestCaseTimeStampFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdatedInTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstruction was updated in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdatedInTestCaseTimeStamp {
          get { return lastUpdatedInTestCaseTimeStamp_; }
          set {
            lastUpdatedInTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseByUserId" field.</summary>
        public const int LastUpdatedInTestCaseByUserIdFieldNumber = 4;
        private string lastUpdatedInTestCaseByUserId_ = "";
        /// <summary>
        /// Which user was the last to update the TestInstruction in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastUpdatedInTestCaseByUserId {
          get { return lastUpdatedInTestCaseByUserId_; }
          set {
            lastUpdatedInTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseTimeStamp" field.</summary>
        public const int DeletedFromTestCaseTimeStampFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp deletedFromTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstruction was deleted from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp DeletedFromTestCaseTimeStamp {
          get { return deletedFromTestCaseTimeStamp_; }
          set {
            deletedFromTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseByUserId" field.</summary>
        public const int DeletedFromTestCaseByUserIdFieldNumber = 6;
        private string deletedFromTestCaseByUserId_ = "";
        /// <summary>
        /// Which user deleted the TestInstruction from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeletedFromTestCaseByUserId {
          get { return deletedFromTestCaseByUserId_; }
          set {
            deletedFromTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreatedAndUpdatedInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreatedAndUpdatedInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AddedToTestCaseTimeStamp, other.AddedToTestCaseTimeStamp)) return false;
          if (AddedToTestCaseByUserId != other.AddedToTestCaseByUserId) return false;
          if (!object.Equals(LastUpdatedInTestCaseTimeStamp, other.LastUpdatedInTestCaseTimeStamp)) return false;
          if (LastUpdatedInTestCaseByUserId != other.LastUpdatedInTestCaseByUserId) return false;
          if (!object.Equals(DeletedFromTestCaseTimeStamp, other.DeletedFromTestCaseTimeStamp)) return false;
          if (DeletedFromTestCaseByUserId != other.DeletedFromTestCaseByUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (addedToTestCaseTimeStamp_ != null) hash ^= AddedToTestCaseTimeStamp.GetHashCode();
          if (AddedToTestCaseByUserId.Length != 0) hash ^= AddedToTestCaseByUserId.GetHashCode();
          if (lastUpdatedInTestCaseTimeStamp_ != null) hash ^= LastUpdatedInTestCaseTimeStamp.GetHashCode();
          if (LastUpdatedInTestCaseByUserId.Length != 0) hash ^= LastUpdatedInTestCaseByUserId.GetHashCode();
          if (deletedFromTestCaseTimeStamp_ != null) hash ^= DeletedFromTestCaseTimeStamp.GetHashCode();
          if (DeletedFromTestCaseByUserId.Length != 0) hash ^= DeletedFromTestCaseByUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (addedToTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreatedAndUpdatedInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.addedToTestCaseTimeStamp_ != null) {
            if (addedToTestCaseTimeStamp_ == null) {
              AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            AddedToTestCaseTimeStamp.MergeFrom(other.AddedToTestCaseTimeStamp);
          }
          if (other.AddedToTestCaseByUserId.Length != 0) {
            AddedToTestCaseByUserId = other.AddedToTestCaseByUserId;
          }
          if (other.lastUpdatedInTestCaseTimeStamp_ != null) {
            if (lastUpdatedInTestCaseTimeStamp_ == null) {
              LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastUpdatedInTestCaseTimeStamp.MergeFrom(other.LastUpdatedInTestCaseTimeStamp);
          }
          if (other.LastUpdatedInTestCaseByUserId.Length != 0) {
            LastUpdatedInTestCaseByUserId = other.LastUpdatedInTestCaseByUserId;
          }
          if (other.deletedFromTestCaseTimeStamp_ != null) {
            if (deletedFromTestCaseTimeStamp_ == null) {
              DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            DeletedFromTestCaseTimeStamp.MergeFrom(other.DeletedFromTestCaseTimeStamp);
          }
          if (other.DeletedFromTestCaseByUserId.Length != 0) {
            DeletedFromTestCaseByUserId = other.DeletedFromTestCaseByUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding one Attribute for a Test Instruction
      /// </summary>
      public sealed partial class TestInstructionAttributeMessage : pb::IMessage<TestInstructionAttributeMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TestInstructionAttributeMessage> _parser = new pb::MessageParser<TestInstructionAttributeMessage>(() => new TestInstructionAttributeMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TestInstructionAttributeMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestInstructionAttributeMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestInstructionAttributeMessage(TestInstructionAttributeMessage other) : this() {
          baseAttributeInformation_ = other.baseAttributeInformation_ != null ? other.baseAttributeInformation_.Clone() : null;
          attributeInformation_ = other.attributeInformation_ != null ? other.attributeInformation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestInstructionAttributeMessage Clone() {
          return new TestInstructionAttributeMessage(this);
        }

        /// <summary>Field number for the "BaseAttributeInformation" field.</summary>
        public const int BaseAttributeInformationFieldNumber = 1;
        private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.BaseAttributeInformationMessage baseAttributeInformation_;
        /// <summary>
        /// The information set from Client system about the Attribute
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.BaseAttributeInformationMessage BaseAttributeInformation {
          get { return baseAttributeInformation_; }
          set {
            baseAttributeInformation_ = value;
          }
        }

        /// <summary>Field number for the "AttributeInformation" field.</summary>
        public const int AttributeInformationFieldNumber = 2;
        private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage attributeInformation_;
        /// <summary>
        /// Have the ability to store all different Attribute type, but only one should be used
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage AttributeInformation {
          get { return attributeInformation_; }
          set {
            attributeInformation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TestInstructionAttributeMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TestInstructionAttributeMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(BaseAttributeInformation, other.BaseAttributeInformation)) return false;
          if (!object.Equals(AttributeInformation, other.AttributeInformation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (baseAttributeInformation_ != null) hash ^= BaseAttributeInformation.GetHashCode();
          if (attributeInformation_ != null) hash ^= AttributeInformation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (baseAttributeInformation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BaseAttributeInformation);
          }
          if (attributeInformation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(AttributeInformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (baseAttributeInformation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BaseAttributeInformation);
          }
          if (attributeInformation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(AttributeInformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (baseAttributeInformation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseAttributeInformation);
          }
          if (attributeInformation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttributeInformation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TestInstructionAttributeMessage other) {
          if (other == null) {
            return;
          }
          if (other.baseAttributeInformation_ != null) {
            if (baseAttributeInformation_ == null) {
              BaseAttributeInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.BaseAttributeInformationMessage();
            }
            BaseAttributeInformation.MergeFrom(other.BaseAttributeInformation);
          }
          if (other.attributeInformation_ != null) {
            if (attributeInformation_ == null) {
              AttributeInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage();
            }
            AttributeInformation.MergeFrom(other.AttributeInformation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (baseAttributeInformation_ == null) {
                  BaseAttributeInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.BaseAttributeInformationMessage();
                }
                input.ReadMessage(BaseAttributeInformation);
                break;
              }
              case 18: {
                if (attributeInformation_ == null) {
                  AttributeInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage();
                }
                input.ReadMessage(AttributeInformation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (baseAttributeInformation_ == null) {
                  BaseAttributeInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.BaseAttributeInformationMessage();
                }
                input.ReadMessage(BaseAttributeInformation);
                break;
              }
              case 18: {
                if (attributeInformation_ == null) {
                  AttributeInformation = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage();
                }
                input.ReadMessage(AttributeInformation);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TestInstructionAttributeMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class BaseAttributeInformationMessage : pb::IMessage<BaseAttributeInformationMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<BaseAttributeInformationMessage> _parser = new pb::MessageParser<BaseAttributeInformationMessage>(() => new BaseAttributeInformationMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<BaseAttributeInformationMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BaseAttributeInformationMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BaseAttributeInformationMessage(BaseAttributeInformationMessage other) : this() {
              testInstructionAttributeUuid_ = other.testInstructionAttributeUuid_;
              testInstructionAttributeName_ = other.testInstructionAttributeName_;
              testInstructionAttributeTypeUuid_ = other.testInstructionAttributeTypeUuid_;
              testInstructionAttributeTypeName_ = other.testInstructionAttributeTypeName_;
              testInstructionAttributeDescription_ = other.testInstructionAttributeDescription_;
              testInstructionAttributeMouseOver_ = other.testInstructionAttributeMouseOver_;
              testInstructionAttributeVisible_ = other.testInstructionAttributeVisible_;
              testInstructionAttributeEnable_ = other.testInstructionAttributeEnable_;
              testInstructionAttributeMandatory_ = other.testInstructionAttributeMandatory_;
              testInstructionAttributeVisibleInTestCaseArea_ = other.testInstructionAttributeVisibleInTestCaseArea_;
              testInstructionAttributeIsDeprecated_ = other.testInstructionAttributeIsDeprecated_;
              testInstructionAttributeType_ = other.testInstructionAttributeType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BaseAttributeInformationMessage Clone() {
              return new BaseAttributeInformationMessage(this);
            }

            /// <summary>Field number for the "TestInstructionAttributeUuid" field.</summary>
            public const int TestInstructionAttributeUuidFieldNumber = 1;
            private string testInstructionAttributeUuid_ = "";
            /// <summary>
            /// The unique uuid for the TestInstructionAttribute, set by plugin
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeUuid {
              get { return testInstructionAttributeUuid_; }
              set {
                testInstructionAttributeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeName" field.</summary>
            public const int TestInstructionAttributeNameFieldNumber = 2;
            private string testInstructionAttributeName_ = "";
            /// <summary>
            /// The name of the TestInstructionAttribute
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeName {
              get { return testInstructionAttributeName_; }
              set {
                testInstructionAttributeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeTypeUuid" field.</summary>
            public const int TestInstructionAttributeTypeUuidFieldNumber = 3;
            private string testInstructionAttributeTypeUuid_ = "";
            /// <summary>
            /// The unique uuid for the TestInstructionAttribute-type
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeTypeUuid {
              get { return testInstructionAttributeTypeUuid_; }
              set {
                testInstructionAttributeTypeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeTypeName" field.</summary>
            public const int TestInstructionAttributeTypeNameFieldNumber = 4;
            private string testInstructionAttributeTypeName_ = "";
            /// <summary>
            /// The name for the TestInstructionAttribute-type, used to group attributes in GUI
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeTypeName {
              get { return testInstructionAttributeTypeName_; }
              set {
                testInstructionAttributeTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeDescription" field.</summary>
            public const int TestInstructionAttributeDescriptionFieldNumber = 5;
            private string testInstructionAttributeDescription_ = "";
            /// <summary>
            /// The description of the TestInstructionAttribute
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeDescription {
              get { return testInstructionAttributeDescription_; }
              set {
                testInstructionAttributeDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeMouseOver" field.</summary>
            public const int TestInstructionAttributeMouseOverFieldNumber = 6;
            private string testInstructionAttributeMouseOver_ = "";
            /// <summary>
            /// The mouse over text for the TestInstructionAttribute
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeMouseOver {
              get { return testInstructionAttributeMouseOver_; }
              set {
                testInstructionAttributeMouseOver_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeVisible" field.</summary>
            public const int TestInstructionAttributeVisibleFieldNumber = 7;
            private bool testInstructionAttributeVisible_;
            /// <summary>
            /// Should the TestInstructionAttribute be visible in attributes list in GUI or not
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool TestInstructionAttributeVisible {
              get { return testInstructionAttributeVisible_; }
              set {
                testInstructionAttributeVisible_ = value;
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeEnable" field.</summary>
            public const int TestInstructionAttributeEnableFieldNumber = 8;
            private bool testInstructionAttributeEnable_;
            /// <summary>
            /// Should the TestInstructionAttribute be enabled or not
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool TestInstructionAttributeEnable {
              get { return testInstructionAttributeEnable_; }
              set {
                testInstructionAttributeEnable_ = value;
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeMandatory" field.</summary>
            public const int TestInstructionAttributeMandatoryFieldNumber = 9;
            private bool testInstructionAttributeMandatory_;
            /// <summary>
            /// Should the TestInstructionAttribute be mandatory or not
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool TestInstructionAttributeMandatory {
              get { return testInstructionAttributeMandatory_; }
              set {
                testInstructionAttributeMandatory_ = value;
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeVisibleInTestCaseArea" field.</summary>
            public const int TestInstructionAttributeVisibleInTestCaseAreaFieldNumber = 10;
            private bool testInstructionAttributeVisibleInTestCaseArea_;
            /// <summary>
            /// Should the TestInstructionAttribute be visible in TestInstruction at TestCaseModel- Area in GUI or not
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool TestInstructionAttributeVisibleInTestCaseArea {
              get { return testInstructionAttributeVisibleInTestCaseArea_; }
              set {
                testInstructionAttributeVisibleInTestCaseArea_ = value;
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeIsDeprecated" field.</summary>
            public const int TestInstructionAttributeIsDeprecatedFieldNumber = 11;
            private bool testInstructionAttributeIsDeprecated_;
            /// <summary>
            /// Indicates that this TestInstruction attribute shouldn't be used anymore
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool TestInstructionAttributeIsDeprecated {
              get { return testInstructionAttributeIsDeprecated_; }
              set {
                testInstructionAttributeIsDeprecated_ = value;
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeType" field.</summary>
            public const int TestInstructionAttributeTypeFieldNumber = 12;
            private global::SubCustodyServer.TestInstructionAttributeTypeEnum testInstructionAttributeType_ = global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox;
            /// <summary>
            /// The chosen Enum value for what type the instruction attribute should be
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::SubCustodyServer.TestInstructionAttributeTypeEnum TestInstructionAttributeType {
              get { return testInstructionAttributeType_; }
              set {
                testInstructionAttributeType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as BaseAttributeInformationMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(BaseAttributeInformationMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (TestInstructionAttributeUuid != other.TestInstructionAttributeUuid) return false;
              if (TestInstructionAttributeName != other.TestInstructionAttributeName) return false;
              if (TestInstructionAttributeTypeUuid != other.TestInstructionAttributeTypeUuid) return false;
              if (TestInstructionAttributeTypeName != other.TestInstructionAttributeTypeName) return false;
              if (TestInstructionAttributeDescription != other.TestInstructionAttributeDescription) return false;
              if (TestInstructionAttributeMouseOver != other.TestInstructionAttributeMouseOver) return false;
              if (TestInstructionAttributeVisible != other.TestInstructionAttributeVisible) return false;
              if (TestInstructionAttributeEnable != other.TestInstructionAttributeEnable) return false;
              if (TestInstructionAttributeMandatory != other.TestInstructionAttributeMandatory) return false;
              if (TestInstructionAttributeVisibleInTestCaseArea != other.TestInstructionAttributeVisibleInTestCaseArea) return false;
              if (TestInstructionAttributeIsDeprecated != other.TestInstructionAttributeIsDeprecated) return false;
              if (TestInstructionAttributeType != other.TestInstructionAttributeType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (TestInstructionAttributeUuid.Length != 0) hash ^= TestInstructionAttributeUuid.GetHashCode();
              if (TestInstructionAttributeName.Length != 0) hash ^= TestInstructionAttributeName.GetHashCode();
              if (TestInstructionAttributeTypeUuid.Length != 0) hash ^= TestInstructionAttributeTypeUuid.GetHashCode();
              if (TestInstructionAttributeTypeName.Length != 0) hash ^= TestInstructionAttributeTypeName.GetHashCode();
              if (TestInstructionAttributeDescription.Length != 0) hash ^= TestInstructionAttributeDescription.GetHashCode();
              if (TestInstructionAttributeMouseOver.Length != 0) hash ^= TestInstructionAttributeMouseOver.GetHashCode();
              if (TestInstructionAttributeVisible != false) hash ^= TestInstructionAttributeVisible.GetHashCode();
              if (TestInstructionAttributeEnable != false) hash ^= TestInstructionAttributeEnable.GetHashCode();
              if (TestInstructionAttributeMandatory != false) hash ^= TestInstructionAttributeMandatory.GetHashCode();
              if (TestInstructionAttributeVisibleInTestCaseArea != false) hash ^= TestInstructionAttributeVisibleInTestCaseArea.GetHashCode();
              if (TestInstructionAttributeIsDeprecated != false) hash ^= TestInstructionAttributeIsDeprecated.GetHashCode();
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) hash ^= TestInstructionAttributeType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (TestInstructionAttributeUuid.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(TestInstructionAttributeName);
              }
              if (TestInstructionAttributeTypeUuid.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(TestInstructionAttributeTypeUuid);
              }
              if (TestInstructionAttributeTypeName.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(TestInstructionAttributeTypeName);
              }
              if (TestInstructionAttributeDescription.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(TestInstructionAttributeDescription);
              }
              if (TestInstructionAttributeMouseOver.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(TestInstructionAttributeMouseOver);
              }
              if (TestInstructionAttributeVisible != false) {
                output.WriteRawTag(56);
                output.WriteBool(TestInstructionAttributeVisible);
              }
              if (TestInstructionAttributeEnable != false) {
                output.WriteRawTag(64);
                output.WriteBool(TestInstructionAttributeEnable);
              }
              if (TestInstructionAttributeMandatory != false) {
                output.WriteRawTag(72);
                output.WriteBool(TestInstructionAttributeMandatory);
              }
              if (TestInstructionAttributeVisibleInTestCaseArea != false) {
                output.WriteRawTag(80);
                output.WriteBool(TestInstructionAttributeVisibleInTestCaseArea);
              }
              if (TestInstructionAttributeIsDeprecated != false) {
                output.WriteRawTag(88);
                output.WriteBool(TestInstructionAttributeIsDeprecated);
              }
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                output.WriteRawTag(96);
                output.WriteEnum((int) TestInstructionAttributeType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (TestInstructionAttributeUuid.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(TestInstructionAttributeName);
              }
              if (TestInstructionAttributeTypeUuid.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(TestInstructionAttributeTypeUuid);
              }
              if (TestInstructionAttributeTypeName.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(TestInstructionAttributeTypeName);
              }
              if (TestInstructionAttributeDescription.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(TestInstructionAttributeDescription);
              }
              if (TestInstructionAttributeMouseOver.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(TestInstructionAttributeMouseOver);
              }
              if (TestInstructionAttributeVisible != false) {
                output.WriteRawTag(56);
                output.WriteBool(TestInstructionAttributeVisible);
              }
              if (TestInstructionAttributeEnable != false) {
                output.WriteRawTag(64);
                output.WriteBool(TestInstructionAttributeEnable);
              }
              if (TestInstructionAttributeMandatory != false) {
                output.WriteRawTag(72);
                output.WriteBool(TestInstructionAttributeMandatory);
              }
              if (TestInstructionAttributeVisibleInTestCaseArea != false) {
                output.WriteRawTag(80);
                output.WriteBool(TestInstructionAttributeVisibleInTestCaseArea);
              }
              if (TestInstructionAttributeIsDeprecated != false) {
                output.WriteRawTag(88);
                output.WriteBool(TestInstructionAttributeIsDeprecated);
              }
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                output.WriteRawTag(96);
                output.WriteEnum((int) TestInstructionAttributeType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (TestInstructionAttributeUuid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeName);
              }
              if (TestInstructionAttributeTypeUuid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeTypeUuid);
              }
              if (TestInstructionAttributeTypeName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeTypeName);
              }
              if (TestInstructionAttributeDescription.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeDescription);
              }
              if (TestInstructionAttributeMouseOver.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeMouseOver);
              }
              if (TestInstructionAttributeVisible != false) {
                size += 1 + 1;
              }
              if (TestInstructionAttributeEnable != false) {
                size += 1 + 1;
              }
              if (TestInstructionAttributeMandatory != false) {
                size += 1 + 1;
              }
              if (TestInstructionAttributeVisibleInTestCaseArea != false) {
                size += 1 + 1;
              }
              if (TestInstructionAttributeIsDeprecated != false) {
                size += 1 + 1;
              }
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestInstructionAttributeType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(BaseAttributeInformationMessage other) {
              if (other == null) {
                return;
              }
              if (other.TestInstructionAttributeUuid.Length != 0) {
                TestInstructionAttributeUuid = other.TestInstructionAttributeUuid;
              }
              if (other.TestInstructionAttributeName.Length != 0) {
                TestInstructionAttributeName = other.TestInstructionAttributeName;
              }
              if (other.TestInstructionAttributeTypeUuid.Length != 0) {
                TestInstructionAttributeTypeUuid = other.TestInstructionAttributeTypeUuid;
              }
              if (other.TestInstructionAttributeTypeName.Length != 0) {
                TestInstructionAttributeTypeName = other.TestInstructionAttributeTypeName;
              }
              if (other.TestInstructionAttributeDescription.Length != 0) {
                TestInstructionAttributeDescription = other.TestInstructionAttributeDescription;
              }
              if (other.TestInstructionAttributeMouseOver.Length != 0) {
                TestInstructionAttributeMouseOver = other.TestInstructionAttributeMouseOver;
              }
              if (other.TestInstructionAttributeVisible != false) {
                TestInstructionAttributeVisible = other.TestInstructionAttributeVisible;
              }
              if (other.TestInstructionAttributeEnable != false) {
                TestInstructionAttributeEnable = other.TestInstructionAttributeEnable;
              }
              if (other.TestInstructionAttributeMandatory != false) {
                TestInstructionAttributeMandatory = other.TestInstructionAttributeMandatory;
              }
              if (other.TestInstructionAttributeVisibleInTestCaseArea != false) {
                TestInstructionAttributeVisibleInTestCaseArea = other.TestInstructionAttributeVisibleInTestCaseArea;
              }
              if (other.TestInstructionAttributeIsDeprecated != false) {
                TestInstructionAttributeIsDeprecated = other.TestInstructionAttributeIsDeprecated;
              }
              if (other.TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                TestInstructionAttributeType = other.TestInstructionAttributeType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    TestInstructionAttributeUuid = input.ReadString();
                    break;
                  }
                  case 18: {
                    TestInstructionAttributeName = input.ReadString();
                    break;
                  }
                  case 26: {
                    TestInstructionAttributeTypeUuid = input.ReadString();
                    break;
                  }
                  case 34: {
                    TestInstructionAttributeTypeName = input.ReadString();
                    break;
                  }
                  case 42: {
                    TestInstructionAttributeDescription = input.ReadString();
                    break;
                  }
                  case 50: {
                    TestInstructionAttributeMouseOver = input.ReadString();
                    break;
                  }
                  case 56: {
                    TestInstructionAttributeVisible = input.ReadBool();
                    break;
                  }
                  case 64: {
                    TestInstructionAttributeEnable = input.ReadBool();
                    break;
                  }
                  case 72: {
                    TestInstructionAttributeMandatory = input.ReadBool();
                    break;
                  }
                  case 80: {
                    TestInstructionAttributeVisibleInTestCaseArea = input.ReadBool();
                    break;
                  }
                  case 88: {
                    TestInstructionAttributeIsDeprecated = input.ReadBool();
                    break;
                  }
                  case 96: {
                    TestInstructionAttributeType = (global::SubCustodyServer.TestInstructionAttributeTypeEnum) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    TestInstructionAttributeUuid = input.ReadString();
                    break;
                  }
                  case 18: {
                    TestInstructionAttributeName = input.ReadString();
                    break;
                  }
                  case 26: {
                    TestInstructionAttributeTypeUuid = input.ReadString();
                    break;
                  }
                  case 34: {
                    TestInstructionAttributeTypeName = input.ReadString();
                    break;
                  }
                  case 42: {
                    TestInstructionAttributeDescription = input.ReadString();
                    break;
                  }
                  case 50: {
                    TestInstructionAttributeMouseOver = input.ReadString();
                    break;
                  }
                  case 56: {
                    TestInstructionAttributeVisible = input.ReadBool();
                    break;
                  }
                  case 64: {
                    TestInstructionAttributeEnable = input.ReadBool();
                    break;
                  }
                  case 72: {
                    TestInstructionAttributeMandatory = input.ReadBool();
                    break;
                  }
                  case 80: {
                    TestInstructionAttributeVisibleInTestCaseArea = input.ReadBool();
                    break;
                  }
                  case 88: {
                    TestInstructionAttributeIsDeprecated = input.ReadBool();
                    break;
                  }
                  case 96: {
                    TestInstructionAttributeType = (global::SubCustodyServer.TestInstructionAttributeTypeEnum) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Message holding one attribute. It has the ability to hold different types of attribute but only one should be used
          /// </summary>
          public sealed partial class AttributeInformationMessage : pb::IMessage<AttributeInformationMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<AttributeInformationMessage> _parser = new pb::MessageParser<AttributeInformationMessage>(() => new AttributeInformationMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<AttributeInformationMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AttributeInformationMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AttributeInformationMessage(AttributeInformationMessage other) : this() {
              inputTextBoxProperty_ = other.inputTextBoxProperty_ != null ? other.inputTextBoxProperty_.Clone() : null;
              inputComboBoxProperty_ = other.inputComboBoxProperty_ != null ? other.inputComboBoxProperty_.Clone() : null;
              inputFileSelectorProperty_ = other.inputFileSelectorProperty_ != null ? other.inputFileSelectorProperty_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AttributeInformationMessage Clone() {
              return new AttributeInformationMessage(this);
            }

            /// <summary>Field number for the "inputTextBoxProperty" field.</summary>
            public const int InputTextBoxPropertyFieldNumber = 1;
            private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputTextBoxProperty inputTextBoxProperty_;
            /// <summary>
            /// If the attribute is a textbox then all properties can be found in structure
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputTextBoxProperty InputTextBoxProperty {
              get { return inputTextBoxProperty_; }
              set {
                inputTextBoxProperty_ = value;
              }
            }

            /// <summary>Field number for the "InputComboBoxProperty" field.</summary>
            public const int InputComboBoxPropertyFieldNumber = 2;
            private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputComboBoxProperty inputComboBoxProperty_;
            /// <summary>
            /// If the attribute is a combobox then all properties can be found in structure
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputComboBoxProperty InputComboBoxProperty {
              get { return inputComboBoxProperty_; }
              set {
                inputComboBoxProperty_ = value;
              }
            }

            /// <summary>Field number for the "InputFileSelectorProperty" field.</summary>
            public const int InputFileSelectorPropertyFieldNumber = 3;
            private global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputFileSelectorProperty inputFileSelectorProperty_;
            /// <summary>
            /// If the attribute is a combobox then all properties can be found in structure
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputFileSelectorProperty InputFileSelectorProperty {
              get { return inputFileSelectorProperty_; }
              set {
                inputFileSelectorProperty_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as AttributeInformationMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(AttributeInformationMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(InputTextBoxProperty, other.InputTextBoxProperty)) return false;
              if (!object.Equals(InputComboBoxProperty, other.InputComboBoxProperty)) return false;
              if (!object.Equals(InputFileSelectorProperty, other.InputFileSelectorProperty)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (inputTextBoxProperty_ != null) hash ^= InputTextBoxProperty.GetHashCode();
              if (inputComboBoxProperty_ != null) hash ^= InputComboBoxProperty.GetHashCode();
              if (inputFileSelectorProperty_ != null) hash ^= InputFileSelectorProperty.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (inputTextBoxProperty_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(InputTextBoxProperty);
              }
              if (inputComboBoxProperty_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(InputComboBoxProperty);
              }
              if (inputFileSelectorProperty_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(InputFileSelectorProperty);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (inputTextBoxProperty_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(InputTextBoxProperty);
              }
              if (inputComboBoxProperty_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(InputComboBoxProperty);
              }
              if (inputFileSelectorProperty_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(InputFileSelectorProperty);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (inputTextBoxProperty_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputTextBoxProperty);
              }
              if (inputComboBoxProperty_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputComboBoxProperty);
              }
              if (inputFileSelectorProperty_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(InputFileSelectorProperty);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(AttributeInformationMessage other) {
              if (other == null) {
                return;
              }
              if (other.inputTextBoxProperty_ != null) {
                if (inputTextBoxProperty_ == null) {
                  InputTextBoxProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputTextBoxProperty();
                }
                InputTextBoxProperty.MergeFrom(other.InputTextBoxProperty);
              }
              if (other.inputComboBoxProperty_ != null) {
                if (inputComboBoxProperty_ == null) {
                  InputComboBoxProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputComboBoxProperty();
                }
                InputComboBoxProperty.MergeFrom(other.InputComboBoxProperty);
              }
              if (other.inputFileSelectorProperty_ != null) {
                if (inputFileSelectorProperty_ == null) {
                  InputFileSelectorProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputFileSelectorProperty();
                }
                InputFileSelectorProperty.MergeFrom(other.InputFileSelectorProperty);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (inputTextBoxProperty_ == null) {
                      InputTextBoxProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputTextBoxProperty();
                    }
                    input.ReadMessage(InputTextBoxProperty);
                    break;
                  }
                  case 18: {
                    if (inputComboBoxProperty_ == null) {
                      InputComboBoxProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputComboBoxProperty();
                    }
                    input.ReadMessage(InputComboBoxProperty);
                    break;
                  }
                  case 26: {
                    if (inputFileSelectorProperty_ == null) {
                      InputFileSelectorProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputFileSelectorProperty();
                    }
                    input.ReadMessage(InputFileSelectorProperty);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (inputTextBoxProperty_ == null) {
                      InputTextBoxProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputTextBoxProperty();
                    }
                    input.ReadMessage(InputTextBoxProperty);
                    break;
                  }
                  case 18: {
                    if (inputComboBoxProperty_ == null) {
                      InputComboBoxProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputComboBoxProperty();
                    }
                    input.ReadMessage(InputComboBoxProperty);
                    break;
                  }
                  case 26: {
                    if (inputFileSelectorProperty_ == null) {
                      InputFileSelectorProperty = new global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Types.TestInstructionAttributeInputFileSelectorProperty();
                    }
                    input.ReadMessage(InputFileSelectorProperty);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the AttributeInformationMessage message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              /// <summary>
              /// Properties if it is a TextBox attribute
              /// </summary>
              public sealed partial class TestInstructionAttributeInputTextBoxProperty : pb::IMessage<TestInstructionAttributeInputTextBoxProperty>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<TestInstructionAttributeInputTextBoxProperty> _parser = new pb::MessageParser<TestInstructionAttributeInputTextBoxProperty>(() => new TestInstructionAttributeInputTextBoxProperty());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<TestInstructionAttributeInputTextBoxProperty> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputTextBoxProperty() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputTextBoxProperty(TestInstructionAttributeInputTextBoxProperty other) : this() {
                  testInstructionAttributeInputTextBoUuid_ = other.testInstructionAttributeInputTextBoUuid_;
                  testInstructionAttributeInputTextBoxName_ = other.testInstructionAttributeInputTextBoxName_;
                  textBoxEditable_ = other.textBoxEditable_;
                  textBoxInputMask_ = other.textBoxInputMask_;
                  textBoxAttributeTypeUuid_ = other.textBoxAttributeTypeUuid_;
                  textBoxAttributeTypeName_ = other.textBoxAttributeTypeName_;
                  textBoxAttributeValue_ = other.textBoxAttributeValue_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputTextBoxProperty Clone() {
                  return new TestInstructionAttributeInputTextBoxProperty(this);
                }

                /// <summary>Field number for the "TestInstructionAttributeInputTextBoUuid" field.</summary>
                public const int TestInstructionAttributeInputTextBoUuidFieldNumber = 1;
                private string testInstructionAttributeInputTextBoUuid_ = "";
                /// <summary>
                /// The unique uuid for the TestInstructionAttributeInputTextBoxProperties
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeInputTextBoUuid {
                  get { return testInstructionAttributeInputTextBoUuid_; }
                  set {
                    testInstructionAttributeInputTextBoUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TestInstructionAttributeInputTextBoxName" field.</summary>
                public const int TestInstructionAttributeInputTextBoxNameFieldNumber = 2;
                private string testInstructionAttributeInputTextBoxName_ = "";
                /// <summary>
                /// The name of the TestInstructionAttributeInputTextBoxProperties
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeInputTextBoxName {
                  get { return testInstructionAttributeInputTextBoxName_; }
                  set {
                    testInstructionAttributeInputTextBoxName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TextBoxEditable" field.</summary>
                public const int TextBoxEditableFieldNumber = 3;
                private bool textBoxEditable_;
                /// <summary>
                /// Should the the TextBox be editable or not
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool TextBoxEditable {
                  get { return textBoxEditable_; }
                  set {
                    textBoxEditable_ = value;
                  }
                }

                /// <summary>Field number for the "TextBoxInputMask" field.</summary>
                public const int TextBoxInputMaskFieldNumber = 4;
                private string textBoxInputMask_ = "";
                /// <summary>
                /// Input mask for the TextBox
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TextBoxInputMask {
                  get { return textBoxInputMask_; }
                  set {
                    textBoxInputMask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TextBoxAttributeTypeUuid" field.</summary>
                public const int TextBoxAttributeTypeUuidFieldNumber = 5;
                private string textBoxAttributeTypeUuid_ = "";
                /// <summary>
                /// The unique uuid for the Type of the TextBox. Used for data manipulation
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TextBoxAttributeTypeUuid {
                  get { return textBoxAttributeTypeUuid_; }
                  set {
                    textBoxAttributeTypeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TextBoxAttributeTypeName" field.</summary>
                public const int TextBoxAttributeTypeNameFieldNumber = 6;
                private string textBoxAttributeTypeName_ = "";
                /// <summary>
                /// The Name for the Type of the TextBox.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TextBoxAttributeTypeName {
                  get { return textBoxAttributeTypeName_; }
                  set {
                    textBoxAttributeTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TextBoxAttributeValue" field.</summary>
                public const int TextBoxAttributeValueFieldNumber = 7;
                private string textBoxAttributeValue_ = "";
                /// <summary>
                /// The value for the the TextBox, used for preset values
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TextBoxAttributeValue {
                  get { return textBoxAttributeValue_; }
                  set {
                    textBoxAttributeValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as TestInstructionAttributeInputTextBoxProperty);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(TestInstructionAttributeInputTextBoxProperty other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (TestInstructionAttributeInputTextBoUuid != other.TestInstructionAttributeInputTextBoUuid) return false;
                  if (TestInstructionAttributeInputTextBoxName != other.TestInstructionAttributeInputTextBoxName) return false;
                  if (TextBoxEditable != other.TextBoxEditable) return false;
                  if (TextBoxInputMask != other.TextBoxInputMask) return false;
                  if (TextBoxAttributeTypeUuid != other.TextBoxAttributeTypeUuid) return false;
                  if (TextBoxAttributeTypeName != other.TextBoxAttributeTypeName) return false;
                  if (TextBoxAttributeValue != other.TextBoxAttributeValue) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (TestInstructionAttributeInputTextBoUuid.Length != 0) hash ^= TestInstructionAttributeInputTextBoUuid.GetHashCode();
                  if (TestInstructionAttributeInputTextBoxName.Length != 0) hash ^= TestInstructionAttributeInputTextBoxName.GetHashCode();
                  if (TextBoxEditable != false) hash ^= TextBoxEditable.GetHashCode();
                  if (TextBoxInputMask.Length != 0) hash ^= TextBoxInputMask.GetHashCode();
                  if (TextBoxAttributeTypeUuid.Length != 0) hash ^= TextBoxAttributeTypeUuid.GetHashCode();
                  if (TextBoxAttributeTypeName.Length != 0) hash ^= TextBoxAttributeTypeName.GetHashCode();
                  if (TextBoxAttributeValue.Length != 0) hash ^= TextBoxAttributeValue.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (TestInstructionAttributeInputTextBoUuid.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(TestInstructionAttributeInputTextBoUuid);
                  }
                  if (TestInstructionAttributeInputTextBoxName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TestInstructionAttributeInputTextBoxName);
                  }
                  if (TextBoxEditable != false) {
                    output.WriteRawTag(24);
                    output.WriteBool(TextBoxEditable);
                  }
                  if (TextBoxInputMask.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(TextBoxInputMask);
                  }
                  if (TextBoxAttributeTypeUuid.Length != 0) {
                    output.WriteRawTag(42);
                    output.WriteString(TextBoxAttributeTypeUuid);
                  }
                  if (TextBoxAttributeTypeName.Length != 0) {
                    output.WriteRawTag(50);
                    output.WriteString(TextBoxAttributeTypeName);
                  }
                  if (TextBoxAttributeValue.Length != 0) {
                    output.WriteRawTag(58);
                    output.WriteString(TextBoxAttributeValue);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (TestInstructionAttributeInputTextBoUuid.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(TestInstructionAttributeInputTextBoUuid);
                  }
                  if (TestInstructionAttributeInputTextBoxName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TestInstructionAttributeInputTextBoxName);
                  }
                  if (TextBoxEditable != false) {
                    output.WriteRawTag(24);
                    output.WriteBool(TextBoxEditable);
                  }
                  if (TextBoxInputMask.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(TextBoxInputMask);
                  }
                  if (TextBoxAttributeTypeUuid.Length != 0) {
                    output.WriteRawTag(42);
                    output.WriteString(TextBoxAttributeTypeUuid);
                  }
                  if (TextBoxAttributeTypeName.Length != 0) {
                    output.WriteRawTag(50);
                    output.WriteString(TextBoxAttributeTypeName);
                  }
                  if (TextBoxAttributeValue.Length != 0) {
                    output.WriteRawTag(58);
                    output.WriteString(TextBoxAttributeValue);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (TestInstructionAttributeInputTextBoUuid.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeInputTextBoUuid);
                  }
                  if (TestInstructionAttributeInputTextBoxName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeInputTextBoxName);
                  }
                  if (TextBoxEditable != false) {
                    size += 1 + 1;
                  }
                  if (TextBoxInputMask.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TextBoxInputMask);
                  }
                  if (TextBoxAttributeTypeUuid.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TextBoxAttributeTypeUuid);
                  }
                  if (TextBoxAttributeTypeName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TextBoxAttributeTypeName);
                  }
                  if (TextBoxAttributeValue.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TextBoxAttributeValue);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(TestInstructionAttributeInputTextBoxProperty other) {
                  if (other == null) {
                    return;
                  }
                  if (other.TestInstructionAttributeInputTextBoUuid.Length != 0) {
                    TestInstructionAttributeInputTextBoUuid = other.TestInstructionAttributeInputTextBoUuid;
                  }
                  if (other.TestInstructionAttributeInputTextBoxName.Length != 0) {
                    TestInstructionAttributeInputTextBoxName = other.TestInstructionAttributeInputTextBoxName;
                  }
                  if (other.TextBoxEditable != false) {
                    TextBoxEditable = other.TextBoxEditable;
                  }
                  if (other.TextBoxInputMask.Length != 0) {
                    TextBoxInputMask = other.TextBoxInputMask;
                  }
                  if (other.TextBoxAttributeTypeUuid.Length != 0) {
                    TextBoxAttributeTypeUuid = other.TextBoxAttributeTypeUuid;
                  }
                  if (other.TextBoxAttributeTypeName.Length != 0) {
                    TextBoxAttributeTypeName = other.TextBoxAttributeTypeName;
                  }
                  if (other.TextBoxAttributeValue.Length != 0) {
                    TextBoxAttributeValue = other.TextBoxAttributeValue;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        TestInstructionAttributeInputTextBoUuid = input.ReadString();
                        break;
                      }
                      case 18: {
                        TestInstructionAttributeInputTextBoxName = input.ReadString();
                        break;
                      }
                      case 24: {
                        TextBoxEditable = input.ReadBool();
                        break;
                      }
                      case 34: {
                        TextBoxInputMask = input.ReadString();
                        break;
                      }
                      case 42: {
                        TextBoxAttributeTypeUuid = input.ReadString();
                        break;
                      }
                      case 50: {
                        TextBoxAttributeTypeName = input.ReadString();
                        break;
                      }
                      case 58: {
                        TextBoxAttributeValue = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        TestInstructionAttributeInputTextBoUuid = input.ReadString();
                        break;
                      }
                      case 18: {
                        TestInstructionAttributeInputTextBoxName = input.ReadString();
                        break;
                      }
                      case 24: {
                        TextBoxEditable = input.ReadBool();
                        break;
                      }
                      case 34: {
                        TextBoxInputMask = input.ReadString();
                        break;
                      }
                      case 42: {
                        TextBoxAttributeTypeUuid = input.ReadString();
                        break;
                      }
                      case 50: {
                        TextBoxAttributeTypeName = input.ReadString();
                        break;
                      }
                      case 58: {
                        TextBoxAttributeValue = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              /// <summary>
              /// Properties if it is a ComboBox attribute
              /// </summary>
              public sealed partial class TestInstructionAttributeInputComboBoxProperty : pb::IMessage<TestInstructionAttributeInputComboBoxProperty>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<TestInstructionAttributeInputComboBoxProperty> _parser = new pb::MessageParser<TestInstructionAttributeInputComboBoxProperty>(() => new TestInstructionAttributeInputComboBoxProperty());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<TestInstructionAttributeInputComboBoxProperty> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputComboBoxProperty() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputComboBoxProperty(TestInstructionAttributeInputComboBoxProperty other) : this() {
                  testInstructionAttributeComboBoxUuid_ = other.testInstructionAttributeComboBoxUuid_;
                  testInstructionAttributeComboBoxName_ = other.testInstructionAttributeComboBoxName_;
                  comboBoxEditable_ = other.comboBoxEditable_;
                  comboBoxInputMask_ = other.comboBoxInputMask_;
                  comboBoxAttributeTypeUuid_ = other.comboBoxAttributeTypeUuid_;
                  comboBoxAttributeTypeName_ = other.comboBoxAttributeTypeName_;
                  comboBoxAttributeValueUuid_ = other.comboBoxAttributeValueUuid_;
                  comboBoxAttributeValue_ = other.comboBoxAttributeValue_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputComboBoxProperty Clone() {
                  return new TestInstructionAttributeInputComboBoxProperty(this);
                }

                /// <summary>Field number for the "TestInstructionAttributeComboBoxUuid" field.</summary>
                public const int TestInstructionAttributeComboBoxUuidFieldNumber = 1;
                private string testInstructionAttributeComboBoxUuid_ = "";
                /// <summary>
                /// The unique uuid for the TestInstructionAttributeComboBoxProperties
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeComboBoxUuid {
                  get { return testInstructionAttributeComboBoxUuid_; }
                  set {
                    testInstructionAttributeComboBoxUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TestInstructionAttributeComboBoxName" field.</summary>
                public const int TestInstructionAttributeComboBoxNameFieldNumber = 2;
                private string testInstructionAttributeComboBoxName_ = "";
                /// <summary>
                /// The name of the TestInstructionAttributeComboBoxProperties
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeComboBoxName {
                  get { return testInstructionAttributeComboBoxName_; }
                  set {
                    testInstructionAttributeComboBoxName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "ComboBoxEditable" field.</summary>
                public const int ComboBoxEditableFieldNumber = 3;
                private bool comboBoxEditable_;
                /// <summary>
                /// Should the the ComboBox be editable or not
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool ComboBoxEditable {
                  get { return comboBoxEditable_; }
                  set {
                    comboBoxEditable_ = value;
                  }
                }

                /// <summary>Field number for the "ComboBoxInputMask" field.</summary>
                public const int ComboBoxInputMaskFieldNumber = 4;
                private string comboBoxInputMask_ = "";
                /// <summary>
                /// Input mask for the ComboBox
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ComboBoxInputMask {
                  get { return comboBoxInputMask_; }
                  set {
                    comboBoxInputMask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "ComboBoxAttributeTypeUuid" field.</summary>
                public const int ComboBoxAttributeTypeUuidFieldNumber = 5;
                private string comboBoxAttributeTypeUuid_ = "";
                /// <summary>
                /// The unique uuid for the Type of the ComboBox Used for data manipulation
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ComboBoxAttributeTypeUuid {
                  get { return comboBoxAttributeTypeUuid_; }
                  set {
                    comboBoxAttributeTypeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "ComboBoxAttributeTypeName" field.</summary>
                public const int ComboBoxAttributeTypeNameFieldNumber = 6;
                private string comboBoxAttributeTypeName_ = "";
                /// <summary>
                /// The Name for the Type of the ComboBox
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ComboBoxAttributeTypeName {
                  get { return comboBoxAttributeTypeName_; }
                  set {
                    comboBoxAttributeTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "ComboBoxAttributeValueUuid" field.</summary>
                public const int ComboBoxAttributeValueUuidFieldNumber = 7;
                private string comboBoxAttributeValueUuid_ = "";
                /// <summary>
                /// The uuid of the value for the the ComboBox, used for showing one value but have a unique value behind the scene
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ComboBoxAttributeValueUuid {
                  get { return comboBoxAttributeValueUuid_; }
                  set {
                    comboBoxAttributeValueUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "ComboBoxAttributeValue" field.</summary>
                public const int ComboBoxAttributeValueFieldNumber = 8;
                private string comboBoxAttributeValue_ = "";
                /// <summary>
                /// The value for the the ComboBox, used for preset values
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string ComboBoxAttributeValue {
                  get { return comboBoxAttributeValue_; }
                  set {
                    comboBoxAttributeValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as TestInstructionAttributeInputComboBoxProperty);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(TestInstructionAttributeInputComboBoxProperty other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (TestInstructionAttributeComboBoxUuid != other.TestInstructionAttributeComboBoxUuid) return false;
                  if (TestInstructionAttributeComboBoxName != other.TestInstructionAttributeComboBoxName) return false;
                  if (ComboBoxEditable != other.ComboBoxEditable) return false;
                  if (ComboBoxInputMask != other.ComboBoxInputMask) return false;
                  if (ComboBoxAttributeTypeUuid != other.ComboBoxAttributeTypeUuid) return false;
                  if (ComboBoxAttributeTypeName != other.ComboBoxAttributeTypeName) return false;
                  if (ComboBoxAttributeValueUuid != other.ComboBoxAttributeValueUuid) return false;
                  if (ComboBoxAttributeValue != other.ComboBoxAttributeValue) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (TestInstructionAttributeComboBoxUuid.Length != 0) hash ^= TestInstructionAttributeComboBoxUuid.GetHashCode();
                  if (TestInstructionAttributeComboBoxName.Length != 0) hash ^= TestInstructionAttributeComboBoxName.GetHashCode();
                  if (ComboBoxEditable != false) hash ^= ComboBoxEditable.GetHashCode();
                  if (ComboBoxInputMask.Length != 0) hash ^= ComboBoxInputMask.GetHashCode();
                  if (ComboBoxAttributeTypeUuid.Length != 0) hash ^= ComboBoxAttributeTypeUuid.GetHashCode();
                  if (ComboBoxAttributeTypeName.Length != 0) hash ^= ComboBoxAttributeTypeName.GetHashCode();
                  if (ComboBoxAttributeValueUuid.Length != 0) hash ^= ComboBoxAttributeValueUuid.GetHashCode();
                  if (ComboBoxAttributeValue.Length != 0) hash ^= ComboBoxAttributeValue.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (TestInstructionAttributeComboBoxUuid.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(TestInstructionAttributeComboBoxUuid);
                  }
                  if (TestInstructionAttributeComboBoxName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TestInstructionAttributeComboBoxName);
                  }
                  if (ComboBoxEditable != false) {
                    output.WriteRawTag(24);
                    output.WriteBool(ComboBoxEditable);
                  }
                  if (ComboBoxInputMask.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(ComboBoxInputMask);
                  }
                  if (ComboBoxAttributeTypeUuid.Length != 0) {
                    output.WriteRawTag(42);
                    output.WriteString(ComboBoxAttributeTypeUuid);
                  }
                  if (ComboBoxAttributeTypeName.Length != 0) {
                    output.WriteRawTag(50);
                    output.WriteString(ComboBoxAttributeTypeName);
                  }
                  if (ComboBoxAttributeValueUuid.Length != 0) {
                    output.WriteRawTag(58);
                    output.WriteString(ComboBoxAttributeValueUuid);
                  }
                  if (ComboBoxAttributeValue.Length != 0) {
                    output.WriteRawTag(66);
                    output.WriteString(ComboBoxAttributeValue);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (TestInstructionAttributeComboBoxUuid.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(TestInstructionAttributeComboBoxUuid);
                  }
                  if (TestInstructionAttributeComboBoxName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TestInstructionAttributeComboBoxName);
                  }
                  if (ComboBoxEditable != false) {
                    output.WriteRawTag(24);
                    output.WriteBool(ComboBoxEditable);
                  }
                  if (ComboBoxInputMask.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(ComboBoxInputMask);
                  }
                  if (ComboBoxAttributeTypeUuid.Length != 0) {
                    output.WriteRawTag(42);
                    output.WriteString(ComboBoxAttributeTypeUuid);
                  }
                  if (ComboBoxAttributeTypeName.Length != 0) {
                    output.WriteRawTag(50);
                    output.WriteString(ComboBoxAttributeTypeName);
                  }
                  if (ComboBoxAttributeValueUuid.Length != 0) {
                    output.WriteRawTag(58);
                    output.WriteString(ComboBoxAttributeValueUuid);
                  }
                  if (ComboBoxAttributeValue.Length != 0) {
                    output.WriteRawTag(66);
                    output.WriteString(ComboBoxAttributeValue);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (TestInstructionAttributeComboBoxUuid.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeComboBoxUuid);
                  }
                  if (TestInstructionAttributeComboBoxName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeComboBoxName);
                  }
                  if (ComboBoxEditable != false) {
                    size += 1 + 1;
                  }
                  if (ComboBoxInputMask.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ComboBoxInputMask);
                  }
                  if (ComboBoxAttributeTypeUuid.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ComboBoxAttributeTypeUuid);
                  }
                  if (ComboBoxAttributeTypeName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ComboBoxAttributeTypeName);
                  }
                  if (ComboBoxAttributeValueUuid.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ComboBoxAttributeValueUuid);
                  }
                  if (ComboBoxAttributeValue.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(ComboBoxAttributeValue);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(TestInstructionAttributeInputComboBoxProperty other) {
                  if (other == null) {
                    return;
                  }
                  if (other.TestInstructionAttributeComboBoxUuid.Length != 0) {
                    TestInstructionAttributeComboBoxUuid = other.TestInstructionAttributeComboBoxUuid;
                  }
                  if (other.TestInstructionAttributeComboBoxName.Length != 0) {
                    TestInstructionAttributeComboBoxName = other.TestInstructionAttributeComboBoxName;
                  }
                  if (other.ComboBoxEditable != false) {
                    ComboBoxEditable = other.ComboBoxEditable;
                  }
                  if (other.ComboBoxInputMask.Length != 0) {
                    ComboBoxInputMask = other.ComboBoxInputMask;
                  }
                  if (other.ComboBoxAttributeTypeUuid.Length != 0) {
                    ComboBoxAttributeTypeUuid = other.ComboBoxAttributeTypeUuid;
                  }
                  if (other.ComboBoxAttributeTypeName.Length != 0) {
                    ComboBoxAttributeTypeName = other.ComboBoxAttributeTypeName;
                  }
                  if (other.ComboBoxAttributeValueUuid.Length != 0) {
                    ComboBoxAttributeValueUuid = other.ComboBoxAttributeValueUuid;
                  }
                  if (other.ComboBoxAttributeValue.Length != 0) {
                    ComboBoxAttributeValue = other.ComboBoxAttributeValue;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        TestInstructionAttributeComboBoxUuid = input.ReadString();
                        break;
                      }
                      case 18: {
                        TestInstructionAttributeComboBoxName = input.ReadString();
                        break;
                      }
                      case 24: {
                        ComboBoxEditable = input.ReadBool();
                        break;
                      }
                      case 34: {
                        ComboBoxInputMask = input.ReadString();
                        break;
                      }
                      case 42: {
                        ComboBoxAttributeTypeUuid = input.ReadString();
                        break;
                      }
                      case 50: {
                        ComboBoxAttributeTypeName = input.ReadString();
                        break;
                      }
                      case 58: {
                        ComboBoxAttributeValueUuid = input.ReadString();
                        break;
                      }
                      case 66: {
                        ComboBoxAttributeValue = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        TestInstructionAttributeComboBoxUuid = input.ReadString();
                        break;
                      }
                      case 18: {
                        TestInstructionAttributeComboBoxName = input.ReadString();
                        break;
                      }
                      case 24: {
                        ComboBoxEditable = input.ReadBool();
                        break;
                      }
                      case 34: {
                        ComboBoxInputMask = input.ReadString();
                        break;
                      }
                      case 42: {
                        ComboBoxAttributeTypeUuid = input.ReadString();
                        break;
                      }
                      case 50: {
                        ComboBoxAttributeTypeName = input.ReadString();
                        break;
                      }
                      case 58: {
                        ComboBoxAttributeValueUuid = input.ReadString();
                        break;
                      }
                      case 66: {
                        ComboBoxAttributeValue = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              /// <summary>
              /// Properties if it is a FileSelector attribute
              /// </summary>
              public sealed partial class TestInstructionAttributeInputFileSelectorProperty : pb::IMessage<TestInstructionAttributeInputFileSelectorProperty>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<TestInstructionAttributeInputFileSelectorProperty> _parser = new pb::MessageParser<TestInstructionAttributeInputFileSelectorProperty>(() => new TestInstructionAttributeInputFileSelectorProperty());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<TestInstructionAttributeInputFileSelectorProperty> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::FenixTestCaseBuilderServerGrpcApi.MatureTestInstructionInformationMessage.Types.TestInstructionAttributeMessage.Types.AttributeInformationMessage.Descriptor.NestedTypes[2]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputFileSelectorProperty() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputFileSelectorProperty(TestInstructionAttributeInputFileSelectorProperty other) : this() {
                  testInstructionAttributeFileSelectorUuid_ = other.testInstructionAttributeFileSelectorUuid_;
                  testInstructionAttributeFileSelectorName_ = other.testInstructionAttributeFileSelectorName_;
                  testInstructionAttributeFileReferenceUuid_ = other.testInstructionAttributeFileReferenceUuid_;
                  testInstructionAttributeFileReferenceName_ = other.testInstructionAttributeFileReferenceName_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public TestInstructionAttributeInputFileSelectorProperty Clone() {
                  return new TestInstructionAttributeInputFileSelectorProperty(this);
                }

                /// <summary>Field number for the "TestInstructionAttributeFileSelectorUuid" field.</summary>
                public const int TestInstructionAttributeFileSelectorUuidFieldNumber = 1;
                private string testInstructionAttributeFileSelectorUuid_ = "";
                /// <summary>
                /// The unique Uuid for the TestInstructionAttributeFileSelectorProperties
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeFileSelectorUuid {
                  get { return testInstructionAttributeFileSelectorUuid_; }
                  set {
                    testInstructionAttributeFileSelectorUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TestInstructionAttributeFileSelectorName" field.</summary>
                public const int TestInstructionAttributeFileSelectorNameFieldNumber = 2;
                private string testInstructionAttributeFileSelectorName_ = "";
                /// <summary>
                /// The name of the TestInstructionAttributeFileSelectorProperties
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeFileSelectorName {
                  get { return testInstructionAttributeFileSelectorName_; }
                  set {
                    testInstructionAttributeFileSelectorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TestInstructionAttributeFileReferenceUuid" field.</summary>
                public const int TestInstructionAttributeFileReferenceUuidFieldNumber = 3;
                private string testInstructionAttributeFileReferenceUuid_ = "";
                /// <summary>
                /// A reference, UUID, to a chosen file, that has been added to the TestCase
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeFileReferenceUuid {
                  get { return testInstructionAttributeFileReferenceUuid_; }
                  set {
                    testInstructionAttributeFileReferenceUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "TestInstructionAttributeFileReferenceName" field.</summary>
                public const int TestInstructionAttributeFileReferenceNameFieldNumber = 4;
                private string testInstructionAttributeFileReferenceName_ = "";
                /// <summary>
                /// A reference, Name, to a chosen file, that has been added to the TestCase
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string TestInstructionAttributeFileReferenceName {
                  get { return testInstructionAttributeFileReferenceName_; }
                  set {
                    testInstructionAttributeFileReferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as TestInstructionAttributeInputFileSelectorProperty);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(TestInstructionAttributeInputFileSelectorProperty other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (TestInstructionAttributeFileSelectorUuid != other.TestInstructionAttributeFileSelectorUuid) return false;
                  if (TestInstructionAttributeFileSelectorName != other.TestInstructionAttributeFileSelectorName) return false;
                  if (TestInstructionAttributeFileReferenceUuid != other.TestInstructionAttributeFileReferenceUuid) return false;
                  if (TestInstructionAttributeFileReferenceName != other.TestInstructionAttributeFileReferenceName) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (TestInstructionAttributeFileSelectorUuid.Length != 0) hash ^= TestInstructionAttributeFileSelectorUuid.GetHashCode();
                  if (TestInstructionAttributeFileSelectorName.Length != 0) hash ^= TestInstructionAttributeFileSelectorName.GetHashCode();
                  if (TestInstructionAttributeFileReferenceUuid.Length != 0) hash ^= TestInstructionAttributeFileReferenceUuid.GetHashCode();
                  if (TestInstructionAttributeFileReferenceName.Length != 0) hash ^= TestInstructionAttributeFileReferenceName.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (TestInstructionAttributeFileSelectorUuid.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(TestInstructionAttributeFileSelectorUuid);
                  }
                  if (TestInstructionAttributeFileSelectorName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TestInstructionAttributeFileSelectorName);
                  }
                  if (TestInstructionAttributeFileReferenceUuid.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(TestInstructionAttributeFileReferenceUuid);
                  }
                  if (TestInstructionAttributeFileReferenceName.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(TestInstructionAttributeFileReferenceName);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (TestInstructionAttributeFileSelectorUuid.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(TestInstructionAttributeFileSelectorUuid);
                  }
                  if (TestInstructionAttributeFileSelectorName.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(TestInstructionAttributeFileSelectorName);
                  }
                  if (TestInstructionAttributeFileReferenceUuid.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(TestInstructionAttributeFileReferenceUuid);
                  }
                  if (TestInstructionAttributeFileReferenceName.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(TestInstructionAttributeFileReferenceName);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (TestInstructionAttributeFileSelectorUuid.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeFileSelectorUuid);
                  }
                  if (TestInstructionAttributeFileSelectorName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeFileSelectorName);
                  }
                  if (TestInstructionAttributeFileReferenceUuid.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeFileReferenceUuid);
                  }
                  if (TestInstructionAttributeFileReferenceName.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeFileReferenceName);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(TestInstructionAttributeInputFileSelectorProperty other) {
                  if (other == null) {
                    return;
                  }
                  if (other.TestInstructionAttributeFileSelectorUuid.Length != 0) {
                    TestInstructionAttributeFileSelectorUuid = other.TestInstructionAttributeFileSelectorUuid;
                  }
                  if (other.TestInstructionAttributeFileSelectorName.Length != 0) {
                    TestInstructionAttributeFileSelectorName = other.TestInstructionAttributeFileSelectorName;
                  }
                  if (other.TestInstructionAttributeFileReferenceUuid.Length != 0) {
                    TestInstructionAttributeFileReferenceUuid = other.TestInstructionAttributeFileReferenceUuid;
                  }
                  if (other.TestInstructionAttributeFileReferenceName.Length != 0) {
                    TestInstructionAttributeFileReferenceName = other.TestInstructionAttributeFileReferenceName;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        TestInstructionAttributeFileSelectorUuid = input.ReadString();
                        break;
                      }
                      case 18: {
                        TestInstructionAttributeFileSelectorName = input.ReadString();
                        break;
                      }
                      case 26: {
                        TestInstructionAttributeFileReferenceUuid = input.ReadString();
                        break;
                      }
                      case 34: {
                        TestInstructionAttributeFileReferenceName = input.ReadString();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        TestInstructionAttributeFileSelectorUuid = input.ReadString();
                        break;
                      }
                      case 18: {
                        TestInstructionAttributeFileSelectorName = input.ReadString();
                        break;
                      }
                      case 26: {
                        TestInstructionAttributeFileReferenceUuid = input.ReadString();
                        break;
                      }
                      case 34: {
                        TestInstructionAttributeFileReferenceName = input.ReadString();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
