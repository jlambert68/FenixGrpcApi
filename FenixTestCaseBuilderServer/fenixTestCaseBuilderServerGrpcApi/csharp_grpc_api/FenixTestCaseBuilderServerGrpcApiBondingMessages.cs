// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_BondingMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SubCustodyServer {

  /// <summary>Holder for reflection information generated from FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_BondingMessages.proto</summary>
  public static partial class FenixTestCaseBuilderServerGrpcApiBondingMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_BondingMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FenixTestCaseBuilderServerGrpcApiBondingMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CnRGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpX0JvbmRpbmdNZXNzYWdlcy5wcm90bxIhZmVuaXhUZXN0Q2FzZUJ1",
            "aWxkZXJTZXJ2ZXJHcnBjQXBpGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1w",
            "LnByb3RvGnxGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5peFRlc3RD",
            "YXNlQnVpbGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1aWxkZXJT",
            "ZXJ2ZXJHcnBjQXBpX0dlbmVyYWxNZXNzYWdlc0FuZEVudW1zLnByb3RvIrwC",
            "ChRJbW1hdHVyZUJvbmRzTWVzc2FnZRJiCg1JbW1hdHVyZUJvbmRzGAEgAygL",
            "MksuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLkltbWF0dXJl",
            "Qm9uZHNNZXNzYWdlLkltbWF0dXJlQm9uZE1lc3NhZ2USSwoPYWNrTmFja1Jl",
            "c3BvbnNlGAIgASgLMjIuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBj",
            "QXBpLkFja05hY2tSZXNwb25zZRpzChNJbW1hdHVyZUJvbmRNZXNzYWdlElwK",
            "FEJhc2ljQm9uZEluZm9ybWF0aW9uGAEgASgLMj4uZmVuaXhUZXN0Q2FzZUJ1",
            "aWxkZXJTZXJ2ZXJHcnBjQXBpLkJhc2ljQm9uZEluZm9ybWF0aW9uTWVzc2Fn",
            "ZSLRAQoRTWF0dXJlQm9uZE1lc3NhZ2USXAoUQmFzaWNCb25kSW5mb3JtYXRp",
            "b24YASABKAsyPi5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGku",
            "QmFzaWNCb25kSW5mb3JtYXRpb25NZXNzYWdlEl4KFU1hdHVyZUJvbmRJbmZv",
            "cm1hdGlvbhgCIAEoCzI/LmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3Jw",
            "Y0FwaS5NYXR1cmVCb25kSW5mb3JtYXRpb25NZXNzYWdlIusEChtCYXNpY0Jv",
            "bmRJbmZvcm1hdGlvbk1lc3NhZ2USegoVVmlzaWJsZUJvbmRBdHRyaWJ1dGVz",
            "GAEgASgLMlsuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLkJh",
            "c2ljQm9uZEluZm9ybWF0aW9uTWVzc2FnZS5WaXNpYmxlQm9uZEF0dHJpYnV0",
            "ZXNNZXNzYWdlGs8DChxWaXNpYmxlQm9uZEF0dHJpYnV0ZXNNZXNzYWdlEhAK",
            "CEJvbmRVdWlkGAEgASgJEhAKCEJvbmROYW1lGAIgASgJEhcKD0JvbmREZXNj",
            "cmlwdGlvbhgDIAEoCRIZChFCb25kTW91c2VPdmVyVGV4dBgEIAEoCRISCgpE",
            "ZXByZWNhdGVkGAUgASgIEg8KB0VuYWJsZWQYBiABKAgSDwoHVmlzaWJsZRgH",
            "IAEoCBIRCglCb25kQ29sb3IYCCABKAkSFAoMQ2FuQmVEZWxldGVkGAkgASgI",
            "EhcKD0NhbkJlU3dhcHBlZE91dBgKIAEoCBI0ChBVcGRhdGVkVGltZVN0YW1w",
            "GAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJhChhUZXN0Q2Fz",
            "ZU1vZGVsRWxlbWVudFR5cGUYDCABKA4yPy5mZW5peFRlc3RDYXNlQnVpbGRl",
            "clNlcnZlckdycGNBcGkuVGVzdENhc2VNb2RlbEVsZW1lbnRUeXBlRW51bRIa",
            "ChJTaG93Qm9uZEF0dHJpYnV0ZXMYDSABKAgSFgoOVENSdWxlRGVsZXRpb24Y",
            "DiABKAkSEgoKVENSdWxlU3dhcBgPIAEoCSLTBQocTWF0dXJlQm9uZEluZm9y",
            "bWF0aW9uTWVzc2FnZRKQAQolTWF0dXJlQmFzaWNUZXN0SW5zdHJ1Y3Rpb25J",
            "bmZvcm1hdGlvbhgBIAEoCzJhLmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVy",
            "R3JwY0FwaS5NYXR1cmVCb25kSW5mb3JtYXRpb25NZXNzYWdlLk1hdHVyZUJh",
            "c2ljQm9uZEluZm9ybWF0aW9uTWVzc2FnZRKJAQocQ3JlYXRlZEFuZFVwZGF0",
            "ZWRJbmZvcm1hdGlvbhgCIAEoCzJjLmZlbml4VGVzdENhc2VCdWlsZGVyU2Vy",
            "dmVyR3JwY0FwaS5NYXR1cmVCb25kSW5mb3JtYXRpb25NZXNzYWdlLkNyZWF0",
            "ZWRBbmRVcGRhdGVkSW5mb3JtYXRpb25NZXNzYWdlGjsKIU1hdHVyZUJhc2lj",
            "Qm9uZEluZm9ybWF0aW9uTWVzc2FnZRIWCg5Cb25kTWF0dXJlVXVpZBgBIAEo",
            "CRrWAgojQ3JlYXRlZEFuZFVwZGF0ZWRJbmZvcm1hdGlvbk1lc3NhZ2USPAoY",
            "QWRkZWRUb1Rlc3RDYXNlVGltZVN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBIfChdBZGRlZFRvVGVzdENhc2VCeVVzZXJJZBgCIAEo",
            "CRJCCh5MYXN0VXBkYXRlZEluVGVzdENhc2VUaW1lU3RhbXAYAyABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEiUKHUxhc3RVcGRhdGVkSW5UZXN0",
            "Q2FzZUJ5VXNlcklkGAQgASgJEkAKHERlbGV0ZWRGcm9tVGVzdENhc2VUaW1l",
            "U3RhbXAYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiMKG0Rl",
            "bGV0ZWRGcm9tVGVzdENhc2VCeVVzZXJJZBgGIAEoCUIiWg0uL2dvX2dycGNf",
            "YXBpqgIQU3ViQ3VzdG9keVNlcnZlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiGeneralMessagesAndEnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureBondsMessage), global::SubCustodyServer.ImmatureBondsMessage.Parser, new[]{ "ImmatureBonds", "AckNackResponse" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureBondsMessage.Types.ImmatureBondMessage), global::SubCustodyServer.ImmatureBondsMessage.Types.ImmatureBondMessage.Parser, new[]{ "BasicBondInformation" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureBondMessage), global::SubCustodyServer.MatureBondMessage.Parser, new[]{ "BasicBondInformation", "MatureBondInformation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicBondInformationMessage), global::SubCustodyServer.BasicBondInformationMessage.Parser, new[]{ "VisibleBondAttributes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicBondInformationMessage.Types.VisibleBondAttributesMessage), global::SubCustodyServer.BasicBondInformationMessage.Types.VisibleBondAttributesMessage.Parser, new[]{ "BondUuid", "BondName", "BondDescription", "BondMouseOverText", "Deprecated", "Enabled", "Visible", "BondColor", "CanBeDeleted", "CanBeSwappedOut", "UpdatedTimeStamp", "TestCaseModelElementType", "ShowBondAttributes", "TCRuleDeletion", "TCRuleSwap" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureBondInformationMessage), global::SubCustodyServer.MatureBondInformationMessage.Parser, new[]{ "MatureBasicTestInstructionInformation", "CreatedAndUpdatedInformation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureBondInformationMessage.Types.MatureBasicBondInformationMessage), global::SubCustodyServer.MatureBondInformationMessage.Types.MatureBasicBondInformationMessage.Parser, new[]{ "BondMatureUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureBondInformationMessage.Types.CreatedAndUpdatedInformationMessage), global::SubCustodyServer.MatureBondInformationMessage.Types.CreatedAndUpdatedInformationMessage.Parser, new[]{ "AddedToTestCaseTimeStamp", "AddedToTestCaseByUserId", "LastUpdatedInTestCaseTimeStamp", "LastUpdatedInTestCaseByUserId", "DeletedFromTestCaseTimeStamp", "DeletedFromTestCaseByUserId" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message holding all immature bonds that can be used within the TestCase-model
  /// </summary>
  public sealed partial class ImmatureBondsMessage : pb::IMessage<ImmatureBondsMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmatureBondsMessage> _parser = new pb::MessageParser<ImmatureBondsMessage>(() => new ImmatureBondsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImmatureBondsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiBondingMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureBondsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureBondsMessage(ImmatureBondsMessage other) : this() {
      immatureBonds_ = other.immatureBonds_.Clone();
      ackNackResponse_ = other.ackNackResponse_ != null ? other.ackNackResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureBondsMessage Clone() {
      return new ImmatureBondsMessage(this);
    }

    /// <summary>Field number for the "ImmatureBonds" field.</summary>
    public const int ImmatureBondsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SubCustodyServer.ImmatureBondsMessage.Types.ImmatureBondMessage> _repeated_immatureBonds_codec
        = pb::FieldCodec.ForMessage(10, global::SubCustodyServer.ImmatureBondsMessage.Types.ImmatureBondMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.ImmatureBondsMessage.Types.ImmatureBondMessage> immatureBonds_ = new pbc::RepeatedField<global::SubCustodyServer.ImmatureBondsMessage.Types.ImmatureBondMessage>();
    /// <summary>
    /// List of all immature bonds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.ImmatureBondsMessage.Types.ImmatureBondMessage> ImmatureBonds {
      get { return immatureBonds_; }
    }

    /// <summary>Field number for the "ackNackResponse" field.</summary>
    public const int AckNackResponseFieldNumber = 2;
    private global::SubCustodyServer.AckNackResponse ackNackResponse_;
    /// <summary>
    /// Hold all error messages, if there are any. Message also gives of everything was OK or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.AckNackResponse AckNackResponse {
      get { return ackNackResponse_; }
      set {
        ackNackResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImmatureBondsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImmatureBondsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!immatureBonds_.Equals(other.immatureBonds_)) return false;
      if (!object.Equals(AckNackResponse, other.AckNackResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= immatureBonds_.GetHashCode();
      if (ackNackResponse_ != null) hash ^= AckNackResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      immatureBonds_.WriteTo(output, _repeated_immatureBonds_codec);
      if (ackNackResponse_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AckNackResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      immatureBonds_.WriteTo(ref output, _repeated_immatureBonds_codec);
      if (ackNackResponse_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AckNackResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += immatureBonds_.CalculateSize(_repeated_immatureBonds_codec);
      if (ackNackResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AckNackResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImmatureBondsMessage other) {
      if (other == null) {
        return;
      }
      immatureBonds_.Add(other.immatureBonds_);
      if (other.ackNackResponse_ != null) {
        if (ackNackResponse_ == null) {
          AckNackResponse = new global::SubCustodyServer.AckNackResponse();
        }
        AckNackResponse.MergeFrom(other.AckNackResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            immatureBonds_.AddEntriesFrom(input, _repeated_immatureBonds_codec);
            break;
          }
          case 18: {
            if (ackNackResponse_ == null) {
              AckNackResponse = new global::SubCustodyServer.AckNackResponse();
            }
            input.ReadMessage(AckNackResponse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            immatureBonds_.AddEntriesFrom(ref input, _repeated_immatureBonds_codec);
            break;
          }
          case 18: {
            if (ackNackResponse_ == null) {
              AckNackResponse = new global::SubCustodyServer.AckNackResponse();
            }
            input.ReadMessage(AckNackResponse);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ImmatureBondsMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding one Immature Bond which exist in a TestCase
      /// </summary>
      public sealed partial class ImmatureBondMessage : pb::IMessage<ImmatureBondMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ImmatureBondMessage> _parser = new pb::MessageParser<ImmatureBondMessage>(() => new ImmatureBondMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ImmatureBondMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.ImmatureBondsMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImmatureBondMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImmatureBondMessage(ImmatureBondMessage other) : this() {
          basicBondInformation_ = other.basicBondInformation_ != null ? other.basicBondInformation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ImmatureBondMessage Clone() {
          return new ImmatureBondMessage(this);
        }

        /// <summary>Field number for the "BasicBondInformation" field.</summary>
        public const int BasicBondInformationFieldNumber = 1;
        private global::SubCustodyServer.BasicBondInformationMessage basicBondInformation_;
        /// <summary>
        /// Data is used to describe the basic information for the Bond
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SubCustodyServer.BasicBondInformationMessage BasicBondInformation {
          get { return basicBondInformation_; }
          set {
            basicBondInformation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ImmatureBondMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ImmatureBondMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(BasicBondInformation, other.BasicBondInformation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (basicBondInformation_ != null) hash ^= BasicBondInformation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (basicBondInformation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BasicBondInformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (basicBondInformation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(BasicBondInformation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (basicBondInformation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicBondInformation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ImmatureBondMessage other) {
          if (other == null) {
            return;
          }
          if (other.basicBondInformation_ != null) {
            if (basicBondInformation_ == null) {
              BasicBondInformation = new global::SubCustodyServer.BasicBondInformationMessage();
            }
            BasicBondInformation.MergeFrom(other.BasicBondInformation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (basicBondInformation_ == null) {
                  BasicBondInformation = new global::SubCustodyServer.BasicBondInformationMessage();
                }
                input.ReadMessage(BasicBondInformation);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (basicBondInformation_ == null) {
                  BasicBondInformation = new global::SubCustodyServer.BasicBondInformationMessage();
                }
                input.ReadMessage(BasicBondInformation);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message holding one Mature Bond which is used when used add and Delete TestInstructions and TestInstructionContainers in the TestCase
  /// </summary>
  public sealed partial class MatureBondMessage : pb::IMessage<MatureBondMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatureBondMessage> _parser = new pb::MessageParser<MatureBondMessage>(() => new MatureBondMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatureBondMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiBondingMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureBondMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureBondMessage(MatureBondMessage other) : this() {
      basicBondInformation_ = other.basicBondInformation_ != null ? other.basicBondInformation_.Clone() : null;
      matureBondInformation_ = other.matureBondInformation_ != null ? other.matureBondInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureBondMessage Clone() {
      return new MatureBondMessage(this);
    }

    /// <summary>Field number for the "BasicBondInformation" field.</summary>
    public const int BasicBondInformationFieldNumber = 1;
    private global::SubCustodyServer.BasicBondInformationMessage basicBondInformation_;
    /// <summary>
    /// Data is used to describe the basic information for the Bond
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicBondInformationMessage BasicBondInformation {
      get { return basicBondInformation_; }
      set {
        basicBondInformation_ = value;
      }
    }

    /// <summary>Field number for the "MatureBondInformation" field.</summary>
    public const int MatureBondInformationFieldNumber = 2;
    private global::SubCustodyServer.MatureBondInformationMessage matureBondInformation_;
    /// <summary>
    /// Information about the Mature Bond
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.MatureBondInformationMessage MatureBondInformation {
      get { return matureBondInformation_; }
      set {
        matureBondInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatureBondMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatureBondMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicBondInformation, other.BasicBondInformation)) return false;
      if (!object.Equals(MatureBondInformation, other.MatureBondInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (basicBondInformation_ != null) hash ^= BasicBondInformation.GetHashCode();
      if (matureBondInformation_ != null) hash ^= MatureBondInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (basicBondInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicBondInformation);
      }
      if (matureBondInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MatureBondInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (basicBondInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicBondInformation);
      }
      if (matureBondInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MatureBondInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (basicBondInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicBondInformation);
      }
      if (matureBondInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatureBondInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatureBondMessage other) {
      if (other == null) {
        return;
      }
      if (other.basicBondInformation_ != null) {
        if (basicBondInformation_ == null) {
          BasicBondInformation = new global::SubCustodyServer.BasicBondInformationMessage();
        }
        BasicBondInformation.MergeFrom(other.BasicBondInformation);
      }
      if (other.matureBondInformation_ != null) {
        if (matureBondInformation_ == null) {
          MatureBondInformation = new global::SubCustodyServer.MatureBondInformationMessage();
        }
        MatureBondInformation.MergeFrom(other.MatureBondInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicBondInformation_ == null) {
              BasicBondInformation = new global::SubCustodyServer.BasicBondInformationMessage();
            }
            input.ReadMessage(BasicBondInformation);
            break;
          }
          case 18: {
            if (matureBondInformation_ == null) {
              MatureBondInformation = new global::SubCustodyServer.MatureBondInformationMessage();
            }
            input.ReadMessage(MatureBondInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (basicBondInformation_ == null) {
              BasicBondInformation = new global::SubCustodyServer.BasicBondInformationMessage();
            }
            input.ReadMessage(BasicBondInformation);
            break;
          }
          case 18: {
            if (matureBondInformation_ == null) {
              MatureBondInformation = new global::SubCustodyServer.MatureBondInformationMessage();
            }
            input.ReadMessage(MatureBondInformation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding basic information for one Bond
  /// </summary>
  public sealed partial class BasicBondInformationMessage : pb::IMessage<BasicBondInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BasicBondInformationMessage> _parser = new pb::MessageParser<BasicBondInformationMessage>(() => new BasicBondInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicBondInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiBondingMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicBondInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicBondInformationMessage(BasicBondInformationMessage other) : this() {
      visibleBondAttributes_ = other.visibleBondAttributes_ != null ? other.visibleBondAttributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicBondInformationMessage Clone() {
      return new BasicBondInformationMessage(this);
    }

    /// <summary>Field number for the "VisibleBondAttributes" field.</summary>
    public const int VisibleBondAttributesFieldNumber = 1;
    private global::SubCustodyServer.BasicBondInformationMessage.Types.VisibleBondAttributesMessage visibleBondAttributes_;
    /// <summary>
    /// If 'ShowBondAttributes' then these attributes will be shown to users in attributes area
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicBondInformationMessage.Types.VisibleBondAttributesMessage VisibleBondAttributes {
      get { return visibleBondAttributes_; }
      set {
        visibleBondAttributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicBondInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicBondInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VisibleBondAttributes, other.VisibleBondAttributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (visibleBondAttributes_ != null) hash ^= VisibleBondAttributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (visibleBondAttributes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VisibleBondAttributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (visibleBondAttributes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VisibleBondAttributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (visibleBondAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VisibleBondAttributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicBondInformationMessage other) {
      if (other == null) {
        return;
      }
      if (other.visibleBondAttributes_ != null) {
        if (visibleBondAttributes_ == null) {
          VisibleBondAttributes = new global::SubCustodyServer.BasicBondInformationMessage.Types.VisibleBondAttributesMessage();
        }
        VisibleBondAttributes.MergeFrom(other.VisibleBondAttributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (visibleBondAttributes_ == null) {
              VisibleBondAttributes = new global::SubCustodyServer.BasicBondInformationMessage.Types.VisibleBondAttributesMessage();
            }
            input.ReadMessage(VisibleBondAttributes);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (visibleBondAttributes_ == null) {
              VisibleBondAttributes = new global::SubCustodyServer.BasicBondInformationMessage.Types.VisibleBondAttributesMessage();
            }
            input.ReadMessage(VisibleBondAttributes);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BasicBondInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding the attribute that could be shown to user in the attributes area in the GUI
      /// </summary>
      public sealed partial class VisibleBondAttributesMessage : pb::IMessage<VisibleBondAttributesMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VisibleBondAttributesMessage> _parser = new pb::MessageParser<VisibleBondAttributesMessage>(() => new VisibleBondAttributesMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VisibleBondAttributesMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.BasicBondInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VisibleBondAttributesMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VisibleBondAttributesMessage(VisibleBondAttributesMessage other) : this() {
          bondUuid_ = other.bondUuid_;
          bondName_ = other.bondName_;
          bondDescription_ = other.bondDescription_;
          bondMouseOverText_ = other.bondMouseOverText_;
          deprecated_ = other.deprecated_;
          enabled_ = other.enabled_;
          visible_ = other.visible_;
          bondColor_ = other.bondColor_;
          canBeDeleted_ = other.canBeDeleted_;
          canBeSwappedOut_ = other.canBeSwappedOut_;
          updatedTimeStamp_ = other.updatedTimeStamp_ != null ? other.updatedTimeStamp_.Clone() : null;
          testCaseModelElementType_ = other.testCaseModelElementType_;
          showBondAttributes_ = other.showBondAttributes_;
          tCRuleDeletion_ = other.tCRuleDeletion_;
          tCRuleSwap_ = other.tCRuleSwap_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VisibleBondAttributesMessage Clone() {
          return new VisibleBondAttributesMessage(this);
        }

        /// <summary>Field number for the "BondUuid" field.</summary>
        public const int BondUuidFieldNumber = 1;
        private string bondUuid_ = "";
        /// <summary>
        /// The Bond, UUID
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BondUuid {
          get { return bondUuid_; }
          set {
            bondUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "BondName" field.</summary>
        public const int BondNameFieldNumber = 2;
        private string bondName_ = "";
        /// <summary>
        /// The Bond, Name
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BondName {
          get { return bondName_; }
          set {
            bondName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "BondDescription" field.</summary>
        public const int BondDescriptionFieldNumber = 3;
        private string bondDescription_ = "";
        /// <summary>
        /// The description of the TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BondDescription {
          get { return bondDescription_; }
          set {
            bondDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "BondMouseOverText" field.</summary>
        public const int BondMouseOverTextFieldNumber = 4;
        private string bondMouseOverText_ = "";
        /// <summary>
        /// The mouse over text when hovering over TestInstruction
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BondMouseOverText {
          get { return bondMouseOverText_; }
          set {
            bondMouseOverText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Deprecated" field.</summary>
        public const int DeprecatedFieldNumber = 5;
        private bool deprecated_;
        /// <summary>
        /// Indicates that this TestInstruction shouldn't be used anymore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Deprecated {
          get { return deprecated_; }
          set {
            deprecated_ = value;
          }
        }

        /// <summary>Field number for the "Enabled" field.</summary>
        public const int EnabledFieldNumber = 6;
        private bool enabled_;
        /// <summary>
        /// Bond can be disabled when the user shouldn't use it anymore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        /// <summary>Field number for the "Visible" field.</summary>
        public const int VisibleFieldNumber = 7;
        private bool visible_;
        /// <summary>
        /// Should the Bond be visible in the TestCase or not
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Visible {
          get { return visible_; }
          set {
            visible_ = value;
          }
        }

        /// <summary>Field number for the "BondColor" field.</summary>
        public const int BondColorFieldNumber = 8;
        private string bondColor_ = "";
        /// <summary>
        /// The color used for presenting the Bond, e.g. #FAF437
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BondColor {
          get { return bondColor_; }
          set {
            bondColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CanBeDeleted" field.</summary>
        public const int CanBeDeletedFieldNumber = 9;
        private bool canBeDeleted_;
        /// <summary>
        /// Defines of the Bond can be Deleted from the TestCase structure
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool CanBeDeleted {
          get { return canBeDeleted_; }
          set {
            canBeDeleted_ = value;
          }
        }

        /// <summary>Field number for the "CanBeSwappedOut" field.</summary>
        public const int CanBeSwappedOutFieldNumber = 10;
        private bool canBeSwappedOut_;
        /// <summary>
        /// Defines if the Bond can be swapped out from the TestCase and be replaced by some other element
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool CanBeSwappedOut {
          get { return canBeSwappedOut_; }
          set {
            canBeSwappedOut_ = value;
          }
        }

        /// <summary>Field number for the "UpdatedTimeStamp" field.</summary>
        public const int UpdatedTimeStampFieldNumber = 11;
        private global::Google.Protobuf.WellKnownTypes.Timestamp updatedTimeStamp_;
        /// <summary>
        /// The TimeStamp when the Bond was last updated
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp UpdatedTimeStamp {
          get { return updatedTimeStamp_; }
          set {
            updatedTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "TestCaseModelElementType" field.</summary>
        public const int TestCaseModelElementTypeFieldNumber = 12;
        private global::SubCustodyServer.TestCaseModelElementTypeEnum testCaseModelElementType_ = global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond;
        /// <summary>
        /// The Type of Bond
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SubCustodyServer.TestCaseModelElementTypeEnum TestCaseModelElementType {
          get { return testCaseModelElementType_; }
          set {
            testCaseModelElementType_ = value;
          }
        }

        /// <summary>Field number for the "ShowBondAttributes" field.</summary>
        public const int ShowBondAttributesFieldNumber = 13;
        private bool showBondAttributes_;
        /// <summary>
        /// If this is True then Attributes are shown to the user, mostly for "error-hunting"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool ShowBondAttributes {
          get { return showBondAttributes_; }
          set {
            showBondAttributes_ = value;
          }
        }

        /// <summary>Field number for the "TCRuleDeletion" field.</summary>
        public const int TCRuleDeletionFieldNumber = 14;
        private string tCRuleDeletion_ = "";
        /// <summary>
        /// The Deletion Rule for this Bond
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TCRuleDeletion {
          get { return tCRuleDeletion_; }
          set {
            tCRuleDeletion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TCRuleSwap" field.</summary>
        public const int TCRuleSwapFieldNumber = 15;
        private string tCRuleSwap_ = "";
        /// <summary>
        /// The Swap Rule for this Bond
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TCRuleSwap {
          get { return tCRuleSwap_; }
          set {
            tCRuleSwap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VisibleBondAttributesMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VisibleBondAttributesMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BondUuid != other.BondUuid) return false;
          if (BondName != other.BondName) return false;
          if (BondDescription != other.BondDescription) return false;
          if (BondMouseOverText != other.BondMouseOverText) return false;
          if (Deprecated != other.Deprecated) return false;
          if (Enabled != other.Enabled) return false;
          if (Visible != other.Visible) return false;
          if (BondColor != other.BondColor) return false;
          if (CanBeDeleted != other.CanBeDeleted) return false;
          if (CanBeSwappedOut != other.CanBeSwappedOut) return false;
          if (!object.Equals(UpdatedTimeStamp, other.UpdatedTimeStamp)) return false;
          if (TestCaseModelElementType != other.TestCaseModelElementType) return false;
          if (ShowBondAttributes != other.ShowBondAttributes) return false;
          if (TCRuleDeletion != other.TCRuleDeletion) return false;
          if (TCRuleSwap != other.TCRuleSwap) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (BondUuid.Length != 0) hash ^= BondUuid.GetHashCode();
          if (BondName.Length != 0) hash ^= BondName.GetHashCode();
          if (BondDescription.Length != 0) hash ^= BondDescription.GetHashCode();
          if (BondMouseOverText.Length != 0) hash ^= BondMouseOverText.GetHashCode();
          if (Deprecated != false) hash ^= Deprecated.GetHashCode();
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (Visible != false) hash ^= Visible.GetHashCode();
          if (BondColor.Length != 0) hash ^= BondColor.GetHashCode();
          if (CanBeDeleted != false) hash ^= CanBeDeleted.GetHashCode();
          if (CanBeSwappedOut != false) hash ^= CanBeSwappedOut.GetHashCode();
          if (updatedTimeStamp_ != null) hash ^= UpdatedTimeStamp.GetHashCode();
          if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) hash ^= TestCaseModelElementType.GetHashCode();
          if (ShowBondAttributes != false) hash ^= ShowBondAttributes.GetHashCode();
          if (TCRuleDeletion.Length != 0) hash ^= TCRuleDeletion.GetHashCode();
          if (TCRuleSwap.Length != 0) hash ^= TCRuleSwap.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (BondUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(BondUuid);
          }
          if (BondName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(BondName);
          }
          if (BondDescription.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(BondDescription);
          }
          if (BondMouseOverText.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(BondMouseOverText);
          }
          if (Deprecated != false) {
            output.WriteRawTag(40);
            output.WriteBool(Deprecated);
          }
          if (Enabled != false) {
            output.WriteRawTag(48);
            output.WriteBool(Enabled);
          }
          if (Visible != false) {
            output.WriteRawTag(56);
            output.WriteBool(Visible);
          }
          if (BondColor.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(BondColor);
          }
          if (CanBeDeleted != false) {
            output.WriteRawTag(72);
            output.WriteBool(CanBeDeleted);
          }
          if (CanBeSwappedOut != false) {
            output.WriteRawTag(80);
            output.WriteBool(CanBeSwappedOut);
          }
          if (updatedTimeStamp_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(UpdatedTimeStamp);
          }
          if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
            output.WriteRawTag(96);
            output.WriteEnum((int) TestCaseModelElementType);
          }
          if (ShowBondAttributes != false) {
            output.WriteRawTag(104);
            output.WriteBool(ShowBondAttributes);
          }
          if (TCRuleDeletion.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(TCRuleSwap);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (BondUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(BondUuid);
          }
          if (BondName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(BondName);
          }
          if (BondDescription.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(BondDescription);
          }
          if (BondMouseOverText.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(BondMouseOverText);
          }
          if (Deprecated != false) {
            output.WriteRawTag(40);
            output.WriteBool(Deprecated);
          }
          if (Enabled != false) {
            output.WriteRawTag(48);
            output.WriteBool(Enabled);
          }
          if (Visible != false) {
            output.WriteRawTag(56);
            output.WriteBool(Visible);
          }
          if (BondColor.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(BondColor);
          }
          if (CanBeDeleted != false) {
            output.WriteRawTag(72);
            output.WriteBool(CanBeDeleted);
          }
          if (CanBeSwappedOut != false) {
            output.WriteRawTag(80);
            output.WriteBool(CanBeSwappedOut);
          }
          if (updatedTimeStamp_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(UpdatedTimeStamp);
          }
          if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
            output.WriteRawTag(96);
            output.WriteEnum((int) TestCaseModelElementType);
          }
          if (ShowBondAttributes != false) {
            output.WriteRawTag(104);
            output.WriteBool(ShowBondAttributes);
          }
          if (TCRuleDeletion.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(TCRuleSwap);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (BondUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BondUuid);
          }
          if (BondName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BondName);
          }
          if (BondDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BondDescription);
          }
          if (BondMouseOverText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BondMouseOverText);
          }
          if (Deprecated != false) {
            size += 1 + 1;
          }
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (Visible != false) {
            size += 1 + 1;
          }
          if (BondColor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BondColor);
          }
          if (CanBeDeleted != false) {
            size += 1 + 1;
          }
          if (CanBeSwappedOut != false) {
            size += 1 + 1;
          }
          if (updatedTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedTimeStamp);
          }
          if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestCaseModelElementType);
          }
          if (ShowBondAttributes != false) {
            size += 1 + 1;
          }
          if (TCRuleDeletion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TCRuleSwap);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VisibleBondAttributesMessage other) {
          if (other == null) {
            return;
          }
          if (other.BondUuid.Length != 0) {
            BondUuid = other.BondUuid;
          }
          if (other.BondName.Length != 0) {
            BondName = other.BondName;
          }
          if (other.BondDescription.Length != 0) {
            BondDescription = other.BondDescription;
          }
          if (other.BondMouseOverText.Length != 0) {
            BondMouseOverText = other.BondMouseOverText;
          }
          if (other.Deprecated != false) {
            Deprecated = other.Deprecated;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          if (other.Visible != false) {
            Visible = other.Visible;
          }
          if (other.BondColor.Length != 0) {
            BondColor = other.BondColor;
          }
          if (other.CanBeDeleted != false) {
            CanBeDeleted = other.CanBeDeleted;
          }
          if (other.CanBeSwappedOut != false) {
            CanBeSwappedOut = other.CanBeSwappedOut;
          }
          if (other.updatedTimeStamp_ != null) {
            if (updatedTimeStamp_ == null) {
              UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            UpdatedTimeStamp.MergeFrom(other.UpdatedTimeStamp);
          }
          if (other.TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
            TestCaseModelElementType = other.TestCaseModelElementType;
          }
          if (other.ShowBondAttributes != false) {
            ShowBondAttributes = other.ShowBondAttributes;
          }
          if (other.TCRuleDeletion.Length != 0) {
            TCRuleDeletion = other.TCRuleDeletion;
          }
          if (other.TCRuleSwap.Length != 0) {
            TCRuleSwap = other.TCRuleSwap;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                BondUuid = input.ReadString();
                break;
              }
              case 18: {
                BondName = input.ReadString();
                break;
              }
              case 26: {
                BondDescription = input.ReadString();
                break;
              }
              case 34: {
                BondMouseOverText = input.ReadString();
                break;
              }
              case 40: {
                Deprecated = input.ReadBool();
                break;
              }
              case 48: {
                Enabled = input.ReadBool();
                break;
              }
              case 56: {
                Visible = input.ReadBool();
                break;
              }
              case 66: {
                BondColor = input.ReadString();
                break;
              }
              case 72: {
                CanBeDeleted = input.ReadBool();
                break;
              }
              case 80: {
                CanBeSwappedOut = input.ReadBool();
                break;
              }
              case 90: {
                if (updatedTimeStamp_ == null) {
                  UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdatedTimeStamp);
                break;
              }
              case 96: {
                TestCaseModelElementType = (global::SubCustodyServer.TestCaseModelElementTypeEnum) input.ReadEnum();
                break;
              }
              case 104: {
                ShowBondAttributes = input.ReadBool();
                break;
              }
              case 114: {
                TCRuleDeletion = input.ReadString();
                break;
              }
              case 122: {
                TCRuleSwap = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                BondUuid = input.ReadString();
                break;
              }
              case 18: {
                BondName = input.ReadString();
                break;
              }
              case 26: {
                BondDescription = input.ReadString();
                break;
              }
              case 34: {
                BondMouseOverText = input.ReadString();
                break;
              }
              case 40: {
                Deprecated = input.ReadBool();
                break;
              }
              case 48: {
                Enabled = input.ReadBool();
                break;
              }
              case 56: {
                Visible = input.ReadBool();
                break;
              }
              case 66: {
                BondColor = input.ReadString();
                break;
              }
              case 72: {
                CanBeDeleted = input.ReadBool();
                break;
              }
              case 80: {
                CanBeSwappedOut = input.ReadBool();
                break;
              }
              case 90: {
                if (updatedTimeStamp_ == null) {
                  UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdatedTimeStamp);
                break;
              }
              case 96: {
                TestCaseModelElementType = (global::SubCustodyServer.TestCaseModelElementTypeEnum) input.ReadEnum();
                break;
              }
              case 104: {
                ShowBondAttributes = input.ReadBool();
                break;
              }
              case 114: {
                TCRuleDeletion = input.ReadString();
                break;
              }
              case 122: {
                TCRuleSwap = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  ///  Message holding all data that is set for the Mature Bond
  /// </summary>
  public sealed partial class MatureBondInformationMessage : pb::IMessage<MatureBondInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatureBondInformationMessage> _parser = new pb::MessageParser<MatureBondInformationMessage>(() => new MatureBondInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatureBondInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiBondingMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureBondInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureBondInformationMessage(MatureBondInformationMessage other) : this() {
      matureBasicTestInstructionInformation_ = other.matureBasicTestInstructionInformation_ != null ? other.matureBasicTestInstructionInformation_.Clone() : null;
      createdAndUpdatedInformation_ = other.createdAndUpdatedInformation_ != null ? other.createdAndUpdatedInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureBondInformationMessage Clone() {
      return new MatureBondInformationMessage(this);
    }

    /// <summary>Field number for the "MatureBasicTestInstructionInformation" field.</summary>
    public const int MatureBasicTestInstructionInformationFieldNumber = 1;
    private global::SubCustodyServer.MatureBondInformationMessage.Types.MatureBasicBondInformationMessage matureBasicTestInstructionInformation_;
    /// <summary>
    /// The Basic information for the Matures Bond
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.MatureBondInformationMessage.Types.MatureBasicBondInformationMessage MatureBasicTestInstructionInformation {
      get { return matureBasicTestInstructionInformation_; }
      set {
        matureBasicTestInstructionInformation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedAndUpdatedInformation" field.</summary>
    public const int CreatedAndUpdatedInformationFieldNumber = 2;
    private global::SubCustodyServer.MatureBondInformationMessage.Types.CreatedAndUpdatedInformationMessage createdAndUpdatedInformation_;
    /// <summary>
    /// Information regarding who did what and when
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.MatureBondInformationMessage.Types.CreatedAndUpdatedInformationMessage CreatedAndUpdatedInformation {
      get { return createdAndUpdatedInformation_; }
      set {
        createdAndUpdatedInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatureBondInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatureBondInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MatureBasicTestInstructionInformation, other.MatureBasicTestInstructionInformation)) return false;
      if (!object.Equals(CreatedAndUpdatedInformation, other.CreatedAndUpdatedInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (matureBasicTestInstructionInformation_ != null) hash ^= MatureBasicTestInstructionInformation.GetHashCode();
      if (createdAndUpdatedInformation_ != null) hash ^= CreatedAndUpdatedInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (matureBasicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (matureBasicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (matureBasicTestInstructionInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatureBondInformationMessage other) {
      if (other == null) {
        return;
      }
      if (other.matureBasicTestInstructionInformation_ != null) {
        if (matureBasicTestInstructionInformation_ == null) {
          MatureBasicTestInstructionInformation = new global::SubCustodyServer.MatureBondInformationMessage.Types.MatureBasicBondInformationMessage();
        }
        MatureBasicTestInstructionInformation.MergeFrom(other.MatureBasicTestInstructionInformation);
      }
      if (other.createdAndUpdatedInformation_ != null) {
        if (createdAndUpdatedInformation_ == null) {
          CreatedAndUpdatedInformation = new global::SubCustodyServer.MatureBondInformationMessage.Types.CreatedAndUpdatedInformationMessage();
        }
        CreatedAndUpdatedInformation.MergeFrom(other.CreatedAndUpdatedInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (matureBasicTestInstructionInformation_ == null) {
              MatureBasicTestInstructionInformation = new global::SubCustodyServer.MatureBondInformationMessage.Types.MatureBasicBondInformationMessage();
            }
            input.ReadMessage(MatureBasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.MatureBondInformationMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (matureBasicTestInstructionInformation_ == null) {
              MatureBasicTestInstructionInformation = new global::SubCustodyServer.MatureBondInformationMessage.Types.MatureBasicBondInformationMessage();
            }
            input.ReadMessage(MatureBasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.MatureBondInformationMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MatureBondInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding the mature basic information about the Bond
      /// </summary>
      public sealed partial class MatureBasicBondInformationMessage : pb::IMessage<MatureBasicBondInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MatureBasicBondInformationMessage> _parser = new pb::MessageParser<MatureBasicBondInformationMessage>(() => new MatureBasicBondInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MatureBasicBondInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.MatureBondInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicBondInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicBondInformationMessage(MatureBasicBondInformationMessage other) : this() {
          bondMatureUuid_ = other.bondMatureUuid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicBondInformationMessage Clone() {
          return new MatureBasicBondInformationMessage(this);
        }

        /// <summary>Field number for the "BondMatureUuid" field.</summary>
        public const int BondMatureUuidFieldNumber = 1;
        private string bondMatureUuid_ = "";
        /// <summary>
        /// The Mature UUID that the Bond gets when it is added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BondMatureUuid {
          get { return bondMatureUuid_; }
          set {
            bondMatureUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MatureBasicBondInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MatureBasicBondInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (BondMatureUuid != other.BondMatureUuid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (BondMatureUuid.Length != 0) hash ^= BondMatureUuid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (BondMatureUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(BondMatureUuid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (BondMatureUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(BondMatureUuid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (BondMatureUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BondMatureUuid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MatureBasicBondInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.BondMatureUuid.Length != 0) {
            BondMatureUuid = other.BondMatureUuid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                BondMatureUuid = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                BondMatureUuid = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding information about changes to the Bond, who and when
      /// </summary>
      public sealed partial class CreatedAndUpdatedInformationMessage : pb::IMessage<CreatedAndUpdatedInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreatedAndUpdatedInformationMessage> _parser = new pb::MessageParser<CreatedAndUpdatedInformationMessage>(() => new CreatedAndUpdatedInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreatedAndUpdatedInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.MatureBondInformationMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage(CreatedAndUpdatedInformationMessage other) : this() {
          addedToTestCaseTimeStamp_ = other.addedToTestCaseTimeStamp_ != null ? other.addedToTestCaseTimeStamp_.Clone() : null;
          addedToTestCaseByUserId_ = other.addedToTestCaseByUserId_;
          lastUpdatedInTestCaseTimeStamp_ = other.lastUpdatedInTestCaseTimeStamp_ != null ? other.lastUpdatedInTestCaseTimeStamp_.Clone() : null;
          lastUpdatedInTestCaseByUserId_ = other.lastUpdatedInTestCaseByUserId_;
          deletedFromTestCaseTimeStamp_ = other.deletedFromTestCaseTimeStamp_ != null ? other.deletedFromTestCaseTimeStamp_.Clone() : null;
          deletedFromTestCaseByUserId_ = other.deletedFromTestCaseByUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage Clone() {
          return new CreatedAndUpdatedInformationMessage(this);
        }

        /// <summary>Field number for the "AddedToTestCaseTimeStamp" field.</summary>
        public const int AddedToTestCaseTimeStampFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp addedToTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstructionContainer was first added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp AddedToTestCaseTimeStamp {
          get { return addedToTestCaseTimeStamp_; }
          set {
            addedToTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "AddedToTestCaseByUserId" field.</summary>
        public const int AddedToTestCaseByUserIdFieldNumber = 2;
        private string addedToTestCaseByUserId_ = "";
        /// <summary>
        /// Which user added the Bond to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AddedToTestCaseByUserId {
          get { return addedToTestCaseByUserId_; }
          set {
            addedToTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseTimeStamp" field.</summary>
        public const int LastUpdatedInTestCaseTimeStampFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdatedInTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the Bond was updated in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdatedInTestCaseTimeStamp {
          get { return lastUpdatedInTestCaseTimeStamp_; }
          set {
            lastUpdatedInTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseByUserId" field.</summary>
        public const int LastUpdatedInTestCaseByUserIdFieldNumber = 4;
        private string lastUpdatedInTestCaseByUserId_ = "";
        /// <summary>
        /// Which user was the last to update the Bond in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastUpdatedInTestCaseByUserId {
          get { return lastUpdatedInTestCaseByUserId_; }
          set {
            lastUpdatedInTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseTimeStamp" field.</summary>
        public const int DeletedFromTestCaseTimeStampFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp deletedFromTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the Bond was was deleted from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp DeletedFromTestCaseTimeStamp {
          get { return deletedFromTestCaseTimeStamp_; }
          set {
            deletedFromTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseByUserId" field.</summary>
        public const int DeletedFromTestCaseByUserIdFieldNumber = 6;
        private string deletedFromTestCaseByUserId_ = "";
        /// <summary>
        /// Which user deleted the Bond from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeletedFromTestCaseByUserId {
          get { return deletedFromTestCaseByUserId_; }
          set {
            deletedFromTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreatedAndUpdatedInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreatedAndUpdatedInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AddedToTestCaseTimeStamp, other.AddedToTestCaseTimeStamp)) return false;
          if (AddedToTestCaseByUserId != other.AddedToTestCaseByUserId) return false;
          if (!object.Equals(LastUpdatedInTestCaseTimeStamp, other.LastUpdatedInTestCaseTimeStamp)) return false;
          if (LastUpdatedInTestCaseByUserId != other.LastUpdatedInTestCaseByUserId) return false;
          if (!object.Equals(DeletedFromTestCaseTimeStamp, other.DeletedFromTestCaseTimeStamp)) return false;
          if (DeletedFromTestCaseByUserId != other.DeletedFromTestCaseByUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (addedToTestCaseTimeStamp_ != null) hash ^= AddedToTestCaseTimeStamp.GetHashCode();
          if (AddedToTestCaseByUserId.Length != 0) hash ^= AddedToTestCaseByUserId.GetHashCode();
          if (lastUpdatedInTestCaseTimeStamp_ != null) hash ^= LastUpdatedInTestCaseTimeStamp.GetHashCode();
          if (LastUpdatedInTestCaseByUserId.Length != 0) hash ^= LastUpdatedInTestCaseByUserId.GetHashCode();
          if (deletedFromTestCaseTimeStamp_ != null) hash ^= DeletedFromTestCaseTimeStamp.GetHashCode();
          if (DeletedFromTestCaseByUserId.Length != 0) hash ^= DeletedFromTestCaseByUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (addedToTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreatedAndUpdatedInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.addedToTestCaseTimeStamp_ != null) {
            if (addedToTestCaseTimeStamp_ == null) {
              AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            AddedToTestCaseTimeStamp.MergeFrom(other.AddedToTestCaseTimeStamp);
          }
          if (other.AddedToTestCaseByUserId.Length != 0) {
            AddedToTestCaseByUserId = other.AddedToTestCaseByUserId;
          }
          if (other.lastUpdatedInTestCaseTimeStamp_ != null) {
            if (lastUpdatedInTestCaseTimeStamp_ == null) {
              LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastUpdatedInTestCaseTimeStamp.MergeFrom(other.LastUpdatedInTestCaseTimeStamp);
          }
          if (other.LastUpdatedInTestCaseByUserId.Length != 0) {
            LastUpdatedInTestCaseByUserId = other.LastUpdatedInTestCaseByUserId;
          }
          if (other.deletedFromTestCaseTimeStamp_ != null) {
            if (deletedFromTestCaseTimeStamp_ == null) {
              DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            DeletedFromTestCaseTimeStamp.MergeFrom(other.DeletedFromTestCaseTimeStamp);
          }
          if (other.DeletedFromTestCaseByUserId.Length != 0) {
            DeletedFromTestCaseByUserId = other.DeletedFromTestCaseByUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
