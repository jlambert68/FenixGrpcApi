// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestCaseMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SubCustodyServer {

  /// <summary>Holder for reflection information generated from FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestCaseMessages.proto</summary>
  public static partial class FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestCaseMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CnVGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpX1Rlc3RDYXNlTWVzc2FnZXMucHJvdG8SIWZlbml4VGVzdENhc2VC",
            "dWlsZGVyU2VydmVyR3JwY0FwaRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
            "cC5wcm90bxp8RmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXIvZmVuaXhUZXN0",
            "Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpL2Zlbml4VGVzdENhc2VCdWlsZGVy",
            "U2VydmVyR3JwY0FwaV9HZW5lcmFsTWVzc2FnZXNBbmRFbnVtcy5wcm90bxp6",
            "RmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXIvZmVuaXhUZXN0Q2FzZUJ1aWxk",
            "ZXJTZXJ2ZXJHcnBjQXBpL2Zlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3Jw",
            "Y0FwaV9UZXN0Q2FzZU1vZGVsTWVzc2FnZXMucHJvdG8iuwEKGUdldFRlc3RD",
            "YXNlUmVxdWVzdE1lc3NhZ2USDgoGVXNlcklkGAEgASgJEngKHFByb3RvRmls",
            "ZVZlcnNpb25Vc2VkQnlDbGllbnQYAiABKA4yUi5mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGkuQ3VycmVudEZlbml4VGVzdENhc2VCdWlsZGVy",
            "UHJvdG9GaWxlVmVyc2lvbkVudW0SFAoMVGVzdENhc2VVdWlkGAMgASgJIqcB",
            "ChtMaXN0VGVzdENhc2VzUmVxdWVzdE1lc3NhZ2USDgoGVXNlcklkGAEgASgJ",
            "EngKHFByb3RvRmlsZVZlcnNpb25Vc2VkQnlDbGllbnQYAiABKA4yUi5mZW5p",
            "eFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuQ3VycmVudEZlbml4VGVz",
            "dENhc2VCdWlsZGVyUHJvdG9GaWxlVmVyc2lvbkVudW0ihAEKHExpc3RUZXN0",
            "Q2FzZXNSZXNwb25zZU1lc3NhZ2USZAoYQmFzaWNUZXN0Q2FzZUluZm9ybWF0",
            "aW9uGAEgAygLMkIuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBp",
            "LkJhc2ljVGVzdENhc2VJbmZvcm1hdGlvbk1lc3NhZ2Ui2gEKJkdldFRlc3RD",
            "YXNlTWV0YURhdGFJdGVtc1JlcXVlc3RNZXNzYWdlEg4KBlVzZXJJZBgBIAEo",
            "CRJ4ChxQcm90b0ZpbGVWZXJzaW9uVXNlZEJ5Q2xpZW50GAIgASgOMlIuZmVu",
            "aXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLkN1cnJlbnRGZW5peFRl",
            "c3RDYXNlQnVpbGRlclByb3RvRmlsZVZlcnNpb25FbnVtEhIKCkRvbWFpblV1",
            "aWQYAyABKAkSEgoKRG9tYWluTmFtZRgEIAEoCSJ/CidHZXRUZXN0Q2FzZU1l",
            "dGFEYXRhSXRlbXNSZXNwb25zZU1lc3NhZ2USVAoQVGVzdENhc2VNZXRhRGF0",
            "YRgBIAEoCzI6LmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5U",
            "ZXN0Q2FzZU1ldGFEYXRhTWVzc2FnZSLEBgoPVGVzdENhc2VNZXNzYWdlEmQK",
            "GEJhc2ljVGVzdENhc2VJbmZvcm1hdGlvbhgBIAEoCzJCLmZlbml4VGVzdENh",
            "c2VCdWlsZGVyU2VydmVyR3JwY0FwaS5CYXNpY1Rlc3RDYXNlSW5mb3JtYXRp",
            "b25NZXNzYWdlEnwKHENyZWF0ZWRBbmRVcGRhdGVkSW5mb3JtYXRpb24YAiAB",
            "KAsyVi5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuVGVzdENh",
            "c2VNZXNzYWdlLkNyZWF0ZWRBbmRVcGRhdGVkSW5mb3JtYXRpb25NZXNzYWdl",
            "Ek4KDVRlc3RDYXNlTW9kZWwYAyABKAsyNy5mZW5peFRlc3RDYXNlQnVpbGRl",
            "clNlcnZlckdycGNBcGkuVGVzdENhc2VNb2RlbE1lc3NhZ2USVAoQVGVzdENh",
            "c2VNZXRhRGF0YRgEIAEoCzI6LmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVy",
            "R3JwY0FwaS5UZXN0Q2FzZU1ldGFEYXRhTWVzc2FnZRJOCg1UZXN0Q2FzZUZp",
            "bGVzGAUgASgLMjcuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBp",
            "LlRlc3RDYXNlRmlsZXNNZXNzYWdlGtYCCiNDcmVhdGVkQW5kVXBkYXRlZElu",
            "Zm9ybWF0aW9uTWVzc2FnZRI8ChhBZGRlZFRvVGVzdENhc2VUaW1lU3RhbXAY",
            "ASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEh8KF0FkZGVkVG9U",
            "ZXN0Q2FzZUJ5VXNlcklkGAIgASgJEkIKHkxhc3RVcGRhdGVkSW5UZXN0Q2Fz",
            "ZVRpbWVTdGFtcBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "JQodTGFzdFVwZGF0ZWRJblRlc3RDYXNlQnlVc2VySWQYBCABKAkSQAocRGVs",
            "ZXRlZEZyb21UZXN0Q2FzZVRpbWVTdGFtcBgFIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASIwobRGVsZXRlZEZyb21UZXN0Q2FzZUJ5VXNlcklk",
            "GAYgASgJIv4DCh9CYXNpY1Rlc3RDYXNlSW5mb3JtYXRpb25NZXNzYWdlEoUB",
            "ChZOb25FZGl0YWJsZUluZm9ybWF0aW9uGAEgASgLMmUuZmVuaXhUZXN0Q2Fz",
            "ZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLkJhc2ljVGVzdENhc2VJbmZvcm1hdGlv",
            "bk1lc3NhZ2UuTm9uRWRpdGFibGVCYXNpY0luZm9ybWF0aW9uTWVzc2FnZRJ/",
            "ChNFZGl0YWJsZUluZm9ybWF0aW9uGAIgASgLMmIuZmVuaXhUZXN0Q2FzZUJ1",
            "aWxkZXJTZXJ2ZXJHcnBjQXBpLkJhc2ljVGVzdENhc2VJbmZvcm1hdGlvbk1l",
            "c3NhZ2UuRWRpdGFibGVCYXNpY0luZm9ybWF0aW9uTWVzc2FnZRqRAQoiTm9u",
            "RWRpdGFibGVCYXNpY0luZm9ybWF0aW9uTWVzc2FnZRIUCgxUZXN0Q2FzZVV1",
            "aWQYASABKAkSFAoMVGVzdENhc2VOYW1lGAIgASgJEhIKCkRvbWFpblV1aWQY",
            "AyABKAkSEgoKRG9tYWluTmFtZRgEIAEoCRIXCg9UZXN0Q2FzZVZlcnNpb24Y",
            "BiABKA0aPgofRWRpdGFibGVCYXNpY0luZm9ybWF0aW9uTWVzc2FnZRIbChNU",
            "ZXN0Q2FzZURlc2NyaXB0aW9uGAEgASgJIuYEChdUZXN0Q2FzZU1ldGFEYXRh",
            "TWVzc2FnZRJlCg1NZXRhRGF0YUl0ZW1zGAEgAygLMk4uZmVuaXhUZXN0Q2Fz",
            "ZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLlRlc3RDYXNlTWV0YURhdGFNZXNzYWdl",
            "Lk1ldGFEYXRhSXRlbU1lc3NhZ2Ua4wMKE01ldGFEYXRhSXRlbU1lc3NhZ2US",
            "FAoMTWV0YURhdGFVdWlkGAEgASgJEhQKDE1ldGFEYXRhTmFtZRgCIAEoCRIZ",
            "ChFNZXRhRGF0YUdyb3VwVXVpZBgDIAEoCRIZChFNZXRhRGF0YUdyb3VwTmFt",
            "ZRgEIAEoCRKCAQoWQXZhaWxhYmxlTWV0YURhdGFJdGVtcxgFIAMoCzJiLmZl",
            "bml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5UZXN0Q2FzZU1ldGFE",
            "YXRhTWVzc2FnZS5NZXRhRGF0YUl0ZW1NZXNzYWdlLk1ldGFEYXRhSXRlbU1l",
            "c3NhZ2USfgoSQ2hvc2VuTWV0YURhdGFJdGVtGAYgASgLMmIuZmVuaXhUZXN0",
            "Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLlRlc3RDYXNlTWV0YURhdGFNZXNz",
            "YWdlLk1ldGFEYXRhSXRlbU1lc3NhZ2UuTWV0YURhdGFJdGVtTWVzc2FnZRpl",
            "ChNNZXRhRGF0YUl0ZW1NZXNzYWdlEhgKEE1ldGFEYXRhSXRlbVV1aWQYASAB",
            "KAkSGQoRTWV0YURhdGFJdGVtVmFsdWUYAiABKAkSGQoRTWV0YURhdGFJdGVt",
            "SW5kZXgYAyABKA0ivQUKFFRlc3RDYXNlRmlsZXNNZXNzYWdlEmIKDVRlc3RD",
            "YXNlRmlsZXMYASADKAsySy5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdy",
            "cGNBcGkuVGVzdENhc2VGaWxlc01lc3NhZ2UuVGVzdENhc2VGaWxlTWVzc2Fn",
            "ZRKBAQocQ3JlYXRlZEFuZFVwZGF0ZWRJbmZvcm1hdGlvbhgCIAEoCzJbLmZl",
            "bml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5UZXN0Q2FzZUZpbGVz",
            "TWVzc2FnZS5DcmVhdGVkQW5kVXBkYXRlZEluZm9ybWF0aW9uTWVzc2FnZRpk",
            "ChNUZXN0Q2FzZUZpbGVNZXNzYWdlEhkKEUZpbGVSZWZlcmVuY2VVdWlkGAEg",
            "ASgJEhkKEUZpbGVSZWZlcmVuY2VOYW1lGAIgASgJEhcKD0ZpbGVBc0J5dGVB",
            "cnJheRgDIAMoDBrWAgojQ3JlYXRlZEFuZFVwZGF0ZWRJbmZvcm1hdGlvbk1l",
            "c3NhZ2USPAoYQWRkZWRUb1Rlc3RDYXNlVGltZVN0YW1wGAEgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIfChdBZGRlZFRvVGVzdENhc2VCeVVz",
            "ZXJJZBgCIAEoCRJCCh5MYXN0VXBkYXRlZEluVGVzdENhc2VUaW1lU3RhbXAY",
            "AyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiUKHUxhc3RVcGRh",
            "dGVkSW5UZXN0Q2FzZUJ5VXNlcklkGAQgASgJEkAKHERlbGV0ZWRGcm9tVGVz",
            "dENhc2VUaW1lU3RhbXAYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEiMKG0RlbGV0ZWRGcm9tVGVzdENhc2VCeVVzZXJJZBgGIAEoCUIiWg0u",
            "L2dvX2dycGNfYXBpqgIQU3ViQ3VzdG9keVNlcnZlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiGeneralMessagesAndEnumsReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.GetTestCaseRequestMessage), global::SubCustodyServer.GetTestCaseRequestMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient", "TestCaseUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ListTestCasesRequestMessage), global::SubCustodyServer.ListTestCasesRequestMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ListTestCasesResponseMessage), global::SubCustodyServer.ListTestCasesResponseMessage.Parser, new[]{ "BasicTestCaseInformation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.GetTestCaseMetaDataItemsRequestMessage), global::SubCustodyServer.GetTestCaseMetaDataItemsRequestMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient", "DomainUuid", "DomainName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.GetTestCaseMetaDataItemsResponseMessage), global::SubCustodyServer.GetTestCaseMetaDataItemsResponseMessage.Parser, new[]{ "TestCaseMetaData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseMessage), global::SubCustodyServer.TestCaseMessage.Parser, new[]{ "BasicTestCaseInformation", "CreatedAndUpdatedInformation", "TestCaseModel", "TestCaseMetaData", "TestCaseFiles" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseMessage.Types.CreatedAndUpdatedInformationMessage), global::SubCustodyServer.TestCaseMessage.Types.CreatedAndUpdatedInformationMessage.Parser, new[]{ "AddedToTestCaseTimeStamp", "AddedToTestCaseByUserId", "LastUpdatedInTestCaseTimeStamp", "LastUpdatedInTestCaseByUserId", "DeletedFromTestCaseTimeStamp", "DeletedFromTestCaseByUserId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestCaseInformationMessage), global::SubCustodyServer.BasicTestCaseInformationMessage.Parser, new[]{ "NonEditableInformation", "EditableInformation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestCaseInformationMessage.Types.NonEditableBasicInformationMessage), global::SubCustodyServer.BasicTestCaseInformationMessage.Types.NonEditableBasicInformationMessage.Parser, new[]{ "TestCaseUuid", "TestCaseName", "DomainUuid", "DomainName", "TestCaseVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestCaseInformationMessage.Types.EditableBasicInformationMessage), global::SubCustodyServer.BasicTestCaseInformationMessage.Types.EditableBasicInformationMessage.Parser, new[]{ "TestCaseDescription" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseMetaDataMessage), global::SubCustodyServer.TestCaseMetaDataMessage.Parser, new[]{ "MetaDataItems" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage), global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Parser, new[]{ "MetaDataUuid", "MetaDataName", "MetaDataGroupUuid", "MetaDataGroupName", "AvailableMetaDataItems", "ChosenMetaDataItem" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage), global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage.Parser, new[]{ "MetaDataItemUuid", "MetaDataItemValue", "MetaDataItemIndex" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseFilesMessage), global::SubCustodyServer.TestCaseFilesMessage.Parser, new[]{ "TestCaseFiles", "CreatedAndUpdatedInformation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseFilesMessage.Types.TestCaseFileMessage), global::SubCustodyServer.TestCaseFilesMessage.Types.TestCaseFileMessage.Parser, new[]{ "FileReferenceUuid", "FileReferenceName", "FileAsByteArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseFilesMessage.Types.CreatedAndUpdatedInformationMessage), global::SubCustodyServer.TestCaseFilesMessage.Types.CreatedAndUpdatedInformationMessage.Parser, new[]{ "AddedToTestCaseTimeStamp", "AddedToTestCaseByUserId", "LastUpdatedInTestCaseTimeStamp", "LastUpdatedInTestCaseByUserId", "DeletedFromTestCaseTimeStamp", "DeletedFromTestCaseByUserId" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message holding information about who is the user and which TestCase that is requested
  /// </summary>
  public sealed partial class GetTestCaseRequestMessage : pb::IMessage<GetTestCaseRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTestCaseRequestMessage> _parser = new pb::MessageParser<GetTestCaseRequestMessage>(() => new GetTestCaseRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTestCaseRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseRequestMessage(GetTestCaseRequestMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      testCaseUuid_ = other.testCaseUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseRequestMessage Clone() {
      return new GetTestCaseRequestMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseUuid" field.</summary>
    public const int TestCaseUuidFieldNumber = 3;
    private string testCaseUuid_ = "";
    /// <summary>
    /// The TestCase, UUID, that is requested from DB-Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestCaseUuid {
      get { return testCaseUuid_; }
      set {
        testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTestCaseRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTestCaseRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      if (TestCaseUuid != other.TestCaseUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTestCaseRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      if (other.TestCaseUuid.Length != 0) {
        TestCaseUuid = other.TestCaseUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding information about who is the user and which TestCase that is requested
  /// </summary>
  public sealed partial class ListTestCasesRequestMessage : pb::IMessage<ListTestCasesRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListTestCasesRequestMessage> _parser = new pb::MessageParser<ListTestCasesRequestMessage>(() => new ListTestCasesRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTestCasesRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTestCasesRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTestCasesRequestMessage(ListTestCasesRequestMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTestCasesRequestMessage Clone() {
      return new ListTestCasesRequestMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTestCasesRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTestCasesRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTestCasesRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message a list of TestCase
  /// </summary>
  public sealed partial class ListTestCasesResponseMessage : pb::IMessage<ListTestCasesResponseMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListTestCasesResponseMessage> _parser = new pb::MessageParser<ListTestCasesResponseMessage>(() => new ListTestCasesResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTestCasesResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTestCasesResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTestCasesResponseMessage(ListTestCasesResponseMessage other) : this() {
      basicTestCaseInformation_ = other.basicTestCaseInformation_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTestCasesResponseMessage Clone() {
      return new ListTestCasesResponseMessage(this);
    }

    /// <summary>Field number for the "BasicTestCaseInformation" field.</summary>
    public const int BasicTestCaseInformationFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SubCustodyServer.BasicTestCaseInformationMessage> _repeated_basicTestCaseInformation_codec
        = pb::FieldCodec.ForMessage(10, global::SubCustodyServer.BasicTestCaseInformationMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.BasicTestCaseInformationMessage> basicTestCaseInformation_ = new pbc::RepeatedField<global::SubCustodyServer.BasicTestCaseInformationMessage>();
    /// <summary>
    /// List of TestCases with their Basic information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.BasicTestCaseInformationMessage> BasicTestCaseInformation {
      get { return basicTestCaseInformation_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTestCasesResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTestCasesResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!basicTestCaseInformation_.Equals(other.basicTestCaseInformation_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= basicTestCaseInformation_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      basicTestCaseInformation_.WriteTo(output, _repeated_basicTestCaseInformation_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      basicTestCaseInformation_.WriteTo(ref output, _repeated_basicTestCaseInformation_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += basicTestCaseInformation_.CalculateSize(_repeated_basicTestCaseInformation_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTestCasesResponseMessage other) {
      if (other == null) {
        return;
      }
      basicTestCaseInformation_.Add(other.basicTestCaseInformation_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            basicTestCaseInformation_.AddEntriesFrom(input, _repeated_basicTestCaseInformation_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            basicTestCaseInformation_.AddEntriesFrom(ref input, _repeated_basicTestCaseInformation_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding information about who is the user and from which Domain and System to request the MetaDataItems
  /// </summary>
  public sealed partial class GetTestCaseMetaDataItemsRequestMessage : pb::IMessage<GetTestCaseMetaDataItemsRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTestCaseMetaDataItemsRequestMessage> _parser = new pb::MessageParser<GetTestCaseMetaDataItemsRequestMessage>(() => new GetTestCaseMetaDataItemsRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTestCaseMetaDataItemsRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseMetaDataItemsRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseMetaDataItemsRequestMessage(GetTestCaseMetaDataItemsRequestMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      domainUuid_ = other.domainUuid_;
      domainName_ = other.domainName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseMetaDataItemsRequestMessage Clone() {
      return new GetTestCaseMetaDataItemsRequestMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    /// <summary>Field number for the "DomainUuid" field.</summary>
    public const int DomainUuidFieldNumber = 3;
    private string domainUuid_ = "";
    /// <summary>
    /// The Domain, UUID, who has the MetaDataItems
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomainUuid {
      get { return domainUuid_; }
      set {
        domainUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DomainName" field.</summary>
    public const int DomainNameFieldNumber = 4;
    private string domainName_ = "";
    /// <summary>
    /// The Domain, Name, who has the MetaDataItems
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomainName {
      get { return domainName_; }
      set {
        domainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTestCaseMetaDataItemsRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTestCaseMetaDataItemsRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      if (DomainUuid != other.DomainUuid) return false;
      if (DomainName != other.DomainName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      if (DomainUuid.Length != 0) hash ^= DomainUuid.GetHashCode();
      if (DomainName.Length != 0) hash ^= DomainName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (DomainUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DomainUuid);
      }
      if (DomainName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DomainName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (DomainUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DomainUuid);
      }
      if (DomainName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DomainName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      if (DomainUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainUuid);
      }
      if (DomainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTestCaseMetaDataItemsRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      if (other.DomainUuid.Length != 0) {
        DomainUuid = other.DomainUuid;
      }
      if (other.DomainName.Length != 0) {
        DomainName = other.DomainName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            DomainUuid = input.ReadString();
            break;
          }
          case 34: {
            DomainName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            DomainUuid = input.ReadString();
            break;
          }
          case 34: {
            DomainName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding all MetaDataItems for a specific Domain
  /// </summary>
  public sealed partial class GetTestCaseMetaDataItemsResponseMessage : pb::IMessage<GetTestCaseMetaDataItemsResponseMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTestCaseMetaDataItemsResponseMessage> _parser = new pb::MessageParser<GetTestCaseMetaDataItemsResponseMessage>(() => new GetTestCaseMetaDataItemsResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTestCaseMetaDataItemsResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseMetaDataItemsResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseMetaDataItemsResponseMessage(GetTestCaseMetaDataItemsResponseMessage other) : this() {
      testCaseMetaData_ = other.testCaseMetaData_ != null ? other.testCaseMetaData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTestCaseMetaDataItemsResponseMessage Clone() {
      return new GetTestCaseMetaDataItemsResponseMessage(this);
    }

    /// <summary>Field number for the "TestCaseMetaData" field.</summary>
    public const int TestCaseMetaDataFieldNumber = 1;
    private global::SubCustodyServer.TestCaseMetaDataMessage testCaseMetaData_;
    /// <summary>
    /// A list of all available MetaData that must be filled in by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseMetaDataMessage TestCaseMetaData {
      get { return testCaseMetaData_; }
      set {
        testCaseMetaData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTestCaseMetaDataItemsResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTestCaseMetaDataItemsResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TestCaseMetaData, other.TestCaseMetaData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (testCaseMetaData_ != null) hash ^= TestCaseMetaData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (testCaseMetaData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TestCaseMetaData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (testCaseMetaData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TestCaseMetaData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (testCaseMetaData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestCaseMetaData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTestCaseMetaDataItemsResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.testCaseMetaData_ != null) {
        if (testCaseMetaData_ == null) {
          TestCaseMetaData = new global::SubCustodyServer.TestCaseMetaDataMessage();
        }
        TestCaseMetaData.MergeFrom(other.TestCaseMetaData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (testCaseMetaData_ == null) {
              TestCaseMetaData = new global::SubCustodyServer.TestCaseMetaDataMessage();
            }
            input.ReadMessage(TestCaseMetaData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (testCaseMetaData_ == null) {
              TestCaseMetaData = new global::SubCustodyServer.TestCaseMetaDataMessage();
            }
            input.ReadMessage(TestCaseMetaData);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A message holding one TestCase
  /// </summary>
  public sealed partial class TestCaseMessage : pb::IMessage<TestCaseMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestCaseMessage> _parser = new pb::MessageParser<TestCaseMessage>(() => new TestCaseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestCaseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseMessage(TestCaseMessage other) : this() {
      basicTestCaseInformation_ = other.basicTestCaseInformation_ != null ? other.basicTestCaseInformation_.Clone() : null;
      createdAndUpdatedInformation_ = other.createdAndUpdatedInformation_ != null ? other.createdAndUpdatedInformation_.Clone() : null;
      testCaseModel_ = other.testCaseModel_ != null ? other.testCaseModel_.Clone() : null;
      testCaseMetaData_ = other.testCaseMetaData_ != null ? other.testCaseMetaData_.Clone() : null;
      testCaseFiles_ = other.testCaseFiles_ != null ? other.testCaseFiles_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseMessage Clone() {
      return new TestCaseMessage(this);
    }

    /// <summary>Field number for the "BasicTestCaseInformation" field.</summary>
    public const int BasicTestCaseInformationFieldNumber = 1;
    private global::SubCustodyServer.BasicTestCaseInformationMessage basicTestCaseInformation_;
    /// <summary>
    /// All Basic information about the TestCase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestCaseInformationMessage BasicTestCaseInformation {
      get { return basicTestCaseInformation_; }
      set {
        basicTestCaseInformation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedAndUpdatedInformation" field.</summary>
    public const int CreatedAndUpdatedInformationFieldNumber = 2;
    private global::SubCustodyServer.TestCaseMessage.Types.CreatedAndUpdatedInformationMessage createdAndUpdatedInformation_;
    /// <summary>
    /// Information regarding who did what and when
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseMessage.Types.CreatedAndUpdatedInformationMessage CreatedAndUpdatedInformation {
      get { return createdAndUpdatedInformation_; }
      set {
        createdAndUpdatedInformation_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseModel" field.</summary>
    public const int TestCaseModelFieldNumber = 3;
    private global::SubCustodyServer.TestCaseModelMessage testCaseModel_;
    /// <summary>
    /// Hold the model of how the TestCase is constructed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseModelMessage TestCaseModel {
      get { return testCaseModel_; }
      set {
        testCaseModel_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseMetaData" field.</summary>
    public const int TestCaseMetaDataFieldNumber = 4;
    private global::SubCustodyServer.TestCaseMetaDataMessage testCaseMetaData_;
    /// <summary>
    /// Holds the metadata for the TestCase, set by the user to classify the TestCase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseMetaDataMessage TestCaseMetaData {
      get { return testCaseMetaData_; }
      set {
        testCaseMetaData_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseFiles" field.</summary>
    public const int TestCaseFilesFieldNumber = 5;
    private global::SubCustodyServer.TestCaseFilesMessage testCaseFiles_;
    /// <summary>
    /// All files connected to the TestCase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseFilesMessage TestCaseFiles {
      get { return testCaseFiles_; }
      set {
        testCaseFiles_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestCaseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestCaseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicTestCaseInformation, other.BasicTestCaseInformation)) return false;
      if (!object.Equals(CreatedAndUpdatedInformation, other.CreatedAndUpdatedInformation)) return false;
      if (!object.Equals(TestCaseModel, other.TestCaseModel)) return false;
      if (!object.Equals(TestCaseMetaData, other.TestCaseMetaData)) return false;
      if (!object.Equals(TestCaseFiles, other.TestCaseFiles)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (basicTestCaseInformation_ != null) hash ^= BasicTestCaseInformation.GetHashCode();
      if (createdAndUpdatedInformation_ != null) hash ^= CreatedAndUpdatedInformation.GetHashCode();
      if (testCaseModel_ != null) hash ^= TestCaseModel.GetHashCode();
      if (testCaseMetaData_ != null) hash ^= TestCaseMetaData.GetHashCode();
      if (testCaseFiles_ != null) hash ^= TestCaseFiles.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (basicTestCaseInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestCaseInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (testCaseModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TestCaseModel);
      }
      if (testCaseMetaData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TestCaseMetaData);
      }
      if (testCaseFiles_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TestCaseFiles);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (basicTestCaseInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestCaseInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (testCaseModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TestCaseModel);
      }
      if (testCaseMetaData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TestCaseMetaData);
      }
      if (testCaseFiles_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TestCaseFiles);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (basicTestCaseInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicTestCaseInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAndUpdatedInformation);
      }
      if (testCaseModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestCaseModel);
      }
      if (testCaseMetaData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestCaseMetaData);
      }
      if (testCaseFiles_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestCaseFiles);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestCaseMessage other) {
      if (other == null) {
        return;
      }
      if (other.basicTestCaseInformation_ != null) {
        if (basicTestCaseInformation_ == null) {
          BasicTestCaseInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage();
        }
        BasicTestCaseInformation.MergeFrom(other.BasicTestCaseInformation);
      }
      if (other.createdAndUpdatedInformation_ != null) {
        if (createdAndUpdatedInformation_ == null) {
          CreatedAndUpdatedInformation = new global::SubCustodyServer.TestCaseMessage.Types.CreatedAndUpdatedInformationMessage();
        }
        CreatedAndUpdatedInformation.MergeFrom(other.CreatedAndUpdatedInformation);
      }
      if (other.testCaseModel_ != null) {
        if (testCaseModel_ == null) {
          TestCaseModel = new global::SubCustodyServer.TestCaseModelMessage();
        }
        TestCaseModel.MergeFrom(other.TestCaseModel);
      }
      if (other.testCaseMetaData_ != null) {
        if (testCaseMetaData_ == null) {
          TestCaseMetaData = new global::SubCustodyServer.TestCaseMetaDataMessage();
        }
        TestCaseMetaData.MergeFrom(other.TestCaseMetaData);
      }
      if (other.testCaseFiles_ != null) {
        if (testCaseFiles_ == null) {
          TestCaseFiles = new global::SubCustodyServer.TestCaseFilesMessage();
        }
        TestCaseFiles.MergeFrom(other.TestCaseFiles);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicTestCaseInformation_ == null) {
              BasicTestCaseInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage();
            }
            input.ReadMessage(BasicTestCaseInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.TestCaseMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
          case 26: {
            if (testCaseModel_ == null) {
              TestCaseModel = new global::SubCustodyServer.TestCaseModelMessage();
            }
            input.ReadMessage(TestCaseModel);
            break;
          }
          case 34: {
            if (testCaseMetaData_ == null) {
              TestCaseMetaData = new global::SubCustodyServer.TestCaseMetaDataMessage();
            }
            input.ReadMessage(TestCaseMetaData);
            break;
          }
          case 42: {
            if (testCaseFiles_ == null) {
              TestCaseFiles = new global::SubCustodyServer.TestCaseFilesMessage();
            }
            input.ReadMessage(TestCaseFiles);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (basicTestCaseInformation_ == null) {
              BasicTestCaseInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage();
            }
            input.ReadMessage(BasicTestCaseInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.TestCaseMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
          case 26: {
            if (testCaseModel_ == null) {
              TestCaseModel = new global::SubCustodyServer.TestCaseModelMessage();
            }
            input.ReadMessage(TestCaseModel);
            break;
          }
          case 34: {
            if (testCaseMetaData_ == null) {
              TestCaseMetaData = new global::SubCustodyServer.TestCaseMetaDataMessage();
            }
            input.ReadMessage(TestCaseMetaData);
            break;
          }
          case 42: {
            if (testCaseFiles_ == null) {
              TestCaseFiles = new global::SubCustodyServer.TestCaseFilesMessage();
            }
            input.ReadMessage(TestCaseFiles);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TestCaseMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding information about changes to the TestCase, who and when
      /// </summary>
      public sealed partial class CreatedAndUpdatedInformationMessage : pb::IMessage<CreatedAndUpdatedInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreatedAndUpdatedInformationMessage> _parser = new pb::MessageParser<CreatedAndUpdatedInformationMessage>(() => new CreatedAndUpdatedInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreatedAndUpdatedInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.TestCaseMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage(CreatedAndUpdatedInformationMessage other) : this() {
          addedToTestCaseTimeStamp_ = other.addedToTestCaseTimeStamp_ != null ? other.addedToTestCaseTimeStamp_.Clone() : null;
          addedToTestCaseByUserId_ = other.addedToTestCaseByUserId_;
          lastUpdatedInTestCaseTimeStamp_ = other.lastUpdatedInTestCaseTimeStamp_ != null ? other.lastUpdatedInTestCaseTimeStamp_.Clone() : null;
          lastUpdatedInTestCaseByUserId_ = other.lastUpdatedInTestCaseByUserId_;
          deletedFromTestCaseTimeStamp_ = other.deletedFromTestCaseTimeStamp_ != null ? other.deletedFromTestCaseTimeStamp_.Clone() : null;
          deletedFromTestCaseByUserId_ = other.deletedFromTestCaseByUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage Clone() {
          return new CreatedAndUpdatedInformationMessage(this);
        }

        /// <summary>Field number for the "AddedToTestCaseTimeStamp" field.</summary>
        public const int AddedToTestCaseTimeStampFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp addedToTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestCase was first created
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp AddedToTestCaseTimeStamp {
          get { return addedToTestCaseTimeStamp_; }
          set {
            addedToTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "AddedToTestCaseByUserId" field.</summary>
        public const int AddedToTestCaseByUserIdFieldNumber = 2;
        private string addedToTestCaseByUserId_ = "";
        /// <summary>
        /// Which user added the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AddedToTestCaseByUserId {
          get { return addedToTestCaseByUserId_; }
          set {
            addedToTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseTimeStamp" field.</summary>
        public const int LastUpdatedInTestCaseTimeStampFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdatedInTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestCase was updated
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdatedInTestCaseTimeStamp {
          get { return lastUpdatedInTestCaseTimeStamp_; }
          set {
            lastUpdatedInTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseByUserId" field.</summary>
        public const int LastUpdatedInTestCaseByUserIdFieldNumber = 4;
        private string lastUpdatedInTestCaseByUserId_ = "";
        /// <summary>
        /// Which user was the last to update the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastUpdatedInTestCaseByUserId {
          get { return lastUpdatedInTestCaseByUserId_; }
          set {
            lastUpdatedInTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseTimeStamp" field.</summary>
        public const int DeletedFromTestCaseTimeStampFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp deletedFromTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestCase was deleted
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp DeletedFromTestCaseTimeStamp {
          get { return deletedFromTestCaseTimeStamp_; }
          set {
            deletedFromTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseByUserId" field.</summary>
        public const int DeletedFromTestCaseByUserIdFieldNumber = 6;
        private string deletedFromTestCaseByUserId_ = "";
        /// <summary>
        /// Which user deleted the the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeletedFromTestCaseByUserId {
          get { return deletedFromTestCaseByUserId_; }
          set {
            deletedFromTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreatedAndUpdatedInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreatedAndUpdatedInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AddedToTestCaseTimeStamp, other.AddedToTestCaseTimeStamp)) return false;
          if (AddedToTestCaseByUserId != other.AddedToTestCaseByUserId) return false;
          if (!object.Equals(LastUpdatedInTestCaseTimeStamp, other.LastUpdatedInTestCaseTimeStamp)) return false;
          if (LastUpdatedInTestCaseByUserId != other.LastUpdatedInTestCaseByUserId) return false;
          if (!object.Equals(DeletedFromTestCaseTimeStamp, other.DeletedFromTestCaseTimeStamp)) return false;
          if (DeletedFromTestCaseByUserId != other.DeletedFromTestCaseByUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (addedToTestCaseTimeStamp_ != null) hash ^= AddedToTestCaseTimeStamp.GetHashCode();
          if (AddedToTestCaseByUserId.Length != 0) hash ^= AddedToTestCaseByUserId.GetHashCode();
          if (lastUpdatedInTestCaseTimeStamp_ != null) hash ^= LastUpdatedInTestCaseTimeStamp.GetHashCode();
          if (LastUpdatedInTestCaseByUserId.Length != 0) hash ^= LastUpdatedInTestCaseByUserId.GetHashCode();
          if (deletedFromTestCaseTimeStamp_ != null) hash ^= DeletedFromTestCaseTimeStamp.GetHashCode();
          if (DeletedFromTestCaseByUserId.Length != 0) hash ^= DeletedFromTestCaseByUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (addedToTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreatedAndUpdatedInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.addedToTestCaseTimeStamp_ != null) {
            if (addedToTestCaseTimeStamp_ == null) {
              AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            AddedToTestCaseTimeStamp.MergeFrom(other.AddedToTestCaseTimeStamp);
          }
          if (other.AddedToTestCaseByUserId.Length != 0) {
            AddedToTestCaseByUserId = other.AddedToTestCaseByUserId;
          }
          if (other.lastUpdatedInTestCaseTimeStamp_ != null) {
            if (lastUpdatedInTestCaseTimeStamp_ == null) {
              LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastUpdatedInTestCaseTimeStamp.MergeFrom(other.LastUpdatedInTestCaseTimeStamp);
          }
          if (other.LastUpdatedInTestCaseByUserId.Length != 0) {
            LastUpdatedInTestCaseByUserId = other.LastUpdatedInTestCaseByUserId;
          }
          if (other.deletedFromTestCaseTimeStamp_ != null) {
            if (deletedFromTestCaseTimeStamp_ == null) {
              DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            DeletedFromTestCaseTimeStamp.MergeFrom(other.DeletedFromTestCaseTimeStamp);
          }
          if (other.DeletedFromTestCaseByUserId.Length != 0) {
            DeletedFromTestCaseByUserId = other.DeletedFromTestCaseByUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message holding Basic information for one TestCase
  /// </summary>
  public sealed partial class BasicTestCaseInformationMessage : pb::IMessage<BasicTestCaseInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BasicTestCaseInformationMessage> _parser = new pb::MessageParser<BasicTestCaseInformationMessage>(() => new BasicTestCaseInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicTestCaseInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestCaseInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestCaseInformationMessage(BasicTestCaseInformationMessage other) : this() {
      nonEditableInformation_ = other.nonEditableInformation_ != null ? other.nonEditableInformation_.Clone() : null;
      editableInformation_ = other.editableInformation_ != null ? other.editableInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestCaseInformationMessage Clone() {
      return new BasicTestCaseInformationMessage(this);
    }

    /// <summary>Field number for the "NonEditableInformation" field.</summary>
    public const int NonEditableInformationFieldNumber = 1;
    private global::SubCustodyServer.BasicTestCaseInformationMessage.Types.NonEditableBasicInformationMessage nonEditableInformation_;
    /// <summary>
    /// All Basic information that can be shown in GUI but can't be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestCaseInformationMessage.Types.NonEditableBasicInformationMessage NonEditableInformation {
      get { return nonEditableInformation_; }
      set {
        nonEditableInformation_ = value;
      }
    }

    /// <summary>Field number for the "EditableInformation" field.</summary>
    public const int EditableInformationFieldNumber = 2;
    private global::SubCustodyServer.BasicTestCaseInformationMessage.Types.EditableBasicInformationMessage editableInformation_;
    /// <summary>
    /// All Basic information that can be shown in GUI and can be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestCaseInformationMessage.Types.EditableBasicInformationMessage EditableInformation {
      get { return editableInformation_; }
      set {
        editableInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicTestCaseInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicTestCaseInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NonEditableInformation, other.NonEditableInformation)) return false;
      if (!object.Equals(EditableInformation, other.EditableInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nonEditableInformation_ != null) hash ^= NonEditableInformation.GetHashCode();
      if (editableInformation_ != null) hash ^= EditableInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nonEditableInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EditableInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nonEditableInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EditableInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nonEditableInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EditableInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicTestCaseInformationMessage other) {
      if (other == null) {
        return;
      }
      if (other.nonEditableInformation_ != null) {
        if (nonEditableInformation_ == null) {
          NonEditableInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage.Types.NonEditableBasicInformationMessage();
        }
        NonEditableInformation.MergeFrom(other.NonEditableInformation);
      }
      if (other.editableInformation_ != null) {
        if (editableInformation_ == null) {
          EditableInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage.Types.EditableBasicInformationMessage();
        }
        EditableInformation.MergeFrom(other.EditableInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nonEditableInformation_ == null) {
              NonEditableInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage.Types.NonEditableBasicInformationMessage();
            }
            input.ReadMessage(NonEditableInformation);
            break;
          }
          case 18: {
            if (editableInformation_ == null) {
              EditableInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage.Types.EditableBasicInformationMessage();
            }
            input.ReadMessage(EditableInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nonEditableInformation_ == null) {
              NonEditableInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage.Types.NonEditableBasicInformationMessage();
            }
            input.ReadMessage(NonEditableInformation);
            break;
          }
          case 18: {
            if (editableInformation_ == null) {
              EditableInformation = new global::SubCustodyServer.BasicTestCaseInformationMessage.Types.EditableBasicInformationMessage();
            }
            input.ReadMessage(EditableInformation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BasicTestCaseInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding All basic information that can be shown in GUI but can't be changed by the user
      /// </summary>
      public sealed partial class NonEditableBasicInformationMessage : pb::IMessage<NonEditableBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NonEditableBasicInformationMessage> _parser = new pb::MessageParser<NonEditableBasicInformationMessage>(() => new NonEditableBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NonEditableBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.BasicTestCaseInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage(NonEditableBasicInformationMessage other) : this() {
          testCaseUuid_ = other.testCaseUuid_;
          testCaseName_ = other.testCaseName_;
          domainUuid_ = other.domainUuid_;
          domainName_ = other.domainName_;
          testCaseVersion_ = other.testCaseVersion_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage Clone() {
          return new NonEditableBasicInformationMessage(this);
        }

        /// <summary>Field number for the "TestCaseUuid" field.</summary>
        public const int TestCaseUuidFieldNumber = 1;
        private string testCaseUuid_ = "";
        /// <summary>
        /// The TestCase, UUID, set by TestCase-builder
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestCaseUuid {
          get { return testCaseUuid_; }
          set {
            testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestCaseName" field.</summary>
        public const int TestCaseNameFieldNumber = 2;
        private string testCaseName_ = "";
        /// <summary>
        /// The TestCase, Name, set in TestCase-builder
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestCaseName {
          get { return testCaseName_; }
          set {
            testCaseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DomainUuid" field.</summary>
        public const int DomainUuidFieldNumber = 3;
        private string domainUuid_ = "";
        /// <summary>
        /// The Domain, UUID, where the TestCase 'has its home'
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DomainUuid {
          get { return domainUuid_; }
          set {
            domainUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DomainName" field.</summary>
        public const int DomainNameFieldNumber = 4;
        private string domainName_ = "";
        /// <summary>
        /// The Domain, Name, where the TestCase 'has its home'
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DomainName {
          get { return domainName_; }
          set {
            domainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestCaseVersion" field.</summary>
        public const int TestCaseVersionFieldNumber = 6;
        private uint testCaseVersion_;
        /// <summary>
        /// Each time a TestCase is saved then the 'TestCaseVersion' will be incremented by +1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint TestCaseVersion {
          get { return testCaseVersion_; }
          set {
            testCaseVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NonEditableBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NonEditableBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestCaseUuid != other.TestCaseUuid) return false;
          if (TestCaseName != other.TestCaseName) return false;
          if (DomainUuid != other.DomainUuid) return false;
          if (DomainName != other.DomainName) return false;
          if (TestCaseVersion != other.TestCaseVersion) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
          if (TestCaseName.Length != 0) hash ^= TestCaseName.GetHashCode();
          if (DomainUuid.Length != 0) hash ^= DomainUuid.GetHashCode();
          if (DomainName.Length != 0) hash ^= DomainName.GetHashCode();
          if (TestCaseVersion != 0) hash ^= TestCaseVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestCaseUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseUuid);
          }
          if (TestCaseName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestCaseName);
          }
          if (DomainUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DomainUuid);
          }
          if (DomainName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DomainName);
          }
          if (TestCaseVersion != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(TestCaseVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestCaseUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseUuid);
          }
          if (TestCaseName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestCaseName);
          }
          if (DomainUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DomainUuid);
          }
          if (DomainName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DomainName);
          }
          if (TestCaseVersion != 0) {
            output.WriteRawTag(48);
            output.WriteUInt32(TestCaseVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestCaseUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
          }
          if (TestCaseName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseName);
          }
          if (DomainUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainUuid);
          }
          if (DomainName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainName);
          }
          if (TestCaseVersion != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TestCaseVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NonEditableBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestCaseUuid.Length != 0) {
            TestCaseUuid = other.TestCaseUuid;
          }
          if (other.TestCaseName.Length != 0) {
            TestCaseName = other.TestCaseName;
          }
          if (other.DomainUuid.Length != 0) {
            DomainUuid = other.DomainUuid;
          }
          if (other.DomainName.Length != 0) {
            DomainName = other.DomainName;
          }
          if (other.TestCaseVersion != 0) {
            TestCaseVersion = other.TestCaseVersion;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TestCaseUuid = input.ReadString();
                break;
              }
              case 18: {
                TestCaseName = input.ReadString();
                break;
              }
              case 26: {
                DomainUuid = input.ReadString();
                break;
              }
              case 34: {
                DomainName = input.ReadString();
                break;
              }
              case 48: {
                TestCaseVersion = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TestCaseUuid = input.ReadString();
                break;
              }
              case 18: {
                TestCaseName = input.ReadString();
                break;
              }
              case 26: {
                DomainUuid = input.ReadString();
                break;
              }
              case 34: {
                DomainName = input.ReadString();
                break;
              }
              case 48: {
                TestCaseVersion = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding all Basic information that can be shown in GUI and can be changed by the user
      /// </summary>
      public sealed partial class EditableBasicInformationMessage : pb::IMessage<EditableBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EditableBasicInformationMessage> _parser = new pb::MessageParser<EditableBasicInformationMessage>(() => new EditableBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EditableBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.BasicTestCaseInformationMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage(EditableBasicInformationMessage other) : this() {
          testCaseDescription_ = other.testCaseDescription_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage Clone() {
          return new EditableBasicInformationMessage(this);
        }

        /// <summary>Field number for the "TestCaseDescription" field.</summary>
        public const int TestCaseDescriptionFieldNumber = 1;
        private string testCaseDescription_ = "";
        /// <summary>
        /// The description of the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestCaseDescription {
          get { return testCaseDescription_; }
          set {
            testCaseDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EditableBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EditableBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestCaseDescription != other.TestCaseDescription) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestCaseDescription.Length != 0) hash ^= TestCaseDescription.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestCaseDescription.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseDescription);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestCaseDescription.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseDescription);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestCaseDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseDescription);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EditableBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestCaseDescription.Length != 0) {
            TestCaseDescription = other.TestCaseDescription;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TestCaseDescription = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TestCaseDescription = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message holding all MetaDataparameters for the TestCase
  /// </summary>
  public sealed partial class TestCaseMetaDataMessage : pb::IMessage<TestCaseMetaDataMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestCaseMetaDataMessage> _parser = new pb::MessageParser<TestCaseMetaDataMessage>(() => new TestCaseMetaDataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestCaseMetaDataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseMetaDataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseMetaDataMessage(TestCaseMetaDataMessage other) : this() {
      metaDataItems_ = other.metaDataItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseMetaDataMessage Clone() {
      return new TestCaseMetaDataMessage(this);
    }

    /// <summary>Field number for the "MetaDataItems" field.</summary>
    public const int MetaDataItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage> _repeated_metaDataItems_codec
        = pb::FieldCodec.ForMessage(10, global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage> metaDataItems_ = new pbc::RepeatedField<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage>();
    /// <summary>
    /// List of all MetaDataItems with their values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage> MetaDataItems {
      get { return metaDataItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestCaseMetaDataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestCaseMetaDataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!metaDataItems_.Equals(other.metaDataItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= metaDataItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      metaDataItems_.WriteTo(output, _repeated_metaDataItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      metaDataItems_.WriteTo(ref output, _repeated_metaDataItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metaDataItems_.CalculateSize(_repeated_metaDataItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestCaseMetaDataMessage other) {
      if (other == null) {
        return;
      }
      metaDataItems_.Add(other.metaDataItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metaDataItems_.AddEntriesFrom(input, _repeated_metaDataItems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            metaDataItems_.AddEntriesFrom(ref input, _repeated_metaDataItems_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TestCaseMetaDataMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MetaDataItemMessage : pb::IMessage<MetaDataItemMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MetaDataItemMessage> _parser = new pb::MessageParser<MetaDataItemMessage>(() => new MetaDataItemMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MetaDataItemMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.TestCaseMetaDataMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetaDataItemMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetaDataItemMessage(MetaDataItemMessage other) : this() {
          metaDataUuid_ = other.metaDataUuid_;
          metaDataName_ = other.metaDataName_;
          metaDataGroupUuid_ = other.metaDataGroupUuid_;
          metaDataGroupName_ = other.metaDataGroupName_;
          availableMetaDataItems_ = other.availableMetaDataItems_.Clone();
          chosenMetaDataItem_ = other.chosenMetaDataItem_ != null ? other.chosenMetaDataItem_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MetaDataItemMessage Clone() {
          return new MetaDataItemMessage(this);
        }

        /// <summary>Field number for the "MetaDataUuid" field.</summary>
        public const int MetaDataUuidFieldNumber = 1;
        private string metaDataUuid_ = "";
        /// <summary>
        /// UUID for this MetaDataItem
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MetaDataUuid {
          get { return metaDataUuid_; }
          set {
            metaDataUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "MetaDataName" field.</summary>
        public const int MetaDataNameFieldNumber = 2;
        private string metaDataName_ = "";
        /// <summary>
        /// Name for this MetaDataItem
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MetaDataName {
          get { return metaDataName_; }
          set {
            metaDataName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "MetaDataGroupUuid" field.</summary>
        public const int MetaDataGroupUuidFieldNumber = 3;
        private string metaDataGroupUuid_ = "";
        /// <summary>
        /// The group, UUID,  for this MetaDataItem, used to group stuff in the GUI
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MetaDataGroupUuid {
          get { return metaDataGroupUuid_; }
          set {
            metaDataGroupUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "MetaDataGroupName" field.</summary>
        public const int MetaDataGroupNameFieldNumber = 4;
        private string metaDataGroupName_ = "";
        /// <summary>
        /// The group, Name  for this MetaDataItem, used as Label for the group in the GUI
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MetaDataGroupName {
          get { return metaDataGroupName_; }
          set {
            metaDataGroupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "AvailableMetaDataItems" field.</summary>
        public const int AvailableMetaDataItemsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage> _repeated_availableMetaDataItems_codec
            = pb::FieldCodec.ForMessage(42, global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage.Parser);
        private readonly pbc::RepeatedField<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage> availableMetaDataItems_ = new pbc::RepeatedField<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage>();
        /// <summary>
        /// A list of the available MetaDataItems that the user can chose from
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage> AvailableMetaDataItems {
          get { return availableMetaDataItems_; }
        }

        /// <summary>Field number for the "ChosenMetaDataItem" field.</summary>
        public const int ChosenMetaDataItemFieldNumber = 6;
        private global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage chosenMetaDataItem_;
        /// <summary>
        /// The chosen, by user, MetaDataItems
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage ChosenMetaDataItem {
          get { return chosenMetaDataItem_; }
          set {
            chosenMetaDataItem_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MetaDataItemMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MetaDataItemMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MetaDataUuid != other.MetaDataUuid) return false;
          if (MetaDataName != other.MetaDataName) return false;
          if (MetaDataGroupUuid != other.MetaDataGroupUuid) return false;
          if (MetaDataGroupName != other.MetaDataGroupName) return false;
          if(!availableMetaDataItems_.Equals(other.availableMetaDataItems_)) return false;
          if (!object.Equals(ChosenMetaDataItem, other.ChosenMetaDataItem)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MetaDataUuid.Length != 0) hash ^= MetaDataUuid.GetHashCode();
          if (MetaDataName.Length != 0) hash ^= MetaDataName.GetHashCode();
          if (MetaDataGroupUuid.Length != 0) hash ^= MetaDataGroupUuid.GetHashCode();
          if (MetaDataGroupName.Length != 0) hash ^= MetaDataGroupName.GetHashCode();
          hash ^= availableMetaDataItems_.GetHashCode();
          if (chosenMetaDataItem_ != null) hash ^= ChosenMetaDataItem.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MetaDataUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetaDataUuid);
          }
          if (MetaDataName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MetaDataName);
          }
          if (MetaDataGroupUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(MetaDataGroupUuid);
          }
          if (MetaDataGroupName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(MetaDataGroupName);
          }
          availableMetaDataItems_.WriteTo(output, _repeated_availableMetaDataItems_codec);
          if (chosenMetaDataItem_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ChosenMetaDataItem);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MetaDataUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MetaDataUuid);
          }
          if (MetaDataName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MetaDataName);
          }
          if (MetaDataGroupUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(MetaDataGroupUuid);
          }
          if (MetaDataGroupName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(MetaDataGroupName);
          }
          availableMetaDataItems_.WriteTo(ref output, _repeated_availableMetaDataItems_codec);
          if (chosenMetaDataItem_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ChosenMetaDataItem);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MetaDataUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaDataUuid);
          }
          if (MetaDataName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaDataName);
          }
          if (MetaDataGroupUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaDataGroupUuid);
          }
          if (MetaDataGroupName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaDataGroupName);
          }
          size += availableMetaDataItems_.CalculateSize(_repeated_availableMetaDataItems_codec);
          if (chosenMetaDataItem_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChosenMetaDataItem);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MetaDataItemMessage other) {
          if (other == null) {
            return;
          }
          if (other.MetaDataUuid.Length != 0) {
            MetaDataUuid = other.MetaDataUuid;
          }
          if (other.MetaDataName.Length != 0) {
            MetaDataName = other.MetaDataName;
          }
          if (other.MetaDataGroupUuid.Length != 0) {
            MetaDataGroupUuid = other.MetaDataGroupUuid;
          }
          if (other.MetaDataGroupName.Length != 0) {
            MetaDataGroupName = other.MetaDataGroupName;
          }
          availableMetaDataItems_.Add(other.availableMetaDataItems_);
          if (other.chosenMetaDataItem_ != null) {
            if (chosenMetaDataItem_ == null) {
              ChosenMetaDataItem = new global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage();
            }
            ChosenMetaDataItem.MergeFrom(other.ChosenMetaDataItem);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MetaDataUuid = input.ReadString();
                break;
              }
              case 18: {
                MetaDataName = input.ReadString();
                break;
              }
              case 26: {
                MetaDataGroupUuid = input.ReadString();
                break;
              }
              case 34: {
                MetaDataGroupName = input.ReadString();
                break;
              }
              case 42: {
                availableMetaDataItems_.AddEntriesFrom(input, _repeated_availableMetaDataItems_codec);
                break;
              }
              case 50: {
                if (chosenMetaDataItem_ == null) {
                  ChosenMetaDataItem = new global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage();
                }
                input.ReadMessage(ChosenMetaDataItem);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MetaDataUuid = input.ReadString();
                break;
              }
              case 18: {
                MetaDataName = input.ReadString();
                break;
              }
              case 26: {
                MetaDataGroupUuid = input.ReadString();
                break;
              }
              case 34: {
                MetaDataGroupName = input.ReadString();
                break;
              }
              case 42: {
                availableMetaDataItems_.AddEntriesFrom(ref input, _repeated_availableMetaDataItems_codec);
                break;
              }
              case 50: {
                if (chosenMetaDataItem_ == null) {
                  ChosenMetaDataItem = new global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Types.MetaDataItemMessage();
                }
                input.ReadMessage(ChosenMetaDataItem);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the MetaDataItemMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Message holding one MetaDataItem
          /// </summary>
          public sealed partial class MetaDataItemMessage : pb::IMessage<MetaDataItemMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetaDataItemMessage> _parser = new pb::MessageParser<MetaDataItemMessage>(() => new MetaDataItemMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<MetaDataItemMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::SubCustodyServer.TestCaseMetaDataMessage.Types.MetaDataItemMessage.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MetaDataItemMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MetaDataItemMessage(MetaDataItemMessage other) : this() {
              metaDataItemUuid_ = other.metaDataItemUuid_;
              metaDataItemValue_ = other.metaDataItemValue_;
              metaDataItemIndex_ = other.metaDataItemIndex_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MetaDataItemMessage Clone() {
              return new MetaDataItemMessage(this);
            }

            /// <summary>Field number for the "MetaDataItemUuid" field.</summary>
            public const int MetaDataItemUuidFieldNumber = 1;
            private string metaDataItemUuid_ = "";
            /// <summary>
            /// Unique UUID for the MetaDataItem
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string MetaDataItemUuid {
              get { return metaDataItemUuid_; }
              set {
                metaDataItemUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "MetaDataItemValue" field.</summary>
            public const int MetaDataItemValueFieldNumber = 2;
            private string metaDataItemValue_ = "";
            /// <summary>
            /// The value presented in the GUI and for the user to pick
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string MetaDataItemValue {
              get { return metaDataItemValue_; }
              set {
                metaDataItemValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "MetaDataItemIndex" field.</summary>
            public const int MetaDataItemIndexFieldNumber = 3;
            private uint metaDataItemIndex_;
            /// <summary>
            /// A number deciding the presentation order
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint MetaDataItemIndex {
              get { return metaDataItemIndex_; }
              set {
                metaDataItemIndex_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as MetaDataItemMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(MetaDataItemMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MetaDataItemUuid != other.MetaDataItemUuid) return false;
              if (MetaDataItemValue != other.MetaDataItemValue) return false;
              if (MetaDataItemIndex != other.MetaDataItemIndex) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MetaDataItemUuid.Length != 0) hash ^= MetaDataItemUuid.GetHashCode();
              if (MetaDataItemValue.Length != 0) hash ^= MetaDataItemValue.GetHashCode();
              if (MetaDataItemIndex != 0) hash ^= MetaDataItemIndex.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MetaDataItemUuid.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MetaDataItemUuid);
              }
              if (MetaDataItemValue.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(MetaDataItemValue);
              }
              if (MetaDataItemIndex != 0) {
                output.WriteRawTag(24);
                output.WriteUInt32(MetaDataItemIndex);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MetaDataItemUuid.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MetaDataItemUuid);
              }
              if (MetaDataItemValue.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(MetaDataItemValue);
              }
              if (MetaDataItemIndex != 0) {
                output.WriteRawTag(24);
                output.WriteUInt32(MetaDataItemIndex);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MetaDataItemUuid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaDataItemUuid);
              }
              if (MetaDataItemValue.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaDataItemValue);
              }
              if (MetaDataItemIndex != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MetaDataItemIndex);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(MetaDataItemMessage other) {
              if (other == null) {
                return;
              }
              if (other.MetaDataItemUuid.Length != 0) {
                MetaDataItemUuid = other.MetaDataItemUuid;
              }
              if (other.MetaDataItemValue.Length != 0) {
                MetaDataItemValue = other.MetaDataItemValue;
              }
              if (other.MetaDataItemIndex != 0) {
                MetaDataItemIndex = other.MetaDataItemIndex;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    MetaDataItemUuid = input.ReadString();
                    break;
                  }
                  case 18: {
                    MetaDataItemValue = input.ReadString();
                    break;
                  }
                  case 24: {
                    MetaDataItemIndex = input.ReadUInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    MetaDataItemUuid = input.ReadString();
                    break;
                  }
                  case 18: {
                    MetaDataItemValue = input.ReadString();
                    break;
                  }
                  case 24: {
                    MetaDataItemIndex = input.ReadUInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Message holding all that is added to the TestCase, either using 'File picker' or add in some other way
  /// </summary>
  public sealed partial class TestCaseFilesMessage : pb::IMessage<TestCaseFilesMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestCaseFilesMessage> _parser = new pb::MessageParser<TestCaseFilesMessage>(() => new TestCaseFilesMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestCaseFilesMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseMessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseFilesMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseFilesMessage(TestCaseFilesMessage other) : this() {
      testCaseFiles_ = other.testCaseFiles_.Clone();
      createdAndUpdatedInformation_ = other.createdAndUpdatedInformation_ != null ? other.createdAndUpdatedInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseFilesMessage Clone() {
      return new TestCaseFilesMessage(this);
    }

    /// <summary>Field number for the "TestCaseFiles" field.</summary>
    public const int TestCaseFilesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SubCustodyServer.TestCaseFilesMessage.Types.TestCaseFileMessage> _repeated_testCaseFiles_codec
        = pb::FieldCodec.ForMessage(10, global::SubCustodyServer.TestCaseFilesMessage.Types.TestCaseFileMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.TestCaseFilesMessage.Types.TestCaseFileMessage> testCaseFiles_ = new pbc::RepeatedField<global::SubCustodyServer.TestCaseFilesMessage.Types.TestCaseFileMessage>();
    /// <summary>
    /// A list of files that is added to the TestCase, in some way
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.TestCaseFilesMessage.Types.TestCaseFileMessage> TestCaseFiles {
      get { return testCaseFiles_; }
    }

    /// <summary>Field number for the "CreatedAndUpdatedInformation" field.</summary>
    public const int CreatedAndUpdatedInformationFieldNumber = 2;
    private global::SubCustodyServer.TestCaseFilesMessage.Types.CreatedAndUpdatedInformationMessage createdAndUpdatedInformation_;
    /// <summary>
    /// Information regarding who did what and when
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseFilesMessage.Types.CreatedAndUpdatedInformationMessage CreatedAndUpdatedInformation {
      get { return createdAndUpdatedInformation_; }
      set {
        createdAndUpdatedInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestCaseFilesMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestCaseFilesMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!testCaseFiles_.Equals(other.testCaseFiles_)) return false;
      if (!object.Equals(CreatedAndUpdatedInformation, other.CreatedAndUpdatedInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= testCaseFiles_.GetHashCode();
      if (createdAndUpdatedInformation_ != null) hash ^= CreatedAndUpdatedInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      testCaseFiles_.WriteTo(output, _repeated_testCaseFiles_codec);
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      testCaseFiles_.WriteTo(ref output, _repeated_testCaseFiles_codec);
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += testCaseFiles_.CalculateSize(_repeated_testCaseFiles_codec);
      if (createdAndUpdatedInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestCaseFilesMessage other) {
      if (other == null) {
        return;
      }
      testCaseFiles_.Add(other.testCaseFiles_);
      if (other.createdAndUpdatedInformation_ != null) {
        if (createdAndUpdatedInformation_ == null) {
          CreatedAndUpdatedInformation = new global::SubCustodyServer.TestCaseFilesMessage.Types.CreatedAndUpdatedInformationMessage();
        }
        CreatedAndUpdatedInformation.MergeFrom(other.CreatedAndUpdatedInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            testCaseFiles_.AddEntriesFrom(input, _repeated_testCaseFiles_codec);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.TestCaseFilesMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            testCaseFiles_.AddEntriesFrom(ref input, _repeated_testCaseFiles_codec);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.TestCaseFilesMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TestCaseFilesMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding one file and information about who did what and when
      /// </summary>
      public sealed partial class TestCaseFileMessage : pb::IMessage<TestCaseFileMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TestCaseFileMessage> _parser = new pb::MessageParser<TestCaseFileMessage>(() => new TestCaseFileMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TestCaseFileMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.TestCaseFilesMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestCaseFileMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestCaseFileMessage(TestCaseFileMessage other) : this() {
          fileReferenceUuid_ = other.fileReferenceUuid_;
          fileReferenceName_ = other.fileReferenceName_;
          fileAsByteArray_ = other.fileAsByteArray_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestCaseFileMessage Clone() {
          return new TestCaseFileMessage(this);
        }

        /// <summary>Field number for the "FileReferenceUuid" field.</summary>
        public const int FileReferenceUuidFieldNumber = 1;
        private string fileReferenceUuid_ = "";
        /// <summary>
        /// A unique, UUID, for file
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FileReferenceUuid {
          get { return fileReferenceUuid_; }
          set {
            fileReferenceUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "FileReferenceName" field.</summary>
        public const int FileReferenceNameFieldNumber = 2;
        private string fileReferenceName_ = "";
        /// <summary>
        /// A Name, for the file
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FileReferenceName {
          get { return fileReferenceName_; }
          set {
            fileReferenceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "FileAsByteArray" field.</summary>
        public const int FileAsByteArrayFieldNumber = 3;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_fileAsByteArray_codec
            = pb::FieldCodec.ForBytes(26);
        private readonly pbc::RepeatedField<pb::ByteString> fileAsByteArray_ = new pbc::RepeatedField<pb::ByteString>();
        /// <summary>
        /// The file encoded as byte array
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<pb::ByteString> FileAsByteArray {
          get { return fileAsByteArray_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TestCaseFileMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TestCaseFileMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FileReferenceUuid != other.FileReferenceUuid) return false;
          if (FileReferenceName != other.FileReferenceName) return false;
          if(!fileAsByteArray_.Equals(other.fileAsByteArray_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FileReferenceUuid.Length != 0) hash ^= FileReferenceUuid.GetHashCode();
          if (FileReferenceName.Length != 0) hash ^= FileReferenceName.GetHashCode();
          hash ^= fileAsByteArray_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FileReferenceUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FileReferenceUuid);
          }
          if (FileReferenceName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FileReferenceName);
          }
          fileAsByteArray_.WriteTo(output, _repeated_fileAsByteArray_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FileReferenceUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FileReferenceUuid);
          }
          if (FileReferenceName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FileReferenceName);
          }
          fileAsByteArray_.WriteTo(ref output, _repeated_fileAsByteArray_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FileReferenceUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FileReferenceUuid);
          }
          if (FileReferenceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FileReferenceName);
          }
          size += fileAsByteArray_.CalculateSize(_repeated_fileAsByteArray_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TestCaseFileMessage other) {
          if (other == null) {
            return;
          }
          if (other.FileReferenceUuid.Length != 0) {
            FileReferenceUuid = other.FileReferenceUuid;
          }
          if (other.FileReferenceName.Length != 0) {
            FileReferenceName = other.FileReferenceName;
          }
          fileAsByteArray_.Add(other.fileAsByteArray_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                FileReferenceUuid = input.ReadString();
                break;
              }
              case 18: {
                FileReferenceName = input.ReadString();
                break;
              }
              case 26: {
                fileAsByteArray_.AddEntriesFrom(input, _repeated_fileAsByteArray_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                FileReferenceUuid = input.ReadString();
                break;
              }
              case 18: {
                FileReferenceName = input.ReadString();
                break;
              }
              case 26: {
                fileAsByteArray_.AddEntriesFrom(ref input, _repeated_fileAsByteArray_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding information about changes to the File, who and when
      /// </summary>
      public sealed partial class CreatedAndUpdatedInformationMessage : pb::IMessage<CreatedAndUpdatedInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreatedAndUpdatedInformationMessage> _parser = new pb::MessageParser<CreatedAndUpdatedInformationMessage>(() => new CreatedAndUpdatedInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreatedAndUpdatedInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.TestCaseFilesMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage(CreatedAndUpdatedInformationMessage other) : this() {
          addedToTestCaseTimeStamp_ = other.addedToTestCaseTimeStamp_ != null ? other.addedToTestCaseTimeStamp_.Clone() : null;
          addedToTestCaseByUserId_ = other.addedToTestCaseByUserId_;
          lastUpdatedInTestCaseTimeStamp_ = other.lastUpdatedInTestCaseTimeStamp_ != null ? other.lastUpdatedInTestCaseTimeStamp_.Clone() : null;
          lastUpdatedInTestCaseByUserId_ = other.lastUpdatedInTestCaseByUserId_;
          deletedFromTestCaseTimeStamp_ = other.deletedFromTestCaseTimeStamp_ != null ? other.deletedFromTestCaseTimeStamp_.Clone() : null;
          deletedFromTestCaseByUserId_ = other.deletedFromTestCaseByUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage Clone() {
          return new CreatedAndUpdatedInformationMessage(this);
        }

        /// <summary>Field number for the "AddedToTestCaseTimeStamp" field.</summary>
        public const int AddedToTestCaseTimeStampFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp addedToTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the File was first added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp AddedToTestCaseTimeStamp {
          get { return addedToTestCaseTimeStamp_; }
          set {
            addedToTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "AddedToTestCaseByUserId" field.</summary>
        public const int AddedToTestCaseByUserIdFieldNumber = 2;
        private string addedToTestCaseByUserId_ = "";
        /// <summary>
        /// Which user added the File to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AddedToTestCaseByUserId {
          get { return addedToTestCaseByUserId_; }
          set {
            addedToTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseTimeStamp" field.</summary>
        public const int LastUpdatedInTestCaseTimeStampFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdatedInTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the File was updated in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdatedInTestCaseTimeStamp {
          get { return lastUpdatedInTestCaseTimeStamp_; }
          set {
            lastUpdatedInTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseByUserId" field.</summary>
        public const int LastUpdatedInTestCaseByUserIdFieldNumber = 4;
        private string lastUpdatedInTestCaseByUserId_ = "";
        /// <summary>
        /// Which user was the last to update the File in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastUpdatedInTestCaseByUserId {
          get { return lastUpdatedInTestCaseByUserId_; }
          set {
            lastUpdatedInTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseTimeStamp" field.</summary>
        public const int DeletedFromTestCaseTimeStampFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp deletedFromTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the File was deleted from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp DeletedFromTestCaseTimeStamp {
          get { return deletedFromTestCaseTimeStamp_; }
          set {
            deletedFromTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseByUserId" field.</summary>
        public const int DeletedFromTestCaseByUserIdFieldNumber = 6;
        private string deletedFromTestCaseByUserId_ = "";
        /// <summary>
        /// Which user deleted the File from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeletedFromTestCaseByUserId {
          get { return deletedFromTestCaseByUserId_; }
          set {
            deletedFromTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreatedAndUpdatedInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreatedAndUpdatedInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AddedToTestCaseTimeStamp, other.AddedToTestCaseTimeStamp)) return false;
          if (AddedToTestCaseByUserId != other.AddedToTestCaseByUserId) return false;
          if (!object.Equals(LastUpdatedInTestCaseTimeStamp, other.LastUpdatedInTestCaseTimeStamp)) return false;
          if (LastUpdatedInTestCaseByUserId != other.LastUpdatedInTestCaseByUserId) return false;
          if (!object.Equals(DeletedFromTestCaseTimeStamp, other.DeletedFromTestCaseTimeStamp)) return false;
          if (DeletedFromTestCaseByUserId != other.DeletedFromTestCaseByUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (addedToTestCaseTimeStamp_ != null) hash ^= AddedToTestCaseTimeStamp.GetHashCode();
          if (AddedToTestCaseByUserId.Length != 0) hash ^= AddedToTestCaseByUserId.GetHashCode();
          if (lastUpdatedInTestCaseTimeStamp_ != null) hash ^= LastUpdatedInTestCaseTimeStamp.GetHashCode();
          if (LastUpdatedInTestCaseByUserId.Length != 0) hash ^= LastUpdatedInTestCaseByUserId.GetHashCode();
          if (deletedFromTestCaseTimeStamp_ != null) hash ^= DeletedFromTestCaseTimeStamp.GetHashCode();
          if (DeletedFromTestCaseByUserId.Length != 0) hash ^= DeletedFromTestCaseByUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (addedToTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreatedAndUpdatedInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.addedToTestCaseTimeStamp_ != null) {
            if (addedToTestCaseTimeStamp_ == null) {
              AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            AddedToTestCaseTimeStamp.MergeFrom(other.AddedToTestCaseTimeStamp);
          }
          if (other.AddedToTestCaseByUserId.Length != 0) {
            AddedToTestCaseByUserId = other.AddedToTestCaseByUserId;
          }
          if (other.lastUpdatedInTestCaseTimeStamp_ != null) {
            if (lastUpdatedInTestCaseTimeStamp_ == null) {
              LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastUpdatedInTestCaseTimeStamp.MergeFrom(other.LastUpdatedInTestCaseTimeStamp);
          }
          if (other.LastUpdatedInTestCaseByUserId.Length != 0) {
            LastUpdatedInTestCaseByUserId = other.LastUpdatedInTestCaseByUserId;
          }
          if (other.deletedFromTestCaseTimeStamp_ != null) {
            if (deletedFromTestCaseTimeStamp_ == null) {
              DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            DeletedFromTestCaseTimeStamp.MergeFrom(other.DeletedFromTestCaseTimeStamp);
          }
          if (other.DeletedFromTestCaseByUserId.Length != 0) {
            DeletedFromTestCaseByUserId = other.DeletedFromTestCaseByUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
