// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_AvailableMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SubCustodyServer {

  /// <summary>Holder for reflection information generated from FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_AvailableMessages.proto</summary>
  public static partial class FenixTestCaseBuilderServerGrpcApiAvailableMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_AvailableMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FenixTestCaseBuilderServerGrpcApiAvailableMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CnZGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpX0F2YWlsYWJsZU1lc3NhZ2VzLnByb3RvEiFmZW5peFRlc3RDYXNl",
            "QnVpbGRlclNlcnZlckdycGNBcGkafEZlbml4VGVzdENhc2VCdWlsZGVyU2Vy",
            "dmVyL2Zlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS9mZW5peFRl",
            "c3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGlfR2VuZXJhbE1lc3NhZ2VzQW5k",
            "RW51bXMucHJvdG8afEZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyL2Zlbml4",
            "VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS9mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGlfVGVzdEluc3RydWN0aW9uTWVzc2FnZXMucHJv",
            "dG8ahQFGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5peFRlc3RDYXNl",
            "QnVpbGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2",
            "ZXJHcnBjQXBpX1Rlc3RJbnN0cnVjdGlvbkNvbnRhaW5lck1lc3NhZ2VzLnBy",
            "b3RvIvkCCk5BdmFpbGFibGVUZXN0SW5zdHJ1Y3Rpb25zQW5kUHJlQ3JlYXRl",
            "ZFRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lcnNSZXNwb25zZU1lc3NhZ2USYwoY",
            "SW1tYXR1cmVUZXN0SW5zdHJ1Y3Rpb25zGAEgAygLMkEuZmVuaXhUZXN0Q2Fz",
            "ZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLkltbWF0dXJlVGVzdEluc3RydWN0aW9u",
            "TWVzc2FnZRJ1CiFJbW1hdHVyZVRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lcnMY",
            "AiADKAsySi5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuSW1t",
            "YXR1cmVUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJNZXNzYWdlEksKD2Fja05h",
            "Y2tSZXNwb25zZRgDIAEoCzIyLmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVy",
            "R3JwY0FwaS5BY2tOYWNrUmVzcG9uc2UisAMKVEF2YWlsYWJsZVBpbm5lZFRl",
            "c3RJbnN0cnVjdGlvbnNBbmRQcmVDcmVhdGVkVGVzdEluc3RydWN0aW9uQ29u",
            "dGFpbmVyc1Jlc3BvbnNlTWVzc2FnZRJxCh9BdmFpbGFibGVQaW5uZWRUZXN0",
            "SW5zdHJ1Y3Rpb25zGAEgAygLMkguZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2",
            "ZXJHcnBjQXBpLkF2YWlsYWJsZVBpbm5lZFRlc3RJbnN0cnVjdGlvbk1lc3Nh",
            "Z2USlwEKMkF2YWlsYWJsZVBpbm5lZFByZUNyZWF0ZWRUZXN0SW5zdHJ1Y3Rp",
            "b25Db250YWluZXJzGAIgAygLMlsuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2",
            "ZXJHcnBjQXBpLkF2YWlsYWJsZVBpbm5lZFByZUNyZWF0ZWRUZXN0SW5zdHJ1",
            "Y3Rpb25Db250YWluZXJNZXNzYWdlEksKD2Fja05hY2tSZXNwb25zZRgDIAEo",
            "CzIyLmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5BY2tOYWNr",
            "UmVzcG9uc2Ui4AMKR1NhdmVQaW5uZWRUZXN0SW5zdHJ1Y3Rpb25zQW5kUHJl",
            "Q3JlYXRlZFRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lcnNNZXNzYWdlEg4KBlVz",
            "ZXJJZBgBIAEoCRJ4ChxQcm90b0ZpbGVWZXJzaW9uVXNlZEJ5Q2xpZW50GAIg",
            "ASgOMlIuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLkN1cnJl",
            "bnRGZW5peFRlc3RDYXNlQnVpbGRlclByb3RvRmlsZVZlcnNpb25FbnVtEnEK",
            "H0F2YWlsYWJsZVBpbm5lZFRlc3RJbnN0cnVjdGlvbnMYAyADKAsySC5mZW5p",
            "eFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuQXZhaWxhYmxlUGlubmVk",
            "VGVzdEluc3RydWN0aW9uTWVzc2FnZRKXAQoyQXZhaWxhYmxlUGlubmVkUHJl",
            "Q3JlYXRlZFRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lcnMYBCADKAsyWy5mZW5p",
            "eFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuQXZhaWxhYmxlUGlubmVk",
            "UHJlQ3JlYXRlZFRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lck1lc3NhZ2UiYQol",
            "QXZhaWxhYmxlUGlubmVkVGVzdEluc3RydWN0aW9uTWVzc2FnZRIbChNUZXN0",
            "SW5zdHJ1Y3Rpb25VdWlkGAEgASgJEhsKE1Rlc3RJbnN0cnVjdGlvbk5hbWUY",
            "AiABKAkihgEKOEF2YWlsYWJsZVBpbm5lZFByZUNyZWF0ZWRUZXN0SW5zdHJ1",
            "Y3Rpb25Db250YWluZXJNZXNzYWdlEiQKHFRlc3RJbnN0cnVjdGlvbkNvbnRh",
            "aW5lclV1aWQYASABKAkSJAocVGVzdEluc3RydWN0aW9uQ29udGFpbmVyTmFt",
            "ZRgCIAEoCUIiWg0uL2dvX2dycGNfYXBpqgIQU3ViQ3VzdG9keVNlcnZlcmIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiGeneralMessagesAndEnumsReflection.Descriptor, global::FenixTestCaseBuilderServerGrpcApi.FenixTestCaseBuilderServerGrpcApiTestInstructionMessagesReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage), global::SubCustodyServer.AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage.Parser, new[]{ "ImmatureTestInstructions", "ImmatureTestInstructionContainers", "AckNackResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage), global::SubCustodyServer.AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage.Parser, new[]{ "AvailablePinnedTestInstructions", "AvailablePinnedPreCreatedTestInstructionContainers", "AckNackResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage), global::SubCustodyServer.SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient", "AvailablePinnedTestInstructions", "AvailablePinnedPreCreatedTestInstructionContainers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.AvailablePinnedTestInstructionMessage), global::SubCustodyServer.AvailablePinnedTestInstructionMessage.Parser, new[]{ "TestInstructionUuid", "TestInstructionName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage), global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage.Parser, new[]{ "TestInstructionContainerUuid", "TestInstructionContainerName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message holding all supported TestInstructions and Pre-defined TestInstructionContainers that the user can use when building TestCases
  /// </summary>
  public sealed partial class AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage : pb::IMessage<AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage> _parser = new pb::MessageParser<AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage>(() => new AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiAvailableMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage(AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage other) : this() {
      immatureTestInstructions_ = other.immatureTestInstructions_.Clone();
      immatureTestInstructionContainers_ = other.immatureTestInstructionContainers_.Clone();
      ackNackResponse_ = other.ackNackResponse_ != null ? other.ackNackResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage Clone() {
      return new AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage(this);
    }

    /// <summary>Field number for the "ImmatureTestInstructions" field.</summary>
    public const int ImmatureTestInstructionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionMessage> _repeated_immatureTestInstructions_codec
        = pb::FieldCodec.ForMessage(10, global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionMessage.Parser);
    private readonly pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionMessage> immatureTestInstructions_ = new pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionMessage>();
    /// <summary>
    /// List of all TestInstruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::FenixTestCaseBuilderServerGrpcApi.ImmatureTestInstructionMessage> ImmatureTestInstructions {
      get { return immatureTestInstructions_; }
    }

    /// <summary>Field number for the "ImmatureTestInstructionContainers" field.</summary>
    public const int ImmatureTestInstructionContainersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubCustodyServer.ImmatureTestInstructionContainerMessage> _repeated_immatureTestInstructionContainers_codec
        = pb::FieldCodec.ForMessage(18, global::SubCustodyServer.ImmatureTestInstructionContainerMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerMessage> immatureTestInstructionContainers_ = new pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerMessage>();
    /// <summary>
    /// List of all pre-defined TestInstructionContainers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerMessage> ImmatureTestInstructionContainers {
      get { return immatureTestInstructionContainers_; }
    }

    /// <summary>Field number for the "ackNackResponse" field.</summary>
    public const int AckNackResponseFieldNumber = 3;
    private global::SubCustodyServer.AckNackResponse ackNackResponse_;
    /// <summary>
    /// Hold all error messages, if there are any. Message also gives of everything was OK or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.AckNackResponse AckNackResponse {
      get { return ackNackResponse_; }
      set {
        ackNackResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!immatureTestInstructions_.Equals(other.immatureTestInstructions_)) return false;
      if(!immatureTestInstructionContainers_.Equals(other.immatureTestInstructionContainers_)) return false;
      if (!object.Equals(AckNackResponse, other.AckNackResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= immatureTestInstructions_.GetHashCode();
      hash ^= immatureTestInstructionContainers_.GetHashCode();
      if (ackNackResponse_ != null) hash ^= AckNackResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      immatureTestInstructions_.WriteTo(output, _repeated_immatureTestInstructions_codec);
      immatureTestInstructionContainers_.WriteTo(output, _repeated_immatureTestInstructionContainers_codec);
      if (ackNackResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AckNackResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      immatureTestInstructions_.WriteTo(ref output, _repeated_immatureTestInstructions_codec);
      immatureTestInstructionContainers_.WriteTo(ref output, _repeated_immatureTestInstructionContainers_codec);
      if (ackNackResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AckNackResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += immatureTestInstructions_.CalculateSize(_repeated_immatureTestInstructions_codec);
      size += immatureTestInstructionContainers_.CalculateSize(_repeated_immatureTestInstructionContainers_codec);
      if (ackNackResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AckNackResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailableTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage other) {
      if (other == null) {
        return;
      }
      immatureTestInstructions_.Add(other.immatureTestInstructions_);
      immatureTestInstructionContainers_.Add(other.immatureTestInstructionContainers_);
      if (other.ackNackResponse_ != null) {
        if (ackNackResponse_ == null) {
          AckNackResponse = new global::SubCustodyServer.AckNackResponse();
        }
        AckNackResponse.MergeFrom(other.AckNackResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            immatureTestInstructions_.AddEntriesFrom(input, _repeated_immatureTestInstructions_codec);
            break;
          }
          case 18: {
            immatureTestInstructionContainers_.AddEntriesFrom(input, _repeated_immatureTestInstructionContainers_codec);
            break;
          }
          case 26: {
            if (ackNackResponse_ == null) {
              AckNackResponse = new global::SubCustodyServer.AckNackResponse();
            }
            input.ReadMessage(AckNackResponse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            immatureTestInstructions_.AddEntriesFrom(ref input, _repeated_immatureTestInstructions_codec);
            break;
          }
          case 18: {
            immatureTestInstructionContainers_.AddEntriesFrom(ref input, _repeated_immatureTestInstructionContainers_codec);
            break;
          }
          case 26: {
            if (ackNackResponse_ == null) {
              AckNackResponse = new global::SubCustodyServer.AckNackResponse();
            }
            input.ReadMessage(AckNackResponse);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding TestInstructions and Pre-defined TestInstructionContainers that the user has pinned in the GUI
  /// </summary>
  public sealed partial class AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage : pb::IMessage<AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage> _parser = new pb::MessageParser<AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage>(() => new AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiAvailableMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage(AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage other) : this() {
      availablePinnedTestInstructions_ = other.availablePinnedTestInstructions_.Clone();
      availablePinnedPreCreatedTestInstructionContainers_ = other.availablePinnedPreCreatedTestInstructionContainers_.Clone();
      ackNackResponse_ = other.ackNackResponse_ != null ? other.ackNackResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage Clone() {
      return new AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage(this);
    }

    /// <summary>Field number for the "AvailablePinnedTestInstructions" field.</summary>
    public const int AvailablePinnedTestInstructionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SubCustodyServer.AvailablePinnedTestInstructionMessage> _repeated_availablePinnedTestInstructions_codec
        = pb::FieldCodec.ForMessage(10, global::SubCustodyServer.AvailablePinnedTestInstructionMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedTestInstructionMessage> availablePinnedTestInstructions_ = new pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedTestInstructionMessage>();
    /// <summary>
    /// List of all pinned, by user, TestInstructions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedTestInstructionMessage> AvailablePinnedTestInstructions {
      get { return availablePinnedTestInstructions_; }
    }

    /// <summary>Field number for the "AvailablePinnedPreCreatedTestInstructionContainers" field.</summary>
    public const int AvailablePinnedPreCreatedTestInstructionContainersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage> _repeated_availablePinnedPreCreatedTestInstructionContainers_codec
        = pb::FieldCodec.ForMessage(18, global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage> availablePinnedPreCreatedTestInstructionContainers_ = new pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage>();
    /// <summary>
    ///  List of all pinned, by user, pre-defined TestInstructionContainers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage> AvailablePinnedPreCreatedTestInstructionContainers {
      get { return availablePinnedPreCreatedTestInstructionContainers_; }
    }

    /// <summary>Field number for the "ackNackResponse" field.</summary>
    public const int AckNackResponseFieldNumber = 3;
    private global::SubCustodyServer.AckNackResponse ackNackResponse_;
    /// <summary>
    /// Hold all error messages, if there are any. Message also gives of everything was OK or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.AckNackResponse AckNackResponse {
      get { return ackNackResponse_; }
      set {
        ackNackResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availablePinnedTestInstructions_.Equals(other.availablePinnedTestInstructions_)) return false;
      if(!availablePinnedPreCreatedTestInstructionContainers_.Equals(other.availablePinnedPreCreatedTestInstructionContainers_)) return false;
      if (!object.Equals(AckNackResponse, other.AckNackResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availablePinnedTestInstructions_.GetHashCode();
      hash ^= availablePinnedPreCreatedTestInstructionContainers_.GetHashCode();
      if (ackNackResponse_ != null) hash ^= AckNackResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      availablePinnedTestInstructions_.WriteTo(output, _repeated_availablePinnedTestInstructions_codec);
      availablePinnedPreCreatedTestInstructionContainers_.WriteTo(output, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
      if (ackNackResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AckNackResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      availablePinnedTestInstructions_.WriteTo(ref output, _repeated_availablePinnedTestInstructions_codec);
      availablePinnedPreCreatedTestInstructionContainers_.WriteTo(ref output, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
      if (ackNackResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AckNackResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availablePinnedTestInstructions_.CalculateSize(_repeated_availablePinnedTestInstructions_codec);
      size += availablePinnedPreCreatedTestInstructionContainers_.CalculateSize(_repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
      if (ackNackResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AckNackResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailablePinnedTestInstructionsAndPreCreatedTestInstructionContainersResponseMessage other) {
      if (other == null) {
        return;
      }
      availablePinnedTestInstructions_.Add(other.availablePinnedTestInstructions_);
      availablePinnedPreCreatedTestInstructionContainers_.Add(other.availablePinnedPreCreatedTestInstructionContainers_);
      if (other.ackNackResponse_ != null) {
        if (ackNackResponse_ == null) {
          AckNackResponse = new global::SubCustodyServer.AckNackResponse();
        }
        AckNackResponse.MergeFrom(other.AckNackResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            availablePinnedTestInstructions_.AddEntriesFrom(input, _repeated_availablePinnedTestInstructions_codec);
            break;
          }
          case 18: {
            availablePinnedPreCreatedTestInstructionContainers_.AddEntriesFrom(input, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
            break;
          }
          case 26: {
            if (ackNackResponse_ == null) {
              AckNackResponse = new global::SubCustodyServer.AckNackResponse();
            }
            input.ReadMessage(AckNackResponse);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            availablePinnedTestInstructions_.AddEntriesFrom(ref input, _repeated_availablePinnedTestInstructions_codec);
            break;
          }
          case 18: {
            availablePinnedPreCreatedTestInstructionContainers_.AddEntriesFrom(ref input, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
            break;
          }
          case 26: {
            if (ackNackResponse_ == null) {
              AckNackResponse = new global::SubCustodyServer.AckNackResponse();
            }
            input.ReadMessage(AckNackResponse);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding TestInstructions and Pre-defined TestInstructionContainers that the user has pinned in the GUI
  /// </summary>
  public sealed partial class SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage : pb::IMessage<SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage> _parser = new pb::MessageParser<SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage>(() => new SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiAvailableMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage(SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      availablePinnedTestInstructions_ = other.availablePinnedTestInstructions_.Clone();
      availablePinnedPreCreatedTestInstructionContainers_ = other.availablePinnedPreCreatedTestInstructionContainers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage Clone() {
      return new SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    /// <summary>Field number for the "AvailablePinnedTestInstructions" field.</summary>
    public const int AvailablePinnedTestInstructionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SubCustodyServer.AvailablePinnedTestInstructionMessage> _repeated_availablePinnedTestInstructions_codec
        = pb::FieldCodec.ForMessage(26, global::SubCustodyServer.AvailablePinnedTestInstructionMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedTestInstructionMessage> availablePinnedTestInstructions_ = new pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedTestInstructionMessage>();
    /// <summary>
    /// List of all pinned, by user, TestInstructions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedTestInstructionMessage> AvailablePinnedTestInstructions {
      get { return availablePinnedTestInstructions_; }
    }

    /// <summary>Field number for the "AvailablePinnedPreCreatedTestInstructionContainers" field.</summary>
    public const int AvailablePinnedPreCreatedTestInstructionContainersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage> _repeated_availablePinnedPreCreatedTestInstructionContainers_codec
        = pb::FieldCodec.ForMessage(34, global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage> availablePinnedPreCreatedTestInstructionContainers_ = new pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage>();
    /// <summary>
    ///  List of all pinned, by user, pre-defined TestInstructionContainers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.AvailablePinnedPreCreatedTestInstructionContainerMessage> AvailablePinnedPreCreatedTestInstructionContainers {
      get { return availablePinnedPreCreatedTestInstructionContainers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      if(!availablePinnedTestInstructions_.Equals(other.availablePinnedTestInstructions_)) return false;
      if(!availablePinnedPreCreatedTestInstructionContainers_.Equals(other.availablePinnedPreCreatedTestInstructionContainers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      hash ^= availablePinnedTestInstructions_.GetHashCode();
      hash ^= availablePinnedPreCreatedTestInstructionContainers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      availablePinnedTestInstructions_.WriteTo(output, _repeated_availablePinnedTestInstructions_codec);
      availablePinnedPreCreatedTestInstructionContainers_.WriteTo(output, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      availablePinnedTestInstructions_.WriteTo(ref output, _repeated_availablePinnedTestInstructions_codec);
      availablePinnedPreCreatedTestInstructionContainers_.WriteTo(ref output, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      size += availablePinnedTestInstructions_.CalculateSize(_repeated_availablePinnedTestInstructions_codec);
      size += availablePinnedPreCreatedTestInstructionContainers_.CalculateSize(_repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavePinnedTestInstructionsAndPreCreatedTestInstructionContainersMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      availablePinnedTestInstructions_.Add(other.availablePinnedTestInstructions_);
      availablePinnedPreCreatedTestInstructionContainers_.Add(other.availablePinnedPreCreatedTestInstructionContainers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            availablePinnedTestInstructions_.AddEntriesFrom(input, _repeated_availablePinnedTestInstructions_codec);
            break;
          }
          case 34: {
            availablePinnedPreCreatedTestInstructionContainers_.AddEntriesFrom(input, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            availablePinnedTestInstructions_.AddEntriesFrom(ref input, _repeated_availablePinnedTestInstructions_codec);
            break;
          }
          case 34: {
            availablePinnedPreCreatedTestInstructionContainers_.AddEntriesFrom(ref input, _repeated_availablePinnedPreCreatedTestInstructionContainers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding one Pinned TestInstruction
  /// </summary>
  public sealed partial class AvailablePinnedTestInstructionMessage : pb::IMessage<AvailablePinnedTestInstructionMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AvailablePinnedTestInstructionMessage> _parser = new pb::MessageParser<AvailablePinnedTestInstructionMessage>(() => new AvailablePinnedTestInstructionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailablePinnedTestInstructionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiAvailableMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedTestInstructionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedTestInstructionMessage(AvailablePinnedTestInstructionMessage other) : this() {
      testInstructionUuid_ = other.testInstructionUuid_;
      testInstructionName_ = other.testInstructionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedTestInstructionMessage Clone() {
      return new AvailablePinnedTestInstructionMessage(this);
    }

    /// <summary>Field number for the "TestInstructionUuid" field.</summary>
    public const int TestInstructionUuidFieldNumber = 1;
    private string testInstructionUuid_ = "";
    /// <summary>
    /// TestInstruction UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestInstructionUuid {
      get { return testInstructionUuid_; }
      set {
        testInstructionUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestInstructionName" field.</summary>
    public const int TestInstructionNameFieldNumber = 2;
    private string testInstructionName_ = "";
    /// <summary>
    /// TestInstruction Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestInstructionName {
      get { return testInstructionName_; }
      set {
        testInstructionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailablePinnedTestInstructionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailablePinnedTestInstructionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestInstructionUuid != other.TestInstructionUuid) return false;
      if (TestInstructionName != other.TestInstructionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestInstructionUuid.Length != 0) hash ^= TestInstructionUuid.GetHashCode();
      if (TestInstructionName.Length != 0) hash ^= TestInstructionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestInstructionUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestInstructionUuid);
      }
      if (TestInstructionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestInstructionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestInstructionUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestInstructionUuid);
      }
      if (TestInstructionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestInstructionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestInstructionUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionUuid);
      }
      if (TestInstructionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailablePinnedTestInstructionMessage other) {
      if (other == null) {
        return;
      }
      if (other.TestInstructionUuid.Length != 0) {
        TestInstructionUuid = other.TestInstructionUuid;
      }
      if (other.TestInstructionName.Length != 0) {
        TestInstructionName = other.TestInstructionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TestInstructionUuid = input.ReadString();
            break;
          }
          case 18: {
            TestInstructionName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TestInstructionUuid = input.ReadString();
            break;
          }
          case 18: {
            TestInstructionName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding one Pinned TestInstructionContainer
  /// </summary>
  public sealed partial class AvailablePinnedPreCreatedTestInstructionContainerMessage : pb::IMessage<AvailablePinnedPreCreatedTestInstructionContainerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AvailablePinnedPreCreatedTestInstructionContainerMessage> _parser = new pb::MessageParser<AvailablePinnedPreCreatedTestInstructionContainerMessage>(() => new AvailablePinnedPreCreatedTestInstructionContainerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailablePinnedPreCreatedTestInstructionContainerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiAvailableMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedPreCreatedTestInstructionContainerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedPreCreatedTestInstructionContainerMessage(AvailablePinnedPreCreatedTestInstructionContainerMessage other) : this() {
      testInstructionContainerUuid_ = other.testInstructionContainerUuid_;
      testInstructionContainerName_ = other.testInstructionContainerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailablePinnedPreCreatedTestInstructionContainerMessage Clone() {
      return new AvailablePinnedPreCreatedTestInstructionContainerMessage(this);
    }

    /// <summary>Field number for the "TestInstructionContainerUuid" field.</summary>
    public const int TestInstructionContainerUuidFieldNumber = 1;
    private string testInstructionContainerUuid_ = "";
    /// <summary>
    /// TestInstruction UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestInstructionContainerUuid {
      get { return testInstructionContainerUuid_; }
      set {
        testInstructionContainerUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestInstructionContainerName" field.</summary>
    public const int TestInstructionContainerNameFieldNumber = 2;
    private string testInstructionContainerName_ = "";
    /// <summary>
    /// TestInstruction Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestInstructionContainerName {
      get { return testInstructionContainerName_; }
      set {
        testInstructionContainerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailablePinnedPreCreatedTestInstructionContainerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailablePinnedPreCreatedTestInstructionContainerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestInstructionContainerUuid != other.TestInstructionContainerUuid) return false;
      if (TestInstructionContainerName != other.TestInstructionContainerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestInstructionContainerUuid.Length != 0) hash ^= TestInstructionContainerUuid.GetHashCode();
      if (TestInstructionContainerName.Length != 0) hash ^= TestInstructionContainerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestInstructionContainerUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestInstructionContainerUuid);
      }
      if (TestInstructionContainerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestInstructionContainerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestInstructionContainerUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestInstructionContainerUuid);
      }
      if (TestInstructionContainerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TestInstructionContainerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestInstructionContainerUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerUuid);
      }
      if (TestInstructionContainerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailablePinnedPreCreatedTestInstructionContainerMessage other) {
      if (other == null) {
        return;
      }
      if (other.TestInstructionContainerUuid.Length != 0) {
        TestInstructionContainerUuid = other.TestInstructionContainerUuid;
      }
      if (other.TestInstructionContainerName.Length != 0) {
        TestInstructionContainerName = other.TestInstructionContainerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TestInstructionContainerUuid = input.ReadString();
            break;
          }
          case 18: {
            TestInstructionContainerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TestInstructionContainerUuid = input.ReadString();
            break;
          }
          case 18: {
            TestInstructionContainerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
