// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SubCustodyServer {

  /// <summary>Holder for reflection information generated from FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages.proto</summary>
  public static partial class FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CoUBRmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXIvZmVuaXhUZXN0Q2FzZUJ1",
            "aWxkZXJTZXJ2ZXJHcnBjQXBpL2Zlbml4VGVzdENhc2VCdWlsZGVyU2VydmVy",
            "R3JwY0FwaV9UZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJNZXNzYWdlcy5wcm90",
            "bxIhZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvGnxGZW5peFRlc3RDYXNlQnVpbGRl",
            "clNlcnZlci9mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkvZmVu",
            "aXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpX0dlbmVyYWxNZXNzYWdl",
            "c0FuZEVudW1zLnByb3RvGnpGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9m",
            "ZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2Fz",
            "ZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpX1Rlc3RDYXNlTW9kZWxNZXNzYWdlcy5w",
            "cm90byLjAQpBTGlzdEFsbFRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lcnNGb3JT",
            "cGVjaWZpY1Rlc3RDYXNlUmVxdWVzdE1lc3NhZ2USDgoGVXNlcklkGAEgASgJ",
            "EngKHFByb3RvRmlsZVZlcnNpb25Vc2VkQnlDbGllbnQYAiABKA4yUi5mZW5p",
            "eFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuQ3VycmVudEZlbml4VGVz",
            "dENhc2VCdWlsZGVyUHJvdG9GaWxlVmVyc2lvbkVudW0SFAoMVGVzdENhc2VV",
            "dWlkGAMgASgJItYCCkFTYXZlQWxsVGVzdEluc3RydWN0aW9uQ29udGFpbmVy",
            "c0ZvclNwZWNpZmljVGVzdENhc2VSZXF1ZXN0TWVzc2FnZRIOCgZVc2VySWQY",
            "ASABKAkSeAocUHJvdG9GaWxlVmVyc2lvblVzZWRCeUNsaWVudBgCIAEoDjJS",
            "LmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5DdXJyZW50RmVu",
            "aXhUZXN0Q2FzZUJ1aWxkZXJQcm90b0ZpbGVWZXJzaW9uRW51bRIUCgxUZXN0",
            "Q2FzZVV1aWQYAyABKAkScQofTWF0dXJlVGVzdEluc3RydWN0aW9uQ29udGFp",
            "bmVycxgEIAMoCzJILmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0Fw",
            "aS5NYXR1cmVUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJNZXNzYWdlIp8DCidJ",
            "bW1hdHVyZVRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lck1lc3NhZ2UShAEKKEJh",
            "c2ljVGVzdEluc3RydWN0aW9uQ29udGFpbmVySW5mb3JtYXRpb24YASABKAsy",
            "Ui5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuQmFzaWNUZXN0",
            "SW5zdHJ1Y3Rpb25Db250YWluZXJJbmZvcm1hdGlvbk1lc3NhZ2USigEKK0lt",
            "bWF0dXJlVGVzdEluc3RydWN0aW9uQ29udGFpbmVySW5mb3JtYXRpb24YAiAB",
            "KAsyVS5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuSW1tYXR1",
            "cmVUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJJbmZvcm1hdGlvbk1lc3NhZ2US",
            "YAoYSW1tYXR1cmVTdWJUZXN0Q2FzZU1vZGVsGAMgASgLMj4uZmVuaXhUZXN0",
            "Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLkltbWF0dXJlRWxlbWVudE1vZGVs",
            "TWVzc2FnZSK3AgolTWF0dXJlVGVzdEluc3RydWN0aW9uQ29udGFpbmVyTWVz",
            "c2FnZRKEAQooQmFzaWNUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJJbmZvcm1h",
            "dGlvbhgBIAEoCzJSLmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0Fw",
            "aS5CYXNpY1Rlc3RJbnN0cnVjdGlvbkNvbnRhaW5lckluZm9ybWF0aW9uTWVz",
            "c2FnZRKGAQopTWF0dXJlVGVzdEluc3RydWN0aW9uQ29udGFpbmVySW5mb3Jt",
            "YXRpb24YAiABKAsyUy5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNB",
            "cGkuTWF0dXJlVGVzdEluc3RydWN0aW9uQ29udGFpbmVySW5mb3JtYXRpb25N",
            "ZXNzYWdlItsLCi9CYXNpY1Rlc3RJbnN0cnVjdGlvbkNvbnRhaW5lckluZm9y",
            "bWF0aW9uTWVzc2FnZRKVAQoWTm9uRWRpdGFibGVJbmZvcm1hdGlvbhgBIAEo",
            "CzJ1LmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5CYXNpY1Rl",
            "c3RJbnN0cnVjdGlvbkNvbnRhaW5lckluZm9ybWF0aW9uTWVzc2FnZS5Ob25F",
            "ZGl0YWJsZUJhc2ljSW5mb3JtYXRpb25NZXNzYWdlEo8BChNFZGl0YWJsZUlu",
            "Zm9ybWF0aW9uGAIgASgLMnIuZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpLkJhc2ljVGVzdEluc3RydWN0aW9uQ29udGFpbmVySW5mb3JtYXRp",
            "b25NZXNzYWdlLkVkaXRhYmxlQmFzaWNJbmZvcm1hdGlvbk1lc3NhZ2USlgEK",
            "GUludmlzaWJsZUJhc2ljSW5mb3JtYXRpb24YAyABKAsycy5mZW5peFRlc3RD",
            "YXNlQnVpbGRlclNlcnZlckdycGNBcGkuQmFzaWNUZXN0SW5zdHJ1Y3Rpb25D",
            "b250YWluZXJJbmZvcm1hdGlvbk1lc3NhZ2UuSW52aXNpYmxlQmFzaWNJbmZv",
            "cm1hdGlvbk1lc3NhZ2USuQEKKkVkaXRhYmxlVGVzdEluc3RydWN0aW9uQ29u",
            "dGFpbmVyQXR0cmlidXRlcxgEIAEoCzKEAS5mZW5peFRlc3RDYXNlQnVpbGRl",
            "clNlcnZlckdycGNBcGkuQmFzaWNUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJJ",
            "bmZvcm1hdGlvbk1lc3NhZ2UuRWRpdGFibGVUZXN0SW5zdHJ1Y3Rpb25Db250",
            "YWluZXJBdHRyaWJ1dGVzTWVzc2FnZRrBAwoiTm9uRWRpdGFibGVCYXNpY0lu",
            "Zm9ybWF0aW9uTWVzc2FnZRISCgpEb21haW5VdWlkGAEgASgJEhIKCkRvbWFp",
            "bk5hbWUYAiABKAkSJAocVGVzdEluc3RydWN0aW9uQ29udGFpbmVyVXVpZBgD",
            "IAEoCRIkChxUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJOYW1lGAQgASgJEigK",
            "IFRlc3RJbnN0cnVjdGlvbkNvbnRhaW5lclR5cGVVdWlkGAUgASgJEigKIFRl",
            "c3RJbnN0cnVjdGlvbkNvbnRhaW5lclR5cGVOYW1lGAYgASgJEhIKCkRlcHJl",
            "Y2F0ZWQYByABKAgSGgoSTWFqb3JWZXJzaW9uTnVtYmVyGAggASgNEhoKEk1p",
            "bm9yVmVyc2lvbk51bWJlchgJIAEoDRI0ChBVcGRhdGVkVGltZVN0YW1wGAog",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIlCh1UZXN0SW5zdHJ1",
            "Y3Rpb25Db250YWluZXJDb2xvchgLIAEoCRIWCg5UQ1J1bGVEZWxldGlvbhgO",
            "IAEoCRISCgpUQ1J1bGVTd2FwGA8gASgJGn0KH0VkaXRhYmxlQmFzaWNJbmZv",
            "cm1hdGlvbk1lc3NhZ2USKwojVGVzdEluc3RydWN0aW9uQ29udGFpbmVyRGVz",
            "Y3JpcHRpb24YByABKAkSLQolVGVzdEluc3RydWN0aW9uQ29udGFpbmVyTW91",
            "c2VPdmVyVGV4dBgIIAEoCRozCiBJbnZpc2libGVCYXNpY0luZm9ybWF0aW9u",
            "TWVzc2FnZRIPCgdFbmFibGVkGAogASgIGrABCjFFZGl0YWJsZVRlc3RJbnN0",
            "cnVjdGlvbkNvbnRhaW5lckF0dHJpYnV0ZXNNZXNzYWdlEnsKJVRlc3RJbnN0",
            "cnVjdGlvbkNvbnRhaW5lckV4ZWN1dGlvblR5cGUYASABKA4yTC5mZW5peFRl",
            "c3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuVGVzdEluc3RydWN0aW9uQ29u",
            "dGFpbmVyRXhlY3V0aW9uVHlwZUVudW0izwYKMkltbWF0dXJlVGVzdEluc3Ry",
            "dWN0aW9uQ29udGFpbmVySW5mb3JtYXRpb25NZXNzYWdlEooBChJBdmFpbGFi",
            "bGVEcm9wWm9uZXMYEiADKAsybi5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZl",
            "ckdycGNBcGkuSW1tYXR1cmVUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJJbmZv",
            "cm1hdGlvbk1lc3NhZ2UuQXZhaWxhYmxlRHJvcFpvbmVNZXNzYWdlGosFChhB",
            "dmFpbGFibGVEcm9wWm9uZU1lc3NhZ2USFAoMRHJvcFpvbmVVdWlkGAEgASgJ",
            "EhQKDERyb3Bab25lTmFtZRgCIAEoCRIbChNEcm9wWm9uZURlc2NyaXB0aW9u",
            "GAMgASgJEhkKEURyb3Bab25lTW91c2VPdmVyGAQgASgJEhUKDURyb3Bab25l",
            "Q29sb3IYBSABKAkSzgEKJ0Ryb3Bab25lUHJlU2V0VGVzdEluc3RydWN0aW9u",
            "QXR0cmlidXRlcxgGIAMoCzKcAS5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZl",
            "ckdycGNBcGkuSW1tYXR1cmVUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJJbmZv",
            "cm1hdGlvbk1lc3NhZ2UuQXZhaWxhYmxlRHJvcFpvbmVNZXNzYWdlLkRyb3Ba",
            "b25lUHJlU2V0VGVzdEluc3RydWN0aW9uQXR0cmlidXRlTWVzc2FnZRqiAgot",
            "RHJvcFpvbmVQcmVTZXRUZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1dGVNZXNzYWdl",
            "EmkKHFRlc3RJbnN0cnVjdGlvbkF0dHJpYnV0ZVR5cGUYASABKA4yQy5mZW5p",
            "eFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkuVGVzdEluc3RydWN0aW9u",
            "QXR0cmlidXRlVHlwZUVudW0SJAocVGVzdEluc3RydWN0aW9uQXR0cmlidXRl",
            "VXVpZBgCIAEoCRIkChxUZXN0SW5zdHJ1Y3Rpb25BdHRyaWJ1dGVOYW1lGAMg",
            "ASgJEh4KFkF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcYBCABKAkSGgoSQXR0cmli",
            "dXRlVmFsdWVVdWlkGAUgASgJItAGCjBNYXR1cmVUZXN0SW5zdHJ1Y3Rpb25D",
            "b250YWluZXJJbmZvcm1hdGlvbk1lc3NhZ2USsAEKJU1hdHVyZUJhc2ljVGVz",
            "dEluc3RydWN0aW9uSW5mb3JtYXRpb24YASABKAsygAEuZmVuaXhUZXN0Q2Fz",
            "ZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLk1hdHVyZVRlc3RJbnN0cnVjdGlvbkNv",
            "bnRhaW5lckluZm9ybWF0aW9uTWVzc2FnZS5NYXR1cmVCYXNpY1Rlc3RJbnN0",
            "cnVjdGlvbkluZm9ybWF0aW9uTWVzc2FnZRKdAQocQ3JlYXRlZEFuZFVwZGF0",
            "ZWRJbmZvcm1hdGlvbhgCIAEoCzJ3LmZlbml4VGVzdENhc2VCdWlsZGVyU2Vy",
            "dmVyR3JwY0FwaS5NYXR1cmVUZXN0SW5zdHJ1Y3Rpb25Db250YWluZXJJbmZv",
            "cm1hdGlvbk1lc3NhZ2UuQ3JlYXRlZEFuZFVwZGF0ZWRJbmZvcm1hdGlvbk1l",
            "c3NhZ2UacAosTWF0dXJlQmFzaWNUZXN0SW5zdHJ1Y3Rpb25JbmZvcm1hdGlv",
            "bk1lc3NhZ2USFAoMVGVzdENhc2VVdWlkGAEgASgJEioKIlRlc3RJbnN0cnVj",
            "dGlvbkNvbnRhaW5lck1hdHVyZVV1aWQYAiABKAka1gIKI0NyZWF0ZWRBbmRV",
            "cGRhdGVkSW5mb3JtYXRpb25NZXNzYWdlEjwKGEFkZGVkVG9UZXN0Q2FzZVRp",
            "bWVTdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASHwoX",
            "QWRkZWRUb1Rlc3RDYXNlQnlVc2VySWQYAiABKAkSQgoeTGFzdFVwZGF0ZWRJ",
            "blRlc3RDYXNlVGltZVN0YW1wGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIlCh1MYXN0VXBkYXRlZEluVGVzdENhc2VCeVVzZXJJZBgEIAEo",
            "CRJAChxEZWxldGVkRnJvbVRlc3RDYXNlVGltZVN0YW1wGAUgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBIjChtEZWxldGVkRnJvbVRlc3RDYXNl",
            "QnlVc2VySWQYBiABKAlCIloNLi9nb19ncnBjX2FwaaoCEFN1YkN1c3RvZHlT",
            "ZXJ2ZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiGeneralMessagesAndEnumsReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ListAllTestInstructionContainersForSpecificTestCaseRequestMessage), global::SubCustodyServer.ListAllTestInstructionContainersForSpecificTestCaseRequestMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient", "TestCaseUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage), global::SubCustodyServer.SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage.Parser, new[]{ "UserId", "ProtoFileVersionUsedByClient", "TestCaseUuid", "MatureTestInstructionContainers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureTestInstructionContainerMessage), global::SubCustodyServer.ImmatureTestInstructionContainerMessage.Parser, new[]{ "BasicTestInstructionContainerInformation", "ImmatureTestInstructionContainerInformation", "ImmatureSubTestCaseModel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureTestInstructionContainerMessage), global::SubCustodyServer.MatureTestInstructionContainerMessage.Parser, new[]{ "BasicTestInstructionContainerInformation", "MatureTestInstructionContainerInformation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestInstructionContainerInformationMessage), global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Parser, new[]{ "NonEditableInformation", "EditableInformation", "InvisibleBasicInformation", "EditableTestInstructionContainerAttributes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.NonEditableBasicInformationMessage), global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.NonEditableBasicInformationMessage.Parser, new[]{ "DomainUuid", "DomainName", "TestInstructionContainerUuid", "TestInstructionContainerName", "TestInstructionContainerTypeUuid", "TestInstructionContainerTypeName", "Deprecated", "MajorVersionNumber", "MinorVersionNumber", "UpdatedTimeStamp", "TestInstructionContainerColor", "TCRuleDeletion", "TCRuleSwap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableBasicInformationMessage), global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableBasicInformationMessage.Parser, new[]{ "TestInstructionContainerDescription", "TestInstructionContainerMouseOverText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.InvisibleBasicInformationMessage), global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.InvisibleBasicInformationMessage.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableTestInstructionContainerAttributesMessage), global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableTestInstructionContainerAttributesMessage.Parser, new[]{ "TestInstructionContainerExecutionType" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage), global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Parser, new[]{ "AvailableDropZones" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage), global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Parser, new[]{ "DropZoneUuid", "DropZoneName", "DropZoneDescription", "DropZoneMouseOver", "DropZoneColor", "DropZonePreSetTestInstructionAttributes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage), global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage.Parser, new[]{ "TestInstructionAttributeType", "TestInstructionAttributeUuid", "TestInstructionAttributeName", "AttributeValueAsString", "AttributeValueUuid" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureTestInstructionContainerInformationMessage), global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Parser, new[]{ "MatureBasicTestInstructionInformation", "CreatedAndUpdatedInformation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.MatureBasicTestInstructionInformationMessage), global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.MatureBasicTestInstructionInformationMessage.Parser, new[]{ "TestCaseUuid", "TestInstructionContainerMatureUuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.CreatedAndUpdatedInformationMessage), global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.CreatedAndUpdatedInformationMessage.Parser, new[]{ "AddedToTestCaseTimeStamp", "AddedToTestCaseByUserId", "LastUpdatedInTestCaseTimeStamp", "LastUpdatedInTestCaseByUserId", "DeletedFromTestCaseTimeStamp", "DeletedFromTestCaseByUserId" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message holding information about who is the user and which TestCase that the TestInstructionContainers belong to
  /// </summary>
  public sealed partial class ListAllTestInstructionContainersForSpecificTestCaseRequestMessage : pb::IMessage<ListAllTestInstructionContainersForSpecificTestCaseRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListAllTestInstructionContainersForSpecificTestCaseRequestMessage> _parser = new pb::MessageParser<ListAllTestInstructionContainersForSpecificTestCaseRequestMessage>(() => new ListAllTestInstructionContainersForSpecificTestCaseRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAllTestInstructionContainersForSpecificTestCaseRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAllTestInstructionContainersForSpecificTestCaseRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAllTestInstructionContainersForSpecificTestCaseRequestMessage(ListAllTestInstructionContainersForSpecificTestCaseRequestMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      testCaseUuid_ = other.testCaseUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAllTestInstructionContainersForSpecificTestCaseRequestMessage Clone() {
      return new ListAllTestInstructionContainersForSpecificTestCaseRequestMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseUuid" field.</summary>
    public const int TestCaseUuidFieldNumber = 3;
    private string testCaseUuid_ = "";
    /// <summary>
    /// The TestCase, UUID, that is TestInstructionContainers belong to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestCaseUuid {
      get { return testCaseUuid_; }
      set {
        testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAllTestInstructionContainersForSpecificTestCaseRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAllTestInstructionContainersForSpecificTestCaseRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      if (TestCaseUuid != other.TestCaseUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAllTestInstructionContainersForSpecificTestCaseRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      if (other.TestCaseUuid.Length != 0) {
        TestCaseUuid = other.TestCaseUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding information about user, TestCaseUUID and the TestInstructions
  /// </summary>
  public sealed partial class SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage : pb::IMessage<SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage> _parser = new pb::MessageParser<SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage>(() => new SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage(SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage other) : this() {
      userId_ = other.userId_;
      protoFileVersionUsedByClient_ = other.protoFileVersionUsedByClient_;
      testCaseUuid_ = other.testCaseUuid_;
      matureTestInstructionContainers_ = other.matureTestInstructionContainers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage Clone() {
      return new SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    /// The Users Id, SEB S-id will be used for SEB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProtoFileVersionUsedByClient" field.</summary>
    public const int ProtoFileVersionUsedByClientFieldNumber = 2;
    private global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum protoFileVersionUsedByClient_ = global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00;
    /// <summary>
    /// The latest proto file version number to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient {
      get { return protoFileVersionUsedByClient_; }
      set {
        protoFileVersionUsedByClient_ = value;
      }
    }

    /// <summary>Field number for the "TestCaseUuid" field.</summary>
    public const int TestCaseUuidFieldNumber = 3;
    private string testCaseUuid_ = "";
    /// <summary>
    /// The TestCase, UUID, that is TestInstructions belong to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestCaseUuid {
      get { return testCaseUuid_; }
      set {
        testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MatureTestInstructionContainers" field.</summary>
    public const int MatureTestInstructionContainersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SubCustodyServer.MatureTestInstructionContainerMessage> _repeated_matureTestInstructionContainers_codec
        = pb::FieldCodec.ForMessage(34, global::SubCustodyServer.MatureTestInstructionContainerMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.MatureTestInstructionContainerMessage> matureTestInstructionContainers_ = new pbc::RepeatedField<global::SubCustodyServer.MatureTestInstructionContainerMessage>();
    /// <summary>
    /// All TestInstructionContainers to be saved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.MatureTestInstructionContainerMessage> MatureTestInstructionContainers {
      get { return matureTestInstructionContainers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (ProtoFileVersionUsedByClient != other.ProtoFileVersionUsedByClient) return false;
      if (TestCaseUuid != other.TestCaseUuid) return false;
      if(!matureTestInstructionContainers_.Equals(other.matureTestInstructionContainers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) hash ^= ProtoFileVersionUsedByClient.GetHashCode();
      if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
      hash ^= matureTestInstructionContainers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      matureTestInstructionContainers_.WriteTo(output, _repeated_matureTestInstructionContainers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestCaseUuid);
      }
      matureTestInstructionContainers_.WriteTo(ref output, _repeated_matureTestInstructionContainers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtoFileVersionUsedByClient);
      }
      if (TestCaseUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
      }
      size += matureTestInstructionContainers_.CalculateSize(_repeated_matureTestInstructionContainers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveAllTestInstructionContainersForSpecificTestCaseRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ProtoFileVersionUsedByClient != global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum.Version00) {
        ProtoFileVersionUsedByClient = other.ProtoFileVersionUsedByClient;
      }
      if (other.TestCaseUuid.Length != 0) {
        TestCaseUuid = other.TestCaseUuid;
      }
      matureTestInstructionContainers_.Add(other.matureTestInstructionContainers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
          case 34: {
            matureTestInstructionContainers_.AddEntriesFrom(input, _repeated_matureTestInstructionContainers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            ProtoFileVersionUsedByClient = (global::SubCustodyServer.CurrentFenixTestCaseBuilderProtoFileVersionEnum) input.ReadEnum();
            break;
          }
          case 26: {
            TestCaseUuid = input.ReadString();
            break;
          }
          case 34: {
            matureTestInstructionContainers_.AddEntriesFrom(ref input, _repeated_matureTestInstructionContainers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding one Immature TestInstruction which is Dragged n Dropped into the TestCase
  /// </summary>
  public sealed partial class ImmatureTestInstructionContainerMessage : pb::IMessage<ImmatureTestInstructionContainerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmatureTestInstructionContainerMessage> _parser = new pb::MessageParser<ImmatureTestInstructionContainerMessage>(() => new ImmatureTestInstructionContainerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImmatureTestInstructionContainerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionContainerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionContainerMessage(ImmatureTestInstructionContainerMessage other) : this() {
      basicTestInstructionContainerInformation_ = other.basicTestInstructionContainerInformation_ != null ? other.basicTestInstructionContainerInformation_.Clone() : null;
      immatureTestInstructionContainerInformation_ = other.immatureTestInstructionContainerInformation_ != null ? other.immatureTestInstructionContainerInformation_.Clone() : null;
      immatureSubTestCaseModel_ = other.immatureSubTestCaseModel_ != null ? other.immatureSubTestCaseModel_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionContainerMessage Clone() {
      return new ImmatureTestInstructionContainerMessage(this);
    }

    /// <summary>Field number for the "BasicTestInstructionContainerInformation" field.</summary>
    public const int BasicTestInstructionContainerInformationFieldNumber = 1;
    private global::SubCustodyServer.BasicTestInstructionContainerInformationMessage basicTestInstructionContainerInformation_;
    /// <summary>
    /// Data is used to describe the basic information for the TestInstructionContainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestInstructionContainerInformationMessage BasicTestInstructionContainerInformation {
      get { return basicTestInstructionContainerInformation_; }
      set {
        basicTestInstructionContainerInformation_ = value;
      }
    }

    /// <summary>Field number for the "ImmatureTestInstructionContainerInformation" field.</summary>
    public const int ImmatureTestInstructionContainerInformationFieldNumber = 2;
    private global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage immatureTestInstructionContainerInformation_;
    /// <summary>
    /// The immature information for the TestInstructionContainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage ImmatureTestInstructionContainerInformation {
      get { return immatureTestInstructionContainerInformation_; }
      set {
        immatureTestInstructionContainerInformation_ = value;
      }
    }

    /// <summary>Field number for the "ImmatureSubTestCaseModel" field.</summary>
    public const int ImmatureSubTestCaseModelFieldNumber = 3;
    private global::SubCustodyServer.ImmatureElementModelMessage immatureSubTestCaseModel_;
    /// <summary>
    /// The immature element model for this TestInstructionContainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.ImmatureElementModelMessage ImmatureSubTestCaseModel {
      get { return immatureSubTestCaseModel_; }
      set {
        immatureSubTestCaseModel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImmatureTestInstructionContainerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImmatureTestInstructionContainerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicTestInstructionContainerInformation, other.BasicTestInstructionContainerInformation)) return false;
      if (!object.Equals(ImmatureTestInstructionContainerInformation, other.ImmatureTestInstructionContainerInformation)) return false;
      if (!object.Equals(ImmatureSubTestCaseModel, other.ImmatureSubTestCaseModel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (basicTestInstructionContainerInformation_ != null) hash ^= BasicTestInstructionContainerInformation.GetHashCode();
      if (immatureTestInstructionContainerInformation_ != null) hash ^= ImmatureTestInstructionContainerInformation.GetHashCode();
      if (immatureSubTestCaseModel_ != null) hash ^= ImmatureSubTestCaseModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (basicTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestInstructionContainerInformation);
      }
      if (immatureTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ImmatureTestInstructionContainerInformation);
      }
      if (immatureSubTestCaseModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ImmatureSubTestCaseModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (basicTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestInstructionContainerInformation);
      }
      if (immatureTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ImmatureTestInstructionContainerInformation);
      }
      if (immatureSubTestCaseModel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ImmatureSubTestCaseModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (basicTestInstructionContainerInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicTestInstructionContainerInformation);
      }
      if (immatureTestInstructionContainerInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImmatureTestInstructionContainerInformation);
      }
      if (immatureSubTestCaseModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImmatureSubTestCaseModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImmatureTestInstructionContainerMessage other) {
      if (other == null) {
        return;
      }
      if (other.basicTestInstructionContainerInformation_ != null) {
        if (basicTestInstructionContainerInformation_ == null) {
          BasicTestInstructionContainerInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage();
        }
        BasicTestInstructionContainerInformation.MergeFrom(other.BasicTestInstructionContainerInformation);
      }
      if (other.immatureTestInstructionContainerInformation_ != null) {
        if (immatureTestInstructionContainerInformation_ == null) {
          ImmatureTestInstructionContainerInformation = new global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage();
        }
        ImmatureTestInstructionContainerInformation.MergeFrom(other.ImmatureTestInstructionContainerInformation);
      }
      if (other.immatureSubTestCaseModel_ != null) {
        if (immatureSubTestCaseModel_ == null) {
          ImmatureSubTestCaseModel = new global::SubCustodyServer.ImmatureElementModelMessage();
        }
        ImmatureSubTestCaseModel.MergeFrom(other.ImmatureSubTestCaseModel);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicTestInstructionContainerInformation_ == null) {
              BasicTestInstructionContainerInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(BasicTestInstructionContainerInformation);
            break;
          }
          case 18: {
            if (immatureTestInstructionContainerInformation_ == null) {
              ImmatureTestInstructionContainerInformation = new global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(ImmatureTestInstructionContainerInformation);
            break;
          }
          case 26: {
            if (immatureSubTestCaseModel_ == null) {
              ImmatureSubTestCaseModel = new global::SubCustodyServer.ImmatureElementModelMessage();
            }
            input.ReadMessage(ImmatureSubTestCaseModel);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (basicTestInstructionContainerInformation_ == null) {
              BasicTestInstructionContainerInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(BasicTestInstructionContainerInformation);
            break;
          }
          case 18: {
            if (immatureTestInstructionContainerInformation_ == null) {
              ImmatureTestInstructionContainerInformation = new global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(ImmatureTestInstructionContainerInformation);
            break;
          }
          case 26: {
            if (immatureSubTestCaseModel_ == null) {
              ImmatureSubTestCaseModel = new global::SubCustodyServer.ImmatureElementModelMessage();
            }
            input.ReadMessage(ImmatureSubTestCaseModel);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding one Mature TestInstruction which exist in a TestCase
  /// </summary>
  public sealed partial class MatureTestInstructionContainerMessage : pb::IMessage<MatureTestInstructionContainerMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatureTestInstructionContainerMessage> _parser = new pb::MessageParser<MatureTestInstructionContainerMessage>(() => new MatureTestInstructionContainerMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatureTestInstructionContainerMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionContainerMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionContainerMessage(MatureTestInstructionContainerMessage other) : this() {
      basicTestInstructionContainerInformation_ = other.basicTestInstructionContainerInformation_ != null ? other.basicTestInstructionContainerInformation_.Clone() : null;
      matureTestInstructionContainerInformation_ = other.matureTestInstructionContainerInformation_ != null ? other.matureTestInstructionContainerInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionContainerMessage Clone() {
      return new MatureTestInstructionContainerMessage(this);
    }

    /// <summary>Field number for the "BasicTestInstructionContainerInformation" field.</summary>
    public const int BasicTestInstructionContainerInformationFieldNumber = 1;
    private global::SubCustodyServer.BasicTestInstructionContainerInformationMessage basicTestInstructionContainerInformation_;
    /// <summary>
    ///Data is used to describe the basic information for the TestInstructionContainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestInstructionContainerInformationMessage BasicTestInstructionContainerInformation {
      get { return basicTestInstructionContainerInformation_; }
      set {
        basicTestInstructionContainerInformation_ = value;
      }
    }

    /// <summary>Field number for the "MatureTestInstructionContainerInformation" field.</summary>
    public const int MatureTestInstructionContainerInformationFieldNumber = 2;
    private global::SubCustodyServer.MatureTestInstructionContainerInformationMessage matureTestInstructionContainerInformation_;
    /// <summary>
    /// Information about the Mature TestInstructionContainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.MatureTestInstructionContainerInformationMessage MatureTestInstructionContainerInformation {
      get { return matureTestInstructionContainerInformation_; }
      set {
        matureTestInstructionContainerInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatureTestInstructionContainerMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatureTestInstructionContainerMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicTestInstructionContainerInformation, other.BasicTestInstructionContainerInformation)) return false;
      if (!object.Equals(MatureTestInstructionContainerInformation, other.MatureTestInstructionContainerInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (basicTestInstructionContainerInformation_ != null) hash ^= BasicTestInstructionContainerInformation.GetHashCode();
      if (matureTestInstructionContainerInformation_ != null) hash ^= MatureTestInstructionContainerInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (basicTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestInstructionContainerInformation);
      }
      if (matureTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MatureTestInstructionContainerInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (basicTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicTestInstructionContainerInformation);
      }
      if (matureTestInstructionContainerInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MatureTestInstructionContainerInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (basicTestInstructionContainerInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicTestInstructionContainerInformation);
      }
      if (matureTestInstructionContainerInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatureTestInstructionContainerInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatureTestInstructionContainerMessage other) {
      if (other == null) {
        return;
      }
      if (other.basicTestInstructionContainerInformation_ != null) {
        if (basicTestInstructionContainerInformation_ == null) {
          BasicTestInstructionContainerInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage();
        }
        BasicTestInstructionContainerInformation.MergeFrom(other.BasicTestInstructionContainerInformation);
      }
      if (other.matureTestInstructionContainerInformation_ != null) {
        if (matureTestInstructionContainerInformation_ == null) {
          MatureTestInstructionContainerInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage();
        }
        MatureTestInstructionContainerInformation.MergeFrom(other.MatureTestInstructionContainerInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicTestInstructionContainerInformation_ == null) {
              BasicTestInstructionContainerInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(BasicTestInstructionContainerInformation);
            break;
          }
          case 18: {
            if (matureTestInstructionContainerInformation_ == null) {
              MatureTestInstructionContainerInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(MatureTestInstructionContainerInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (basicTestInstructionContainerInformation_ == null) {
              BasicTestInstructionContainerInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(BasicTestInstructionContainerInformation);
            break;
          }
          case 18: {
            if (matureTestInstructionContainerInformation_ == null) {
              MatureTestInstructionContainerInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage();
            }
            input.ReadMessage(MatureTestInstructionContainerInformation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message holding Basic information for one TestInstructionContainer
  /// </summary>
  public sealed partial class BasicTestInstructionContainerInformationMessage : pb::IMessage<BasicTestInstructionContainerInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BasicTestInstructionContainerInformationMessage> _parser = new pb::MessageParser<BasicTestInstructionContainerInformationMessage>(() => new BasicTestInstructionContainerInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicTestInstructionContainerInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestInstructionContainerInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestInstructionContainerInformationMessage(BasicTestInstructionContainerInformationMessage other) : this() {
      nonEditableInformation_ = other.nonEditableInformation_ != null ? other.nonEditableInformation_.Clone() : null;
      editableInformation_ = other.editableInformation_ != null ? other.editableInformation_.Clone() : null;
      invisibleBasicInformation_ = other.invisibleBasicInformation_ != null ? other.invisibleBasicInformation_.Clone() : null;
      editableTestInstructionContainerAttributes_ = other.editableTestInstructionContainerAttributes_ != null ? other.editableTestInstructionContainerAttributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicTestInstructionContainerInformationMessage Clone() {
      return new BasicTestInstructionContainerInformationMessage(this);
    }

    /// <summary>Field number for the "NonEditableInformation" field.</summary>
    public const int NonEditableInformationFieldNumber = 1;
    private global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.NonEditableBasicInformationMessage nonEditableInformation_;
    /// <summary>
    /// All Basic information that can be shown in GUI but can't be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.NonEditableBasicInformationMessage NonEditableInformation {
      get { return nonEditableInformation_; }
      set {
        nonEditableInformation_ = value;
      }
    }

    /// <summary>Field number for the "EditableInformation" field.</summary>
    public const int EditableInformationFieldNumber = 2;
    private global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableBasicInformationMessage editableInformation_;
    /// <summary>
    /// All Basic information that can be shown in GUI and can be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableBasicInformationMessage EditableInformation {
      get { return editableInformation_; }
      set {
        editableInformation_ = value;
      }
    }

    /// <summary>Field number for the "InvisibleBasicInformation" field.</summary>
    public const int InvisibleBasicInformationFieldNumber = 3;
    private global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.InvisibleBasicInformationMessage invisibleBasicInformation_;
    /// <summary>
    /// All Basic information that is not directly shown in GUI and can't be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.InvisibleBasicInformationMessage InvisibleBasicInformation {
      get { return invisibleBasicInformation_; }
      set {
        invisibleBasicInformation_ = value;
      }
    }

    /// <summary>Field number for the "EditableTestInstructionContainerAttributes" field.</summary>
    public const int EditableTestInstructionContainerAttributesFieldNumber = 4;
    private global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableTestInstructionContainerAttributesMessage editableTestInstructionContainerAttributes_;
    /// <summary>
    /// All attributes supported by a TestInstructionContainer, can be changed by the user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableTestInstructionContainerAttributesMessage EditableTestInstructionContainerAttributes {
      get { return editableTestInstructionContainerAttributes_; }
      set {
        editableTestInstructionContainerAttributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicTestInstructionContainerInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicTestInstructionContainerInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NonEditableInformation, other.NonEditableInformation)) return false;
      if (!object.Equals(EditableInformation, other.EditableInformation)) return false;
      if (!object.Equals(InvisibleBasicInformation, other.InvisibleBasicInformation)) return false;
      if (!object.Equals(EditableTestInstructionContainerAttributes, other.EditableTestInstructionContainerAttributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nonEditableInformation_ != null) hash ^= NonEditableInformation.GetHashCode();
      if (editableInformation_ != null) hash ^= EditableInformation.GetHashCode();
      if (invisibleBasicInformation_ != null) hash ^= InvisibleBasicInformation.GetHashCode();
      if (editableTestInstructionContainerAttributes_ != null) hash ^= EditableTestInstructionContainerAttributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nonEditableInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EditableInformation);
      }
      if (invisibleBasicInformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InvisibleBasicInformation);
      }
      if (editableTestInstructionContainerAttributes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EditableTestInstructionContainerAttributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nonEditableInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EditableInformation);
      }
      if (invisibleBasicInformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InvisibleBasicInformation);
      }
      if (editableTestInstructionContainerAttributes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EditableTestInstructionContainerAttributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nonEditableInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NonEditableInformation);
      }
      if (editableInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EditableInformation);
      }
      if (invisibleBasicInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvisibleBasicInformation);
      }
      if (editableTestInstructionContainerAttributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EditableTestInstructionContainerAttributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicTestInstructionContainerInformationMessage other) {
      if (other == null) {
        return;
      }
      if (other.nonEditableInformation_ != null) {
        if (nonEditableInformation_ == null) {
          NonEditableInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.NonEditableBasicInformationMessage();
        }
        NonEditableInformation.MergeFrom(other.NonEditableInformation);
      }
      if (other.editableInformation_ != null) {
        if (editableInformation_ == null) {
          EditableInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableBasicInformationMessage();
        }
        EditableInformation.MergeFrom(other.EditableInformation);
      }
      if (other.invisibleBasicInformation_ != null) {
        if (invisibleBasicInformation_ == null) {
          InvisibleBasicInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.InvisibleBasicInformationMessage();
        }
        InvisibleBasicInformation.MergeFrom(other.InvisibleBasicInformation);
      }
      if (other.editableTestInstructionContainerAttributes_ != null) {
        if (editableTestInstructionContainerAttributes_ == null) {
          EditableTestInstructionContainerAttributes = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableTestInstructionContainerAttributesMessage();
        }
        EditableTestInstructionContainerAttributes.MergeFrom(other.EditableTestInstructionContainerAttributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nonEditableInformation_ == null) {
              NonEditableInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.NonEditableBasicInformationMessage();
            }
            input.ReadMessage(NonEditableInformation);
            break;
          }
          case 18: {
            if (editableInformation_ == null) {
              EditableInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableBasicInformationMessage();
            }
            input.ReadMessage(EditableInformation);
            break;
          }
          case 26: {
            if (invisibleBasicInformation_ == null) {
              InvisibleBasicInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.InvisibleBasicInformationMessage();
            }
            input.ReadMessage(InvisibleBasicInformation);
            break;
          }
          case 34: {
            if (editableTestInstructionContainerAttributes_ == null) {
              EditableTestInstructionContainerAttributes = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableTestInstructionContainerAttributesMessage();
            }
            input.ReadMessage(EditableTestInstructionContainerAttributes);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nonEditableInformation_ == null) {
              NonEditableInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.NonEditableBasicInformationMessage();
            }
            input.ReadMessage(NonEditableInformation);
            break;
          }
          case 18: {
            if (editableInformation_ == null) {
              EditableInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableBasicInformationMessage();
            }
            input.ReadMessage(EditableInformation);
            break;
          }
          case 26: {
            if (invisibleBasicInformation_ == null) {
              InvisibleBasicInformation = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.InvisibleBasicInformationMessage();
            }
            input.ReadMessage(InvisibleBasicInformation);
            break;
          }
          case 34: {
            if (editableTestInstructionContainerAttributes_ == null) {
              EditableTestInstructionContainerAttributes = new global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Types.EditableTestInstructionContainerAttributesMessage();
            }
            input.ReadMessage(EditableTestInstructionContainerAttributes);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BasicTestInstructionContainerInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding All basic information that can be shown in GUI but can't be changed by the user
      /// </summary>
      public sealed partial class NonEditableBasicInformationMessage : pb::IMessage<NonEditableBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NonEditableBasicInformationMessage> _parser = new pb::MessageParser<NonEditableBasicInformationMessage>(() => new NonEditableBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NonEditableBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage(NonEditableBasicInformationMessage other) : this() {
          domainUuid_ = other.domainUuid_;
          domainName_ = other.domainName_;
          testInstructionContainerUuid_ = other.testInstructionContainerUuid_;
          testInstructionContainerName_ = other.testInstructionContainerName_;
          testInstructionContainerTypeUuid_ = other.testInstructionContainerTypeUuid_;
          testInstructionContainerTypeName_ = other.testInstructionContainerTypeName_;
          deprecated_ = other.deprecated_;
          majorVersionNumber_ = other.majorVersionNumber_;
          minorVersionNumber_ = other.minorVersionNumber_;
          updatedTimeStamp_ = other.updatedTimeStamp_ != null ? other.updatedTimeStamp_.Clone() : null;
          testInstructionContainerColor_ = other.testInstructionContainerColor_;
          tCRuleDeletion_ = other.tCRuleDeletion_;
          tCRuleSwap_ = other.tCRuleSwap_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NonEditableBasicInformationMessage Clone() {
          return new NonEditableBasicInformationMessage(this);
        }

        /// <summary>Field number for the "DomainUuid" field.</summary>
        public const int DomainUuidFieldNumber = 1;
        private string domainUuid_ = "";
        /// <summary>
        /// The Domain, UUID, who created the immature TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DomainUuid {
          get { return domainUuid_; }
          set {
            domainUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DomainName" field.</summary>
        public const int DomainNameFieldNumber = 2;
        private string domainName_ = "";
        /// <summary>
        /// The Domain, Name, who created the immature TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DomainName {
          get { return domainName_; }
          set {
            domainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionContainerUuid" field.</summary>
        public const int TestInstructionContainerUuidFieldNumber = 3;
        private string testInstructionContainerUuid_ = "";
        /// <summary>
        /// TestInstructionContainer UUID, set by Client system
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerUuid {
          get { return testInstructionContainerUuid_; }
          set {
            testInstructionContainerUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionContainerName" field.</summary>
        public const int TestInstructionContainerNameFieldNumber = 4;
        private string testInstructionContainerName_ = "";
        /// <summary>
        /// TestInstructionContainer Name, set by Client system
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerName {
          get { return testInstructionContainerName_; }
          set {
            testInstructionContainerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionContainerTypeUuid" field.</summary>
        public const int TestInstructionContainerTypeUuidFieldNumber = 5;
        private string testInstructionContainerTypeUuid_ = "";
        /// <summary>
        /// The Type(Group), Uuid, of TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerTypeUuid {
          get { return testInstructionContainerTypeUuid_; }
          set {
            testInstructionContainerTypeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionContainerTypeName" field.</summary>
        public const int TestInstructionContainerTypeNameFieldNumber = 6;
        private string testInstructionContainerTypeName_ = "";
        /// <summary>
        /// The Type(Group), Name, of TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerTypeName {
          get { return testInstructionContainerTypeName_; }
          set {
            testInstructionContainerTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Deprecated" field.</summary>
        public const int DeprecatedFieldNumber = 7;
        private bool deprecated_;
        /// <summary>
        /// Indicates that this TestInstructionContainer shouldn't be used anymore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Deprecated {
          get { return deprecated_; }
          set {
            deprecated_ = value;
          }
        }

        /// <summary>Field number for the "MajorVersionNumber" field.</summary>
        public const int MajorVersionNumberFieldNumber = 8;
        private uint majorVersionNumber_;
        /// <summary>
        /// Change in Major Version Number means that user must act on change
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint MajorVersionNumber {
          get { return majorVersionNumber_; }
          set {
            majorVersionNumber_ = value;
          }
        }

        /// <summary>Field number for the "MinorVersionNumber" field.</summary>
        public const int MinorVersionNumberFieldNumber = 9;
        private uint minorVersionNumber_;
        /// <summary>
        /// Change in Minor Version Number means that user must NOT act on change
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint MinorVersionNumber {
          get { return minorVersionNumber_; }
          set {
            minorVersionNumber_ = value;
          }
        }

        /// <summary>Field number for the "UpdatedTimeStamp" field.</summary>
        public const int UpdatedTimeStampFieldNumber = 10;
        private global::Google.Protobuf.WellKnownTypes.Timestamp updatedTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstructionContainer was last updated by the client system
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp UpdatedTimeStamp {
          get { return updatedTimeStamp_; }
          set {
            updatedTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "TestInstructionContainerColor" field.</summary>
        public const int TestInstructionContainerColorFieldNumber = 11;
        private string testInstructionContainerColor_ = "";
        /// <summary>
        /// The color used for presenting the TestInstructionContainer, e.g. #FAF437
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerColor {
          get { return testInstructionContainerColor_; }
          set {
            testInstructionContainerColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TCRuleDeletion" field.</summary>
        public const int TCRuleDeletionFieldNumber = 14;
        private string tCRuleDeletion_ = "";
        /// <summary>
        /// The Deletion Rule for this TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TCRuleDeletion {
          get { return tCRuleDeletion_; }
          set {
            tCRuleDeletion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TCRuleSwap" field.</summary>
        public const int TCRuleSwapFieldNumber = 15;
        private string tCRuleSwap_ = "";
        /// <summary>
        /// The Swap Rule for this TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TCRuleSwap {
          get { return tCRuleSwap_; }
          set {
            tCRuleSwap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NonEditableBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NonEditableBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DomainUuid != other.DomainUuid) return false;
          if (DomainName != other.DomainName) return false;
          if (TestInstructionContainerUuid != other.TestInstructionContainerUuid) return false;
          if (TestInstructionContainerName != other.TestInstructionContainerName) return false;
          if (TestInstructionContainerTypeUuid != other.TestInstructionContainerTypeUuid) return false;
          if (TestInstructionContainerTypeName != other.TestInstructionContainerTypeName) return false;
          if (Deprecated != other.Deprecated) return false;
          if (MajorVersionNumber != other.MajorVersionNumber) return false;
          if (MinorVersionNumber != other.MinorVersionNumber) return false;
          if (!object.Equals(UpdatedTimeStamp, other.UpdatedTimeStamp)) return false;
          if (TestInstructionContainerColor != other.TestInstructionContainerColor) return false;
          if (TCRuleDeletion != other.TCRuleDeletion) return false;
          if (TCRuleSwap != other.TCRuleSwap) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DomainUuid.Length != 0) hash ^= DomainUuid.GetHashCode();
          if (DomainName.Length != 0) hash ^= DomainName.GetHashCode();
          if (TestInstructionContainerUuid.Length != 0) hash ^= TestInstructionContainerUuid.GetHashCode();
          if (TestInstructionContainerName.Length != 0) hash ^= TestInstructionContainerName.GetHashCode();
          if (TestInstructionContainerTypeUuid.Length != 0) hash ^= TestInstructionContainerTypeUuid.GetHashCode();
          if (TestInstructionContainerTypeName.Length != 0) hash ^= TestInstructionContainerTypeName.GetHashCode();
          if (Deprecated != false) hash ^= Deprecated.GetHashCode();
          if (MajorVersionNumber != 0) hash ^= MajorVersionNumber.GetHashCode();
          if (MinorVersionNumber != 0) hash ^= MinorVersionNumber.GetHashCode();
          if (updatedTimeStamp_ != null) hash ^= UpdatedTimeStamp.GetHashCode();
          if (TestInstructionContainerColor.Length != 0) hash ^= TestInstructionContainerColor.GetHashCode();
          if (TCRuleDeletion.Length != 0) hash ^= TCRuleDeletion.GetHashCode();
          if (TCRuleSwap.Length != 0) hash ^= TCRuleSwap.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DomainUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DomainUuid);
          }
          if (DomainName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DomainName);
          }
          if (TestInstructionContainerUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TestInstructionContainerUuid);
          }
          if (TestInstructionContainerName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TestInstructionContainerName);
          }
          if (TestInstructionContainerTypeUuid.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TestInstructionContainerTypeUuid);
          }
          if (TestInstructionContainerTypeName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TestInstructionContainerTypeName);
          }
          if (Deprecated != false) {
            output.WriteRawTag(56);
            output.WriteBool(Deprecated);
          }
          if (MajorVersionNumber != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(MajorVersionNumber);
          }
          if (MinorVersionNumber != 0) {
            output.WriteRawTag(72);
            output.WriteUInt32(MinorVersionNumber);
          }
          if (updatedTimeStamp_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(UpdatedTimeStamp);
          }
          if (TestInstructionContainerColor.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(TestInstructionContainerColor);
          }
          if (TCRuleDeletion.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(TCRuleSwap);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DomainUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DomainUuid);
          }
          if (DomainName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DomainName);
          }
          if (TestInstructionContainerUuid.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TestInstructionContainerUuid);
          }
          if (TestInstructionContainerName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(TestInstructionContainerName);
          }
          if (TestInstructionContainerTypeUuid.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(TestInstructionContainerTypeUuid);
          }
          if (TestInstructionContainerTypeName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(TestInstructionContainerTypeName);
          }
          if (Deprecated != false) {
            output.WriteRawTag(56);
            output.WriteBool(Deprecated);
          }
          if (MajorVersionNumber != 0) {
            output.WriteRawTag(64);
            output.WriteUInt32(MajorVersionNumber);
          }
          if (MinorVersionNumber != 0) {
            output.WriteRawTag(72);
            output.WriteUInt32(MinorVersionNumber);
          }
          if (updatedTimeStamp_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(UpdatedTimeStamp);
          }
          if (TestInstructionContainerColor.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(TestInstructionContainerColor);
          }
          if (TCRuleDeletion.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(TCRuleSwap);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DomainUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainUuid);
          }
          if (DomainName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DomainName);
          }
          if (TestInstructionContainerUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerUuid);
          }
          if (TestInstructionContainerName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerName);
          }
          if (TestInstructionContainerTypeUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerTypeUuid);
          }
          if (TestInstructionContainerTypeName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerTypeName);
          }
          if (Deprecated != false) {
            size += 1 + 1;
          }
          if (MajorVersionNumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MajorVersionNumber);
          }
          if (MinorVersionNumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinorVersionNumber);
          }
          if (updatedTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedTimeStamp);
          }
          if (TestInstructionContainerColor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerColor);
          }
          if (TCRuleDeletion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TCRuleDeletion);
          }
          if (TCRuleSwap.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TCRuleSwap);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NonEditableBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.DomainUuid.Length != 0) {
            DomainUuid = other.DomainUuid;
          }
          if (other.DomainName.Length != 0) {
            DomainName = other.DomainName;
          }
          if (other.TestInstructionContainerUuid.Length != 0) {
            TestInstructionContainerUuid = other.TestInstructionContainerUuid;
          }
          if (other.TestInstructionContainerName.Length != 0) {
            TestInstructionContainerName = other.TestInstructionContainerName;
          }
          if (other.TestInstructionContainerTypeUuid.Length != 0) {
            TestInstructionContainerTypeUuid = other.TestInstructionContainerTypeUuid;
          }
          if (other.TestInstructionContainerTypeName.Length != 0) {
            TestInstructionContainerTypeName = other.TestInstructionContainerTypeName;
          }
          if (other.Deprecated != false) {
            Deprecated = other.Deprecated;
          }
          if (other.MajorVersionNumber != 0) {
            MajorVersionNumber = other.MajorVersionNumber;
          }
          if (other.MinorVersionNumber != 0) {
            MinorVersionNumber = other.MinorVersionNumber;
          }
          if (other.updatedTimeStamp_ != null) {
            if (updatedTimeStamp_ == null) {
              UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            UpdatedTimeStamp.MergeFrom(other.UpdatedTimeStamp);
          }
          if (other.TestInstructionContainerColor.Length != 0) {
            TestInstructionContainerColor = other.TestInstructionContainerColor;
          }
          if (other.TCRuleDeletion.Length != 0) {
            TCRuleDeletion = other.TCRuleDeletion;
          }
          if (other.TCRuleSwap.Length != 0) {
            TCRuleSwap = other.TCRuleSwap;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DomainUuid = input.ReadString();
                break;
              }
              case 18: {
                DomainName = input.ReadString();
                break;
              }
              case 26: {
                TestInstructionContainerUuid = input.ReadString();
                break;
              }
              case 34: {
                TestInstructionContainerName = input.ReadString();
                break;
              }
              case 42: {
                TestInstructionContainerTypeUuid = input.ReadString();
                break;
              }
              case 50: {
                TestInstructionContainerTypeName = input.ReadString();
                break;
              }
              case 56: {
                Deprecated = input.ReadBool();
                break;
              }
              case 64: {
                MajorVersionNumber = input.ReadUInt32();
                break;
              }
              case 72: {
                MinorVersionNumber = input.ReadUInt32();
                break;
              }
              case 82: {
                if (updatedTimeStamp_ == null) {
                  UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdatedTimeStamp);
                break;
              }
              case 90: {
                TestInstructionContainerColor = input.ReadString();
                break;
              }
              case 114: {
                TCRuleDeletion = input.ReadString();
                break;
              }
              case 122: {
                TCRuleSwap = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                DomainUuid = input.ReadString();
                break;
              }
              case 18: {
                DomainName = input.ReadString();
                break;
              }
              case 26: {
                TestInstructionContainerUuid = input.ReadString();
                break;
              }
              case 34: {
                TestInstructionContainerName = input.ReadString();
                break;
              }
              case 42: {
                TestInstructionContainerTypeUuid = input.ReadString();
                break;
              }
              case 50: {
                TestInstructionContainerTypeName = input.ReadString();
                break;
              }
              case 56: {
                Deprecated = input.ReadBool();
                break;
              }
              case 64: {
                MajorVersionNumber = input.ReadUInt32();
                break;
              }
              case 72: {
                MinorVersionNumber = input.ReadUInt32();
                break;
              }
              case 82: {
                if (updatedTimeStamp_ == null) {
                  UpdatedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdatedTimeStamp);
                break;
              }
              case 90: {
                TestInstructionContainerColor = input.ReadString();
                break;
              }
              case 114: {
                TCRuleDeletion = input.ReadString();
                break;
              }
              case 122: {
                TCRuleSwap = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding all Basic information that can be shown in GUI and can be changed by the user
      /// </summary>
      public sealed partial class EditableBasicInformationMessage : pb::IMessage<EditableBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EditableBasicInformationMessage> _parser = new pb::MessageParser<EditableBasicInformationMessage>(() => new EditableBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EditableBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage(EditableBasicInformationMessage other) : this() {
          testInstructionContainerDescription_ = other.testInstructionContainerDescription_;
          testInstructionContainerMouseOverText_ = other.testInstructionContainerMouseOverText_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableBasicInformationMessage Clone() {
          return new EditableBasicInformationMessage(this);
        }

        /// <summary>Field number for the "TestInstructionContainerDescription" field.</summary>
        public const int TestInstructionContainerDescriptionFieldNumber = 7;
        private string testInstructionContainerDescription_ = "";
        /// <summary>
        /// The description of the TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerDescription {
          get { return testInstructionContainerDescription_; }
          set {
            testInstructionContainerDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionContainerMouseOverText" field.</summary>
        public const int TestInstructionContainerMouseOverTextFieldNumber = 8;
        private string testInstructionContainerMouseOverText_ = "";
        /// <summary>
        /// The mouse over text when hovering over TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerMouseOverText {
          get { return testInstructionContainerMouseOverText_; }
          set {
            testInstructionContainerMouseOverText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EditableBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EditableBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestInstructionContainerDescription != other.TestInstructionContainerDescription) return false;
          if (TestInstructionContainerMouseOverText != other.TestInstructionContainerMouseOverText) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestInstructionContainerDescription.Length != 0) hash ^= TestInstructionContainerDescription.GetHashCode();
          if (TestInstructionContainerMouseOverText.Length != 0) hash ^= TestInstructionContainerMouseOverText.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestInstructionContainerDescription.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(TestInstructionContainerDescription);
          }
          if (TestInstructionContainerMouseOverText.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(TestInstructionContainerMouseOverText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestInstructionContainerDescription.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(TestInstructionContainerDescription);
          }
          if (TestInstructionContainerMouseOverText.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(TestInstructionContainerMouseOverText);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestInstructionContainerDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerDescription);
          }
          if (TestInstructionContainerMouseOverText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerMouseOverText);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EditableBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestInstructionContainerDescription.Length != 0) {
            TestInstructionContainerDescription = other.TestInstructionContainerDescription;
          }
          if (other.TestInstructionContainerMouseOverText.Length != 0) {
            TestInstructionContainerMouseOverText = other.TestInstructionContainerMouseOverText;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 58: {
                TestInstructionContainerDescription = input.ReadString();
                break;
              }
              case 66: {
                TestInstructionContainerMouseOverText = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 58: {
                TestInstructionContainerDescription = input.ReadString();
                break;
              }
              case 66: {
                TestInstructionContainerMouseOverText = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding all Basic information that is not directly shown in GUI and can't be changed by the user
      /// </summary>
      public sealed partial class InvisibleBasicInformationMessage : pb::IMessage<InvisibleBasicInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InvisibleBasicInformationMessage> _parser = new pb::MessageParser<InvisibleBasicInformationMessage>(() => new InvisibleBasicInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InvisibleBasicInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvisibleBasicInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvisibleBasicInformationMessage(InvisibleBasicInformationMessage other) : this() {
          enabled_ = other.enabled_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvisibleBasicInformationMessage Clone() {
          return new InvisibleBasicInformationMessage(this);
        }

        /// <summary>Field number for the "Enabled" field.</summary>
        public const int EnabledFieldNumber = 10;
        private bool enabled_;
        /// <summary>
        /// TestInstructionContainer can be disabled when the user shouldn't use it anymore
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InvisibleBasicInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InvisibleBasicInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Enabled != false) {
            output.WriteRawTag(80);
            output.WriteBool(Enabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Enabled != false) {
            output.WriteRawTag(80);
            output.WriteBool(Enabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InvisibleBasicInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 80: {
                Enabled = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 80: {
                Enabled = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding all attributes supported by a TestInstructionContainer, can be changed by the user
      /// </summary>
      public sealed partial class EditableTestInstructionContainerAttributesMessage : pb::IMessage<EditableTestInstructionContainerAttributesMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EditableTestInstructionContainerAttributesMessage> _parser = new pb::MessageParser<EditableTestInstructionContainerAttributesMessage>(() => new EditableTestInstructionContainerAttributesMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EditableTestInstructionContainerAttributesMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.BasicTestInstructionContainerInformationMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableTestInstructionContainerAttributesMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableTestInstructionContainerAttributesMessage(EditableTestInstructionContainerAttributesMessage other) : this() {
          testInstructionContainerExecutionType_ = other.testInstructionContainerExecutionType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EditableTestInstructionContainerAttributesMessage Clone() {
          return new EditableTestInstructionContainerAttributesMessage(this);
        }

        /// <summary>Field number for the "TestInstructionContainerExecutionType" field.</summary>
        public const int TestInstructionContainerExecutionTypeFieldNumber = 1;
        private global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum testInstructionContainerExecutionType_ = global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum.ParallelledProcessed;
        /// <summary>
        /// Should children in the TestInstructionContainer be Serial or Parallel executed
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum TestInstructionContainerExecutionType {
          get { return testInstructionContainerExecutionType_; }
          set {
            testInstructionContainerExecutionType_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as EditableTestInstructionContainerAttributesMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EditableTestInstructionContainerAttributesMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestInstructionContainerExecutionType != other.TestInstructionContainerExecutionType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestInstructionContainerExecutionType != global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum.ParallelledProcessed) hash ^= TestInstructionContainerExecutionType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestInstructionContainerExecutionType != global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum.ParallelledProcessed) {
            output.WriteRawTag(8);
            output.WriteEnum((int) TestInstructionContainerExecutionType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestInstructionContainerExecutionType != global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum.ParallelledProcessed) {
            output.WriteRawTag(8);
            output.WriteEnum((int) TestInstructionContainerExecutionType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestInstructionContainerExecutionType != global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum.ParallelledProcessed) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestInstructionContainerExecutionType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EditableTestInstructionContainerAttributesMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestInstructionContainerExecutionType != global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum.ParallelledProcessed) {
            TestInstructionContainerExecutionType = other.TestInstructionContainerExecutionType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TestInstructionContainerExecutionType = (global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TestInstructionContainerExecutionType = (global::SubCustodyServer.TestInstructionContainerExecutionTypeEnum) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Message holding the information about the Immature TestInstructionContainer
  /// </summary>
  public sealed partial class ImmatureTestInstructionContainerInformationMessage : pb::IMessage<ImmatureTestInstructionContainerInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmatureTestInstructionContainerInformationMessage> _parser = new pb::MessageParser<ImmatureTestInstructionContainerInformationMessage>(() => new ImmatureTestInstructionContainerInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImmatureTestInstructionContainerInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionContainerInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionContainerInformationMessage(ImmatureTestInstructionContainerInformationMessage other) : this() {
      availableDropZones_ = other.availableDropZones_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestInstructionContainerInformationMessage Clone() {
      return new ImmatureTestInstructionContainerInformationMessage(this);
    }

    /// <summary>Field number for the "AvailableDropZones" field.</summary>
    public const int AvailableDropZonesFieldNumber = 18;
    private static readonly pb::FieldCodec<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage> _repeated_availableDropZones_codec
        = pb::FieldCodec.ForMessage(146, global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage> availableDropZones_ = new pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage>();
    /// <summary>
    /// A list of DropZone for this Immature TestInstructionContainer. A DropZone is a collection of pre-defined values that the TestInstructionContainer will get when placed in TestCase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage> AvailableDropZones {
      get { return availableDropZones_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImmatureTestInstructionContainerInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImmatureTestInstructionContainerInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availableDropZones_.Equals(other.availableDropZones_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availableDropZones_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      availableDropZones_.WriteTo(output, _repeated_availableDropZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      availableDropZones_.WriteTo(ref output, _repeated_availableDropZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += availableDropZones_.CalculateSize(_repeated_availableDropZones_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImmatureTestInstructionContainerInformationMessage other) {
      if (other == null) {
        return;
      }
      availableDropZones_.Add(other.availableDropZones_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 146: {
            availableDropZones_.AddEntriesFrom(input, _repeated_availableDropZones_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 146: {
            availableDropZones_.AddEntriesFrom(ref input, _repeated_availableDropZones_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ImmatureTestInstructionContainerInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding one DropZone
      /// </summary>
      public sealed partial class AvailableDropZoneMessage : pb::IMessage<AvailableDropZoneMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AvailableDropZoneMessage> _parser = new pb::MessageParser<AvailableDropZoneMessage>(() => new AvailableDropZoneMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AvailableDropZoneMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableDropZoneMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableDropZoneMessage(AvailableDropZoneMessage other) : this() {
          dropZoneUuid_ = other.dropZoneUuid_;
          dropZoneName_ = other.dropZoneName_;
          dropZoneDescription_ = other.dropZoneDescription_;
          dropZoneMouseOver_ = other.dropZoneMouseOver_;
          dropZoneColor_ = other.dropZoneColor_;
          dropZonePreSetTestInstructionAttributes_ = other.dropZonePreSetTestInstructionAttributes_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AvailableDropZoneMessage Clone() {
          return new AvailableDropZoneMessage(this);
        }

        /// <summary>Field number for the "DropZoneUuid" field.</summary>
        public const int DropZoneUuidFieldNumber = 1;
        private string dropZoneUuid_ = "";
        /// <summary>
        /// A DropZone, UUID, for the TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneUuid {
          get { return dropZoneUuid_; }
          set {
            dropZoneUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneName" field.</summary>
        public const int DropZoneNameFieldNumber = 2;
        private string dropZoneName_ = "";
        /// <summary>
        /// A DropZone, Name, for the TestInstructionContainer
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneName {
          get { return dropZoneName_; }
          set {
            dropZoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneDescription" field.</summary>
        public const int DropZoneDescriptionFieldNumber = 3;
        private string dropZoneDescription_ = "";
        /// <summary>
        /// Description of the DropZone
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneDescription {
          get { return dropZoneDescription_; }
          set {
            dropZoneDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneMouseOver" field.</summary>
        public const int DropZoneMouseOverFieldNumber = 4;
        private string dropZoneMouseOver_ = "";
        /// <summary>
        /// The mouse over text for the DropZone
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneMouseOver {
          get { return dropZoneMouseOver_; }
          set {
            dropZoneMouseOver_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZoneColor" field.</summary>
        public const int DropZoneColorFieldNumber = 5;
        private string dropZoneColor_ = "";
        /// <summary>
        /// The color used for presenting the DropsZone, e.g. #FAF437
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DropZoneColor {
          get { return dropZoneColor_; }
          set {
            dropZoneColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DropZonePreSetTestInstructionAttributes" field.</summary>
        public const int DropZonePreSetTestInstructionAttributesFieldNumber = 6;
        private static readonly pb::FieldCodec<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage> _repeated_dropZonePreSetTestInstructionAttributes_codec
            = pb::FieldCodec.ForMessage(50, global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage.Parser);
        private readonly pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage> dropZonePreSetTestInstructionAttributes_ = new pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage>();
        /// <summary>
        /// A list of the attributes and their pre-set values
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Types.DropZonePreSetTestInstructionAttributeMessage> DropZonePreSetTestInstructionAttributes {
          get { return dropZonePreSetTestInstructionAttributes_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AvailableDropZoneMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AvailableDropZoneMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DropZoneUuid != other.DropZoneUuid) return false;
          if (DropZoneName != other.DropZoneName) return false;
          if (DropZoneDescription != other.DropZoneDescription) return false;
          if (DropZoneMouseOver != other.DropZoneMouseOver) return false;
          if (DropZoneColor != other.DropZoneColor) return false;
          if(!dropZonePreSetTestInstructionAttributes_.Equals(other.dropZonePreSetTestInstructionAttributes_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DropZoneUuid.Length != 0) hash ^= DropZoneUuid.GetHashCode();
          if (DropZoneName.Length != 0) hash ^= DropZoneName.GetHashCode();
          if (DropZoneDescription.Length != 0) hash ^= DropZoneDescription.GetHashCode();
          if (DropZoneMouseOver.Length != 0) hash ^= DropZoneMouseOver.GetHashCode();
          if (DropZoneColor.Length != 0) hash ^= DropZoneColor.GetHashCode();
          hash ^= dropZonePreSetTestInstructionAttributes_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DropZoneUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DropZoneUuid);
          }
          if (DropZoneName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DropZoneName);
          }
          if (DropZoneDescription.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DropZoneDescription);
          }
          if (DropZoneMouseOver.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DropZoneMouseOver);
          }
          if (DropZoneColor.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(DropZoneColor);
          }
          dropZonePreSetTestInstructionAttributes_.WriteTo(output, _repeated_dropZonePreSetTestInstructionAttributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DropZoneUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DropZoneUuid);
          }
          if (DropZoneName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(DropZoneName);
          }
          if (DropZoneDescription.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DropZoneDescription);
          }
          if (DropZoneMouseOver.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DropZoneMouseOver);
          }
          if (DropZoneColor.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(DropZoneColor);
          }
          dropZonePreSetTestInstructionAttributes_.WriteTo(ref output, _repeated_dropZonePreSetTestInstructionAttributes_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DropZoneUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneUuid);
          }
          if (DropZoneName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneName);
          }
          if (DropZoneDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneDescription);
          }
          if (DropZoneMouseOver.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneMouseOver);
          }
          if (DropZoneColor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DropZoneColor);
          }
          size += dropZonePreSetTestInstructionAttributes_.CalculateSize(_repeated_dropZonePreSetTestInstructionAttributes_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AvailableDropZoneMessage other) {
          if (other == null) {
            return;
          }
          if (other.DropZoneUuid.Length != 0) {
            DropZoneUuid = other.DropZoneUuid;
          }
          if (other.DropZoneName.Length != 0) {
            DropZoneName = other.DropZoneName;
          }
          if (other.DropZoneDescription.Length != 0) {
            DropZoneDescription = other.DropZoneDescription;
          }
          if (other.DropZoneMouseOver.Length != 0) {
            DropZoneMouseOver = other.DropZoneMouseOver;
          }
          if (other.DropZoneColor.Length != 0) {
            DropZoneColor = other.DropZoneColor;
          }
          dropZonePreSetTestInstructionAttributes_.Add(other.dropZonePreSetTestInstructionAttributes_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DropZoneUuid = input.ReadString();
                break;
              }
              case 18: {
                DropZoneName = input.ReadString();
                break;
              }
              case 26: {
                DropZoneDescription = input.ReadString();
                break;
              }
              case 34: {
                DropZoneMouseOver = input.ReadString();
                break;
              }
              case 42: {
                DropZoneColor = input.ReadString();
                break;
              }
              case 50: {
                dropZonePreSetTestInstructionAttributes_.AddEntriesFrom(input, _repeated_dropZonePreSetTestInstructionAttributes_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                DropZoneUuid = input.ReadString();
                break;
              }
              case 18: {
                DropZoneName = input.ReadString();
                break;
              }
              case 26: {
                DropZoneDescription = input.ReadString();
                break;
              }
              case 34: {
                DropZoneMouseOver = input.ReadString();
                break;
              }
              case 42: {
                DropZoneColor = input.ReadString();
                break;
              }
              case 50: {
                dropZonePreSetTestInstructionAttributes_.AddEntriesFrom(ref input, _repeated_dropZonePreSetTestInstructionAttributes_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the AvailableDropZoneMessage message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Message holding one attribute with its pre-set value
          /// </summary>
          public sealed partial class DropZonePreSetTestInstructionAttributeMessage : pb::IMessage<DropZonePreSetTestInstructionAttributeMessage>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DropZonePreSetTestInstructionAttributeMessage> _parser = new pb::MessageParser<DropZonePreSetTestInstructionAttributeMessage>(() => new DropZonePreSetTestInstructionAttributeMessage());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DropZonePreSetTestInstructionAttributeMessage> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::SubCustodyServer.ImmatureTestInstructionContainerInformationMessage.Types.AvailableDropZoneMessage.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DropZonePreSetTestInstructionAttributeMessage() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DropZonePreSetTestInstructionAttributeMessage(DropZonePreSetTestInstructionAttributeMessage other) : this() {
              testInstructionAttributeType_ = other.testInstructionAttributeType_;
              testInstructionAttributeUuid_ = other.testInstructionAttributeUuid_;
              testInstructionAttributeName_ = other.testInstructionAttributeName_;
              attributeValueAsString_ = other.attributeValueAsString_;
              attributeValueUuid_ = other.attributeValueUuid_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DropZonePreSetTestInstructionAttributeMessage Clone() {
              return new DropZonePreSetTestInstructionAttributeMessage(this);
            }

            /// <summary>Field number for the "TestInstructionAttributeType" field.</summary>
            public const int TestInstructionAttributeTypeFieldNumber = 1;
            private global::SubCustodyServer.TestInstructionAttributeTypeEnum testInstructionAttributeType_ = global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox;
            /// <summary>
            /// Defines witch type attribute; TEXTBOX, COMBOBOX...
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::SubCustodyServer.TestInstructionAttributeTypeEnum TestInstructionAttributeType {
              get { return testInstructionAttributeType_; }
              set {
                testInstructionAttributeType_ = value;
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeUuid" field.</summary>
            public const int TestInstructionAttributeUuidFieldNumber = 2;
            private string testInstructionAttributeUuid_ = "";
            /// <summary>
            /// The unique uuid for the TestInstructionAttribute, set by client system
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeUuid {
              get { return testInstructionAttributeUuid_; }
              set {
                testInstructionAttributeUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "TestInstructionAttributeName" field.</summary>
            public const int TestInstructionAttributeNameFieldNumber = 3;
            private string testInstructionAttributeName_ = "";
            /// <summary>
            /// The name of the TestInstructionAttribute
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string TestInstructionAttributeName {
              get { return testInstructionAttributeName_; }
              set {
                testInstructionAttributeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "AttributeValueAsString" field.</summary>
            public const int AttributeValueAsStringFieldNumber = 4;
            private string attributeValueAsString_ = "";
            /// <summary>
            /// The String-representation of the value
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string AttributeValueAsString {
              get { return attributeValueAsString_; }
              set {
                attributeValueAsString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "AttributeValueUuid" field.</summary>
            public const int AttributeValueUuidFieldNumber = 5;
            private string attributeValueUuid_ = "";
            /// <summary>
            /// Combo-boxes can us a UUID as unique value behind the text visible in the combo-box
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string AttributeValueUuid {
              get { return attributeValueUuid_; }
              set {
                attributeValueUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DropZonePreSetTestInstructionAttributeMessage);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DropZonePreSetTestInstructionAttributeMessage other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (TestInstructionAttributeType != other.TestInstructionAttributeType) return false;
              if (TestInstructionAttributeUuid != other.TestInstructionAttributeUuid) return false;
              if (TestInstructionAttributeName != other.TestInstructionAttributeName) return false;
              if (AttributeValueAsString != other.AttributeValueAsString) return false;
              if (AttributeValueUuid != other.AttributeValueUuid) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) hash ^= TestInstructionAttributeType.GetHashCode();
              if (TestInstructionAttributeUuid.Length != 0) hash ^= TestInstructionAttributeUuid.GetHashCode();
              if (TestInstructionAttributeName.Length != 0) hash ^= TestInstructionAttributeName.GetHashCode();
              if (AttributeValueAsString.Length != 0) hash ^= AttributeValueAsString.GetHashCode();
              if (AttributeValueUuid.Length != 0) hash ^= AttributeValueUuid.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                output.WriteRawTag(8);
                output.WriteEnum((int) TestInstructionAttributeType);
              }
              if (TestInstructionAttributeUuid.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(TestInstructionAttributeName);
              }
              if (AttributeValueAsString.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(AttributeValueAsString);
              }
              if (AttributeValueUuid.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(AttributeValueUuid);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                output.WriteRawTag(8);
                output.WriteEnum((int) TestInstructionAttributeType);
              }
              if (TestInstructionAttributeUuid.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(TestInstructionAttributeName);
              }
              if (AttributeValueAsString.Length != 0) {
                output.WriteRawTag(34);
                output.WriteString(AttributeValueAsString);
              }
              if (AttributeValueUuid.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(AttributeValueUuid);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestInstructionAttributeType);
              }
              if (TestInstructionAttributeUuid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeUuid);
              }
              if (TestInstructionAttributeName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionAttributeName);
              }
              if (AttributeValueAsString.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeValueAsString);
              }
              if (AttributeValueUuid.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeValueUuid);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DropZonePreSetTestInstructionAttributeMessage other) {
              if (other == null) {
                return;
              }
              if (other.TestInstructionAttributeType != global::SubCustodyServer.TestInstructionAttributeTypeEnum.Textbox) {
                TestInstructionAttributeType = other.TestInstructionAttributeType;
              }
              if (other.TestInstructionAttributeUuid.Length != 0) {
                TestInstructionAttributeUuid = other.TestInstructionAttributeUuid;
              }
              if (other.TestInstructionAttributeName.Length != 0) {
                TestInstructionAttributeName = other.TestInstructionAttributeName;
              }
              if (other.AttributeValueAsString.Length != 0) {
                AttributeValueAsString = other.AttributeValueAsString;
              }
              if (other.AttributeValueUuid.Length != 0) {
                AttributeValueUuid = other.AttributeValueUuid;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    TestInstructionAttributeType = (global::SubCustodyServer.TestInstructionAttributeTypeEnum) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    TestInstructionAttributeUuid = input.ReadString();
                    break;
                  }
                  case 26: {
                    TestInstructionAttributeName = input.ReadString();
                    break;
                  }
                  case 34: {
                    AttributeValueAsString = input.ReadString();
                    break;
                  }
                  case 42: {
                    AttributeValueUuid = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    TestInstructionAttributeType = (global::SubCustodyServer.TestInstructionAttributeTypeEnum) input.ReadEnum();
                    break;
                  }
                  case 18: {
                    TestInstructionAttributeUuid = input.ReadString();
                    break;
                  }
                  case 26: {
                    TestInstructionAttributeName = input.ReadString();
                    break;
                  }
                  case 34: {
                    AttributeValueAsString = input.ReadString();
                    break;
                  }
                  case 42: {
                    AttributeValueUuid = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  ///  Message holding all data that is set for the Mature TestInstructionContainer
  /// </summary>
  public sealed partial class MatureTestInstructionContainerInformationMessage : pb::IMessage<MatureTestInstructionContainerInformationMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatureTestInstructionContainerInformationMessage> _parser = new pb::MessageParser<MatureTestInstructionContainerInformationMessage>(() => new MatureTestInstructionContainerInformationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatureTestInstructionContainerInformationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestInstructionContainerMessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionContainerInformationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionContainerInformationMessage(MatureTestInstructionContainerInformationMessage other) : this() {
      matureBasicTestInstructionInformation_ = other.matureBasicTestInstructionInformation_ != null ? other.matureBasicTestInstructionInformation_.Clone() : null;
      createdAndUpdatedInformation_ = other.createdAndUpdatedInformation_ != null ? other.createdAndUpdatedInformation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestInstructionContainerInformationMessage Clone() {
      return new MatureTestInstructionContainerInformationMessage(this);
    }

    /// <summary>Field number for the "MatureBasicTestInstructionInformation" field.</summary>
    public const int MatureBasicTestInstructionInformationFieldNumber = 1;
    private global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.MatureBasicTestInstructionInformationMessage matureBasicTestInstructionInformation_;
    /// <summary>
    /// The Basic information for the Matures TestInstruction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.MatureBasicTestInstructionInformationMessage MatureBasicTestInstructionInformation {
      get { return matureBasicTestInstructionInformation_; }
      set {
        matureBasicTestInstructionInformation_ = value;
      }
    }

    /// <summary>Field number for the "CreatedAndUpdatedInformation" field.</summary>
    public const int CreatedAndUpdatedInformationFieldNumber = 2;
    private global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.CreatedAndUpdatedInformationMessage createdAndUpdatedInformation_;
    /// <summary>
    /// Information regarding who did what and when
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.CreatedAndUpdatedInformationMessage CreatedAndUpdatedInformation {
      get { return createdAndUpdatedInformation_; }
      set {
        createdAndUpdatedInformation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatureTestInstructionContainerInformationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatureTestInstructionContainerInformationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MatureBasicTestInstructionInformation, other.MatureBasicTestInstructionInformation)) return false;
      if (!object.Equals(CreatedAndUpdatedInformation, other.CreatedAndUpdatedInformation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (matureBasicTestInstructionInformation_ != null) hash ^= MatureBasicTestInstructionInformation.GetHashCode();
      if (createdAndUpdatedInformation_ != null) hash ^= CreatedAndUpdatedInformation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (matureBasicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (matureBasicTestInstructionInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (matureBasicTestInstructionInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatureBasicTestInstructionInformation);
      }
      if (createdAndUpdatedInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAndUpdatedInformation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatureTestInstructionContainerInformationMessage other) {
      if (other == null) {
        return;
      }
      if (other.matureBasicTestInstructionInformation_ != null) {
        if (matureBasicTestInstructionInformation_ == null) {
          MatureBasicTestInstructionInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.MatureBasicTestInstructionInformationMessage();
        }
        MatureBasicTestInstructionInformation.MergeFrom(other.MatureBasicTestInstructionInformation);
      }
      if (other.createdAndUpdatedInformation_ != null) {
        if (createdAndUpdatedInformation_ == null) {
          CreatedAndUpdatedInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.CreatedAndUpdatedInformationMessage();
        }
        CreatedAndUpdatedInformation.MergeFrom(other.CreatedAndUpdatedInformation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (matureBasicTestInstructionInformation_ == null) {
              MatureBasicTestInstructionInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.MatureBasicTestInstructionInformationMessage();
            }
            input.ReadMessage(MatureBasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (matureBasicTestInstructionInformation_ == null) {
              MatureBasicTestInstructionInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.MatureBasicTestInstructionInformationMessage();
            }
            input.ReadMessage(MatureBasicTestInstructionInformation);
            break;
          }
          case 18: {
            if (createdAndUpdatedInformation_ == null) {
              CreatedAndUpdatedInformation = new global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Types.CreatedAndUpdatedInformationMessage();
            }
            input.ReadMessage(CreatedAndUpdatedInformation);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MatureTestInstructionContainerInformationMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Message holding the mature basic information about the TestInstruction
      /// </summary>
      public sealed partial class MatureBasicTestInstructionInformationMessage : pb::IMessage<MatureBasicTestInstructionInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MatureBasicTestInstructionInformationMessage> _parser = new pb::MessageParser<MatureBasicTestInstructionInformationMessage>(() => new MatureBasicTestInstructionInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MatureBasicTestInstructionInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicTestInstructionInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicTestInstructionInformationMessage(MatureBasicTestInstructionInformationMessage other) : this() {
          testCaseUuid_ = other.testCaseUuid_;
          testInstructionContainerMatureUuid_ = other.testInstructionContainerMatureUuid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MatureBasicTestInstructionInformationMessage Clone() {
          return new MatureBasicTestInstructionInformationMessage(this);
        }

        /// <summary>Field number for the "TestCaseUuid" field.</summary>
        public const int TestCaseUuidFieldNumber = 1;
        private string testCaseUuid_ = "";
        /// <summary>
        /// Reference to the TestCase where this TestInstructionContainer exists
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestCaseUuid {
          get { return testCaseUuid_; }
          set {
            testCaseUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "TestInstructionContainerMatureUuid" field.</summary>
        public const int TestInstructionContainerMatureUuidFieldNumber = 2;
        private string testInstructionContainerMatureUuid_ = "";
        /// <summary>
        /// The Mature UUID that the TestInstructionContainer gets when it is added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestInstructionContainerMatureUuid {
          get { return testInstructionContainerMatureUuid_; }
          set {
            testInstructionContainerMatureUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MatureBasicTestInstructionInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MatureBasicTestInstructionInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestCaseUuid != other.TestCaseUuid) return false;
          if (TestInstructionContainerMatureUuid != other.TestInstructionContainerMatureUuid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestCaseUuid.Length != 0) hash ^= TestCaseUuid.GetHashCode();
          if (TestInstructionContainerMatureUuid.Length != 0) hash ^= TestInstructionContainerMatureUuid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestCaseUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseUuid);
          }
          if (TestInstructionContainerMatureUuid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestInstructionContainerMatureUuid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestCaseUuid.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TestCaseUuid);
          }
          if (TestInstructionContainerMatureUuid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestInstructionContainerMatureUuid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestCaseUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseUuid);
          }
          if (TestInstructionContainerMatureUuid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestInstructionContainerMatureUuid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MatureBasicTestInstructionInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestCaseUuid.Length != 0) {
            TestCaseUuid = other.TestCaseUuid;
          }
          if (other.TestInstructionContainerMatureUuid.Length != 0) {
            TestInstructionContainerMatureUuid = other.TestInstructionContainerMatureUuid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TestCaseUuid = input.ReadString();
                break;
              }
              case 18: {
                TestInstructionContainerMatureUuid = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TestCaseUuid = input.ReadString();
                break;
              }
              case 18: {
                TestInstructionContainerMatureUuid = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message holding information about changes to the TestInstructionContainer, who and when
      /// </summary>
      public sealed partial class CreatedAndUpdatedInformationMessage : pb::IMessage<CreatedAndUpdatedInformationMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CreatedAndUpdatedInformationMessage> _parser = new pb::MessageParser<CreatedAndUpdatedInformationMessage>(() => new CreatedAndUpdatedInformationMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CreatedAndUpdatedInformationMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.MatureTestInstructionContainerInformationMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage(CreatedAndUpdatedInformationMessage other) : this() {
          addedToTestCaseTimeStamp_ = other.addedToTestCaseTimeStamp_ != null ? other.addedToTestCaseTimeStamp_.Clone() : null;
          addedToTestCaseByUserId_ = other.addedToTestCaseByUserId_;
          lastUpdatedInTestCaseTimeStamp_ = other.lastUpdatedInTestCaseTimeStamp_ != null ? other.lastUpdatedInTestCaseTimeStamp_.Clone() : null;
          lastUpdatedInTestCaseByUserId_ = other.lastUpdatedInTestCaseByUserId_;
          deletedFromTestCaseTimeStamp_ = other.deletedFromTestCaseTimeStamp_ != null ? other.deletedFromTestCaseTimeStamp_.Clone() : null;
          deletedFromTestCaseByUserId_ = other.deletedFromTestCaseByUserId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CreatedAndUpdatedInformationMessage Clone() {
          return new CreatedAndUpdatedInformationMessage(this);
        }

        /// <summary>Field number for the "AddedToTestCaseTimeStamp" field.</summary>
        public const int AddedToTestCaseTimeStampFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp addedToTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstructionContainer was first added to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp AddedToTestCaseTimeStamp {
          get { return addedToTestCaseTimeStamp_; }
          set {
            addedToTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "AddedToTestCaseByUserId" field.</summary>
        public const int AddedToTestCaseByUserIdFieldNumber = 2;
        private string addedToTestCaseByUserId_ = "";
        /// <summary>
        /// Which user added the TestInstructionContainer to the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string AddedToTestCaseByUserId {
          get { return addedToTestCaseByUserId_; }
          set {
            addedToTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseTimeStamp" field.</summary>
        public const int LastUpdatedInTestCaseTimeStampFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdatedInTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstructionContainer was updated in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdatedInTestCaseTimeStamp {
          get { return lastUpdatedInTestCaseTimeStamp_; }
          set {
            lastUpdatedInTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "LastUpdatedInTestCaseByUserId" field.</summary>
        public const int LastUpdatedInTestCaseByUserIdFieldNumber = 4;
        private string lastUpdatedInTestCaseByUserId_ = "";
        /// <summary>
        /// Which user was the last to update the TestInstructionContainer in the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LastUpdatedInTestCaseByUserId {
          get { return lastUpdatedInTestCaseByUserId_; }
          set {
            lastUpdatedInTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseTimeStamp" field.</summary>
        public const int DeletedFromTestCaseTimeStampFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp deletedFromTestCaseTimeStamp_;
        /// <summary>
        /// The TimeStamp when the TestInstructionContainer was deleted from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp DeletedFromTestCaseTimeStamp {
          get { return deletedFromTestCaseTimeStamp_; }
          set {
            deletedFromTestCaseTimeStamp_ = value;
          }
        }

        /// <summary>Field number for the "DeletedFromTestCaseByUserId" field.</summary>
        public const int DeletedFromTestCaseByUserIdFieldNumber = 6;
        private string deletedFromTestCaseByUserId_ = "";
        /// <summary>
        /// Which user deleted the TestInstructionContainer from the TestCase
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DeletedFromTestCaseByUserId {
          get { return deletedFromTestCaseByUserId_; }
          set {
            deletedFromTestCaseByUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CreatedAndUpdatedInformationMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CreatedAndUpdatedInformationMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AddedToTestCaseTimeStamp, other.AddedToTestCaseTimeStamp)) return false;
          if (AddedToTestCaseByUserId != other.AddedToTestCaseByUserId) return false;
          if (!object.Equals(LastUpdatedInTestCaseTimeStamp, other.LastUpdatedInTestCaseTimeStamp)) return false;
          if (LastUpdatedInTestCaseByUserId != other.LastUpdatedInTestCaseByUserId) return false;
          if (!object.Equals(DeletedFromTestCaseTimeStamp, other.DeletedFromTestCaseTimeStamp)) return false;
          if (DeletedFromTestCaseByUserId != other.DeletedFromTestCaseByUserId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (addedToTestCaseTimeStamp_ != null) hash ^= AddedToTestCaseTimeStamp.GetHashCode();
          if (AddedToTestCaseByUserId.Length != 0) hash ^= AddedToTestCaseByUserId.GetHashCode();
          if (lastUpdatedInTestCaseTimeStamp_ != null) hash ^= LastUpdatedInTestCaseTimeStamp.GetHashCode();
          if (LastUpdatedInTestCaseByUserId.Length != 0) hash ^= LastUpdatedInTestCaseByUserId.GetHashCode();
          if (deletedFromTestCaseTimeStamp_ != null) hash ^= DeletedFromTestCaseTimeStamp.GetHashCode();
          if (DeletedFromTestCaseByUserId.Length != 0) hash ^= DeletedFromTestCaseByUserId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (addedToTestCaseTimeStamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (addedToTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddedToTestCaseTimeStamp);
          }
          if (AddedToTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AddedToTestCaseByUserId);
          }
          if (lastUpdatedInTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdatedInTestCaseTimeStamp);
          }
          if (LastUpdatedInTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdatedInTestCaseByUserId);
          }
          if (deletedFromTestCaseTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeletedFromTestCaseTimeStamp);
          }
          if (DeletedFromTestCaseByUserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeletedFromTestCaseByUserId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CreatedAndUpdatedInformationMessage other) {
          if (other == null) {
            return;
          }
          if (other.addedToTestCaseTimeStamp_ != null) {
            if (addedToTestCaseTimeStamp_ == null) {
              AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            AddedToTestCaseTimeStamp.MergeFrom(other.AddedToTestCaseTimeStamp);
          }
          if (other.AddedToTestCaseByUserId.Length != 0) {
            AddedToTestCaseByUserId = other.AddedToTestCaseByUserId;
          }
          if (other.lastUpdatedInTestCaseTimeStamp_ != null) {
            if (lastUpdatedInTestCaseTimeStamp_ == null) {
              LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            LastUpdatedInTestCaseTimeStamp.MergeFrom(other.LastUpdatedInTestCaseTimeStamp);
          }
          if (other.LastUpdatedInTestCaseByUserId.Length != 0) {
            LastUpdatedInTestCaseByUserId = other.LastUpdatedInTestCaseByUserId;
          }
          if (other.deletedFromTestCaseTimeStamp_ != null) {
            if (deletedFromTestCaseTimeStamp_ == null) {
              DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            DeletedFromTestCaseTimeStamp.MergeFrom(other.DeletedFromTestCaseTimeStamp);
          }
          if (other.DeletedFromTestCaseByUserId.Length != 0) {
            DeletedFromTestCaseByUserId = other.DeletedFromTestCaseByUserId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (addedToTestCaseTimeStamp_ == null) {
                  AddedToTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(AddedToTestCaseTimeStamp);
                break;
              }
              case 18: {
                AddedToTestCaseByUserId = input.ReadString();
                break;
              }
              case 26: {
                if (lastUpdatedInTestCaseTimeStamp_ == null) {
                  LastUpdatedInTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(LastUpdatedInTestCaseTimeStamp);
                break;
              }
              case 34: {
                LastUpdatedInTestCaseByUserId = input.ReadString();
                break;
              }
              case 42: {
                if (deletedFromTestCaseTimeStamp_ == null) {
                  DeletedFromTestCaseTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeletedFromTestCaseTimeStamp);
                break;
              }
              case 50: {
                DeletedFromTestCaseByUserId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
