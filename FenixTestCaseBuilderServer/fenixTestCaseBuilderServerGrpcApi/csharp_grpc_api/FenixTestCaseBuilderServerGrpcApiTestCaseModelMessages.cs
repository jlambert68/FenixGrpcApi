// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestCaseModelMessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SubCustodyServer {

  /// <summary>Holder for reflection information generated from FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestCaseModelMessages.proto</summary>
  public static partial class FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestCaseModelMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CnpGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5peFRlc3RDYXNlQnVp",
            "bGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJH",
            "cnBjQXBpX1Rlc3RDYXNlTW9kZWxNZXNzYWdlcy5wcm90bxIhZmVuaXhUZXN0",
            "Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvGnxGZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlci9mZW5p",
            "eFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNBcGkvZmVuaXhUZXN0Q2FzZUJ1",
            "aWxkZXJTZXJ2ZXJHcnBjQXBpX0dlbmVyYWxNZXNzYWdlc0FuZEVudW1zLnBy",
            "b3RvIsMEChRUZXN0Q2FzZU1vZGVsTWVzc2FnZRIdChVUZXN0Q2FzZU1vZGVs",
            "QXNTdHJpbmcYASABKAkSHgoWRmlyc3RNYXR1cmVFbGVtZW50VXVpZBgCIAEo",
            "CRJjChVUZXN0Q2FzZU1vZGVsRWxlbWVudHMYAyADKAsyRC5mZW5peFRlc3RD",
            "YXNlQnVpbGRlclNlcnZlckdycGNBcGkuTWF0dXJlVGVzdENhc2VNb2RlbEVs",
            "ZW1lbnRNZXNzYWdlEnIKFVRlc3RDYXNlTW9kZWxDb21tYW5kcxgEIAMoCzJT",
            "LmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5UZXN0Q2FzZU1v",
            "ZGVsTWVzc2FnZS5UZXN0Q2FzZU1vZGVsQ29tbWFuZE1lc3NhZ2UakgIKG1Rl",
            "c3RDYXNlTW9kZWxDb21tYW5kTWVzc2FnZRJXChNUZXN0Q2FzZUNvbW1hbmRU",
            "eXBlGAEgASgOMjouZmVuaXhUZXN0Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBp",
            "LlRlc3RDYXNlQ29tbWFuZFR5cGVFbnVtEhsKE1Rlc3RDYXNlQ29tbWFuZE5h",
            "bWUYAiABKAkSFgoORmlyc3RQYXJhbWV0ZXIYAyABKAkSFwoPU2Vjb25kUGFy",
            "YW1ldGVyGAQgASgJEg4KBlVzZXJJZBgFIAEoCRI8ChhDb21tYW5kRXhlY3V0",
            "ZWRUaW1lU3RhbXAYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "IqYBChtJbW1hdHVyZUVsZW1lbnRNb2RlbE1lc3NhZ2USIAoYRmlyc3RJbW1h",
            "dHVyZUVsZW1lbnRVdWlkGAEgASgJEmUKFVRlc3RDYXNlTW9kZWxFbGVtZW50",
            "cxgCIAMoCzJGLmZlbml4VGVzdENhc2VCdWlsZGVyU2VydmVyR3JwY0FwaS5J",
            "bW1hdHVyZVRlc3RDYXNlTW9kZWxFbGVtZW50TWVzc2FnZSLLAgohTWF0dXJl",
            "VGVzdENhc2VNb2RlbEVsZW1lbnRNZXNzYWdlEhsKE09yaWdpbmFsRWxlbWVu",
            "dFV1aWQYASABKAkSGwoTT3JpZ2luYWxFbGVtZW50TmFtZRgCIAEoCRIZChFN",
            "YXR1cmVFbGVtZW50VXVpZBgDIAEoCRIbChNQcmV2aW91c0VsZW1lbnRVdWlk",
            "GAQgASgJEhcKD05leHRFbGVtZW50VXVpZBgFIAEoCRIdChVGaXJzdENoaWxk",
            "RWxlbWVudFV1aWQYBiABKAkSGQoRUGFyZW50RWxlbWVudFV1aWQYByABKAkS",
            "YQoYVGVzdENhc2VNb2RlbEVsZW1lbnRUeXBlGAggASgOMj8uZmVuaXhUZXN0",
            "Q2FzZUJ1aWxkZXJTZXJ2ZXJHcnBjQXBpLlRlc3RDYXNlTW9kZWxFbGVtZW50",
            "VHlwZUVudW0izwIKI0ltbWF0dXJlVGVzdENhc2VNb2RlbEVsZW1lbnRNZXNz",
            "YWdlEhsKE09yaWdpbmFsRWxlbWVudFV1aWQYASABKAkSGwoTT3JpZ2luYWxF",
            "bGVtZW50TmFtZRgCIAEoCRIbChNJbW1hdHVyZUVsZW1lbnRVdWlkGAMgASgJ",
            "EhsKE1ByZXZpb3VzRWxlbWVudFV1aWQYBCABKAkSFwoPTmV4dEVsZW1lbnRV",
            "dWlkGAUgASgJEh0KFUZpcnN0Q2hpbGRFbGVtZW50VXVpZBgGIAEoCRIZChFQ",
            "YXJlbnRFbGVtZW50VXVpZBgHIAEoCRJhChhUZXN0Q2FzZU1vZGVsRWxlbWVu",
            "dFR5cGUYCCABKA4yPy5mZW5peFRlc3RDYXNlQnVpbGRlclNlcnZlckdycGNB",
            "cGkuVGVzdENhc2VNb2RlbEVsZW1lbnRUeXBlRW51bUIiWg0uL2dvX2dycGNf",
            "YXBpqgIQU3ViQ3VzdG9keVNlcnZlcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiGeneralMessagesAndEnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseModelMessage), global::SubCustodyServer.TestCaseModelMessage.Parser, new[]{ "TestCaseModelAsString", "FirstMatureElementUuid", "TestCaseModelElements", "TestCaseModelCommands" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.TestCaseModelMessage.Types.TestCaseModelCommandMessage), global::SubCustodyServer.TestCaseModelMessage.Types.TestCaseModelCommandMessage.Parser, new[]{ "TestCaseCommandType", "TestCaseCommandName", "FirstParameter", "SecondParameter", "UserId", "CommandExecutedTimeStamp" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureElementModelMessage), global::SubCustodyServer.ImmatureElementModelMessage.Parser, new[]{ "FirstImmatureElementUuid", "TestCaseModelElements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.MatureTestCaseModelElementMessage), global::SubCustodyServer.MatureTestCaseModelElementMessage.Parser, new[]{ "OriginalElementUuid", "OriginalElementName", "MatureElementUuid", "PreviousElementUuid", "NextElementUuid", "FirstChildElementUuid", "ParentElementUuid", "TestCaseModelElementType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SubCustodyServer.ImmatureTestCaseModelElementMessage), global::SubCustodyServer.ImmatureTestCaseModelElementMessage.Parser, new[]{ "OriginalElementUuid", "OriginalElementName", "ImmatureElementUuid", "PreviousElementUuid", "NextElementUuid", "FirstChildElementUuid", "ParentElementUuid", "TestCaseModelElementType" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A message holding the complete model of the TestCase together with the steps to create the model
  /// </summary>
  public sealed partial class TestCaseModelMessage : pb::IMessage<TestCaseModelMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestCaseModelMessage> _parser = new pb::MessageParser<TestCaseModelMessage>(() => new TestCaseModelMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestCaseModelMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseModelMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseModelMessage(TestCaseModelMessage other) : this() {
      testCaseModelAsString_ = other.testCaseModelAsString_;
      firstMatureElementUuid_ = other.firstMatureElementUuid_;
      testCaseModelElements_ = other.testCaseModelElements_.Clone();
      testCaseModelCommands_ = other.testCaseModelCommands_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestCaseModelMessage Clone() {
      return new TestCaseModelMessage(this);
    }

    /// <summary>Field number for the "TestCaseModelAsString" field.</summary>
    public const int TestCaseModelAsStringFieldNumber = 1;
    private string testCaseModelAsString_ = "";
    /// <summary>
    /// The string representation of the TestCase, e.g. 'TC=B1-TICX(B11-TI-B12-TIX-B11X)-B1' - The last TIX could be used to clean up the environment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestCaseModelAsString {
      get { return testCaseModelAsString_; }
      set {
        testCaseModelAsString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstMatureElementUuid" field.</summary>
    public const int FirstMatureElementUuidFieldNumber = 2;
    private string firstMatureElementUuid_ = "";
    /// <summary>
    /// The UUID of first element in the TestCase-model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstMatureElementUuid {
      get { return firstMatureElementUuid_; }
      set {
        firstMatureElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestCaseModelElements" field.</summary>
    public const int TestCaseModelElementsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SubCustodyServer.MatureTestCaseModelElementMessage> _repeated_testCaseModelElements_codec
        = pb::FieldCodec.ForMessage(26, global::SubCustodyServer.MatureTestCaseModelElementMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.MatureTestCaseModelElementMessage> testCaseModelElements_ = new pbc::RepeatedField<global::SubCustodyServer.MatureTestCaseModelElementMessage>();
    /// <summary>
    /// All elements in the TestCase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.MatureTestCaseModelElementMessage> TestCaseModelElements {
      get { return testCaseModelElements_; }
    }

    /// <summary>Field number for the "TestCaseModelCommands" field.</summary>
    public const int TestCaseModelCommandsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SubCustodyServer.TestCaseModelMessage.Types.TestCaseModelCommandMessage> _repeated_testCaseModelCommands_codec
        = pb::FieldCodec.ForMessage(34, global::SubCustodyServer.TestCaseModelMessage.Types.TestCaseModelCommandMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.TestCaseModelMessage.Types.TestCaseModelCommandMessage> testCaseModelCommands_ = new pbc::RepeatedField<global::SubCustodyServer.TestCaseModelMessage.Types.TestCaseModelCommandMessage>();
    /// <summary>
    /// The model of The TestCase
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.TestCaseModelMessage.Types.TestCaseModelCommandMessage> TestCaseModelCommands {
      get { return testCaseModelCommands_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestCaseModelMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestCaseModelMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestCaseModelAsString != other.TestCaseModelAsString) return false;
      if (FirstMatureElementUuid != other.FirstMatureElementUuid) return false;
      if(!testCaseModelElements_.Equals(other.testCaseModelElements_)) return false;
      if(!testCaseModelCommands_.Equals(other.testCaseModelCommands_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestCaseModelAsString.Length != 0) hash ^= TestCaseModelAsString.GetHashCode();
      if (FirstMatureElementUuid.Length != 0) hash ^= FirstMatureElementUuid.GetHashCode();
      hash ^= testCaseModelElements_.GetHashCode();
      hash ^= testCaseModelCommands_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TestCaseModelAsString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestCaseModelAsString);
      }
      if (FirstMatureElementUuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstMatureElementUuid);
      }
      testCaseModelElements_.WriteTo(output, _repeated_testCaseModelElements_codec);
      testCaseModelCommands_.WriteTo(output, _repeated_testCaseModelCommands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TestCaseModelAsString.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TestCaseModelAsString);
      }
      if (FirstMatureElementUuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstMatureElementUuid);
      }
      testCaseModelElements_.WriteTo(ref output, _repeated_testCaseModelElements_codec);
      testCaseModelCommands_.WriteTo(ref output, _repeated_testCaseModelCommands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestCaseModelAsString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseModelAsString);
      }
      if (FirstMatureElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstMatureElementUuid);
      }
      size += testCaseModelElements_.CalculateSize(_repeated_testCaseModelElements_codec);
      size += testCaseModelCommands_.CalculateSize(_repeated_testCaseModelCommands_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestCaseModelMessage other) {
      if (other == null) {
        return;
      }
      if (other.TestCaseModelAsString.Length != 0) {
        TestCaseModelAsString = other.TestCaseModelAsString;
      }
      if (other.FirstMatureElementUuid.Length != 0) {
        FirstMatureElementUuid = other.FirstMatureElementUuid;
      }
      testCaseModelElements_.Add(other.testCaseModelElements_);
      testCaseModelCommands_.Add(other.testCaseModelCommands_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TestCaseModelAsString = input.ReadString();
            break;
          }
          case 18: {
            FirstMatureElementUuid = input.ReadString();
            break;
          }
          case 26: {
            testCaseModelElements_.AddEntriesFrom(input, _repeated_testCaseModelElements_codec);
            break;
          }
          case 34: {
            testCaseModelCommands_.AddEntriesFrom(input, _repeated_testCaseModelCommands_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TestCaseModelAsString = input.ReadString();
            break;
          }
          case 18: {
            FirstMatureElementUuid = input.ReadString();
            break;
          }
          case 26: {
            testCaseModelElements_.AddEntriesFrom(ref input, _repeated_testCaseModelElements_codec);
            break;
          }
          case 34: {
            testCaseModelCommands_.AddEntriesFrom(ref input, _repeated_testCaseModelCommands_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TestCaseModelMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// One command that describe one change to the TestCase
      /// </summary>
      public sealed partial class TestCaseModelCommandMessage : pb::IMessage<TestCaseModelCommandMessage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TestCaseModelCommandMessage> _parser = new pb::MessageParser<TestCaseModelCommandMessage>(() => new TestCaseModelCommandMessage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TestCaseModelCommandMessage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::SubCustodyServer.TestCaseModelMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestCaseModelCommandMessage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestCaseModelCommandMessage(TestCaseModelCommandMessage other) : this() {
          testCaseCommandType_ = other.testCaseCommandType_;
          testCaseCommandName_ = other.testCaseCommandName_;
          firstParameter_ = other.firstParameter_;
          secondParameter_ = other.secondParameter_;
          userId_ = other.userId_;
          commandExecutedTimeStamp_ = other.commandExecutedTimeStamp_ != null ? other.commandExecutedTimeStamp_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TestCaseModelCommandMessage Clone() {
          return new TestCaseModelCommandMessage(this);
        }

        /// <summary>Field number for the "TestCaseCommandType" field.</summary>
        public const int TestCaseCommandTypeFieldNumber = 1;
        private global::SubCustodyServer.TestCaseCommandTypeEnum testCaseCommandType_ = global::SubCustodyServer.TestCaseCommandTypeEnum.NewTestcase;
        /// <summary>
        /// The type of command that was used
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::SubCustodyServer.TestCaseCommandTypeEnum TestCaseCommandType {
          get { return testCaseCommandType_; }
          set {
            testCaseCommandType_ = value;
          }
        }

        /// <summary>Field number for the "TestCaseCommandName" field.</summary>
        public const int TestCaseCommandNameFieldNumber = 2;
        private string testCaseCommandName_ = "";
        /// <summary>
        /// The name of command
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TestCaseCommandName {
          get { return testCaseCommandName_; }
          set {
            testCaseCommandName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "FirstParameter" field.</summary>
        public const int FirstParameterFieldNumber = 3;
        private string firstParameter_ = "";
        /// <summary>
        /// The first parameter, an UUID, in the command
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FirstParameter {
          get { return firstParameter_; }
          set {
            firstParameter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "SecondParameter" field.</summary>
        public const int SecondParameterFieldNumber = 4;
        private string secondParameter_ = "";
        /// <summary>
        /// The second parameter, an UUID, in the command
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SecondParameter {
          get { return secondParameter_; }
          set {
            secondParameter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "UserId" field.</summary>
        public const int UserIdFieldNumber = 5;
        private string userId_ = "";
        /// <summary>
        /// User Id for the person executing the command
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "CommandExecutedTimeStamp" field.</summary>
        public const int CommandExecutedTimeStampFieldNumber = 6;
        private global::Google.Protobuf.WellKnownTypes.Timestamp commandExecutedTimeStamp_;
        /// <summary>
        /// The TimeStamp when the Command was executed
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp CommandExecutedTimeStamp {
          get { return commandExecutedTimeStamp_; }
          set {
            commandExecutedTimeStamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TestCaseModelCommandMessage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TestCaseModelCommandMessage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TestCaseCommandType != other.TestCaseCommandType) return false;
          if (TestCaseCommandName != other.TestCaseCommandName) return false;
          if (FirstParameter != other.FirstParameter) return false;
          if (SecondParameter != other.SecondParameter) return false;
          if (UserId != other.UserId) return false;
          if (!object.Equals(CommandExecutedTimeStamp, other.CommandExecutedTimeStamp)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TestCaseCommandType != global::SubCustodyServer.TestCaseCommandTypeEnum.NewTestcase) hash ^= TestCaseCommandType.GetHashCode();
          if (TestCaseCommandName.Length != 0) hash ^= TestCaseCommandName.GetHashCode();
          if (FirstParameter.Length != 0) hash ^= FirstParameter.GetHashCode();
          if (SecondParameter.Length != 0) hash ^= SecondParameter.GetHashCode();
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          if (commandExecutedTimeStamp_ != null) hash ^= CommandExecutedTimeStamp.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (TestCaseCommandType != global::SubCustodyServer.TestCaseCommandTypeEnum.NewTestcase) {
            output.WriteRawTag(8);
            output.WriteEnum((int) TestCaseCommandType);
          }
          if (TestCaseCommandName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestCaseCommandName);
          }
          if (FirstParameter.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FirstParameter);
          }
          if (SecondParameter.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SecondParameter);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(UserId);
          }
          if (commandExecutedTimeStamp_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(CommandExecutedTimeStamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (TestCaseCommandType != global::SubCustodyServer.TestCaseCommandTypeEnum.NewTestcase) {
            output.WriteRawTag(8);
            output.WriteEnum((int) TestCaseCommandType);
          }
          if (TestCaseCommandName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(TestCaseCommandName);
          }
          if (FirstParameter.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FirstParameter);
          }
          if (SecondParameter.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SecondParameter);
          }
          if (UserId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(UserId);
          }
          if (commandExecutedTimeStamp_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(CommandExecutedTimeStamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TestCaseCommandType != global::SubCustodyServer.TestCaseCommandTypeEnum.NewTestcase) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestCaseCommandType);
          }
          if (TestCaseCommandName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TestCaseCommandName);
          }
          if (FirstParameter.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstParameter);
          }
          if (SecondParameter.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SecondParameter);
          }
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          if (commandExecutedTimeStamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommandExecutedTimeStamp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TestCaseModelCommandMessage other) {
          if (other == null) {
            return;
          }
          if (other.TestCaseCommandType != global::SubCustodyServer.TestCaseCommandTypeEnum.NewTestcase) {
            TestCaseCommandType = other.TestCaseCommandType;
          }
          if (other.TestCaseCommandName.Length != 0) {
            TestCaseCommandName = other.TestCaseCommandName;
          }
          if (other.FirstParameter.Length != 0) {
            FirstParameter = other.FirstParameter;
          }
          if (other.SecondParameter.Length != 0) {
            SecondParameter = other.SecondParameter;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          if (other.commandExecutedTimeStamp_ != null) {
            if (commandExecutedTimeStamp_ == null) {
              CommandExecutedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            CommandExecutedTimeStamp.MergeFrom(other.CommandExecutedTimeStamp);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                TestCaseCommandType = (global::SubCustodyServer.TestCaseCommandTypeEnum) input.ReadEnum();
                break;
              }
              case 18: {
                TestCaseCommandName = input.ReadString();
                break;
              }
              case 26: {
                FirstParameter = input.ReadString();
                break;
              }
              case 34: {
                SecondParameter = input.ReadString();
                break;
              }
              case 42: {
                UserId = input.ReadString();
                break;
              }
              case 50: {
                if (commandExecutedTimeStamp_ == null) {
                  CommandExecutedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(CommandExecutedTimeStamp);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                TestCaseCommandType = (global::SubCustodyServer.TestCaseCommandTypeEnum) input.ReadEnum();
                break;
              }
              case 18: {
                TestCaseCommandName = input.ReadString();
                break;
              }
              case 26: {
                FirstParameter = input.ReadString();
                break;
              }
              case 34: {
                SecondParameter = input.ReadString();
                break;
              }
              case 42: {
                UserId = input.ReadString();
                break;
              }
              case 50: {
                if (commandExecutedTimeStamp_ == null) {
                  CommandExecutedTimeStamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(CommandExecutedTimeStamp);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A message holding the model for Immature elements, e.g. TestInstructions and pre-created TestInstructionContainers
  /// </summary>
  public sealed partial class ImmatureElementModelMessage : pb::IMessage<ImmatureElementModelMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmatureElementModelMessage> _parser = new pb::MessageParser<ImmatureElementModelMessage>(() => new ImmatureElementModelMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImmatureElementModelMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureElementModelMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureElementModelMessage(ImmatureElementModelMessage other) : this() {
      firstImmatureElementUuid_ = other.firstImmatureElementUuid_;
      testCaseModelElements_ = other.testCaseModelElements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureElementModelMessage Clone() {
      return new ImmatureElementModelMessage(this);
    }

    /// <summary>Field number for the "FirstImmatureElementUuid" field.</summary>
    public const int FirstImmatureElementUuidFieldNumber = 1;
    private string firstImmatureElementUuid_ = "";
    /// <summary>
    /// The UUID of first element in the Immature element structure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstImmatureElementUuid {
      get { return firstImmatureElementUuid_; }
      set {
        firstImmatureElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestCaseModelElements" field.</summary>
    public const int TestCaseModelElementsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SubCustodyServer.ImmatureTestCaseModelElementMessage> _repeated_testCaseModelElements_codec
        = pb::FieldCodec.ForMessage(18, global::SubCustodyServer.ImmatureTestCaseModelElementMessage.Parser);
    private readonly pbc::RepeatedField<global::SubCustodyServer.ImmatureTestCaseModelElementMessage> testCaseModelElements_ = new pbc::RepeatedField<global::SubCustodyServer.ImmatureTestCaseModelElementMessage>();
    /// <summary>
    /// All elements in the immature element structure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SubCustodyServer.ImmatureTestCaseModelElementMessage> TestCaseModelElements {
      get { return testCaseModelElements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImmatureElementModelMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImmatureElementModelMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstImmatureElementUuid != other.FirstImmatureElementUuid) return false;
      if(!testCaseModelElements_.Equals(other.testCaseModelElements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstImmatureElementUuid.Length != 0) hash ^= FirstImmatureElementUuid.GetHashCode();
      hash ^= testCaseModelElements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FirstImmatureElementUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstImmatureElementUuid);
      }
      testCaseModelElements_.WriteTo(output, _repeated_testCaseModelElements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FirstImmatureElementUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstImmatureElementUuid);
      }
      testCaseModelElements_.WriteTo(ref output, _repeated_testCaseModelElements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstImmatureElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstImmatureElementUuid);
      }
      size += testCaseModelElements_.CalculateSize(_repeated_testCaseModelElements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImmatureElementModelMessage other) {
      if (other == null) {
        return;
      }
      if (other.FirstImmatureElementUuid.Length != 0) {
        FirstImmatureElementUuid = other.FirstImmatureElementUuid;
      }
      testCaseModelElements_.Add(other.testCaseModelElements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstImmatureElementUuid = input.ReadString();
            break;
          }
          case 18: {
            testCaseModelElements_.AddEntriesFrom(input, _repeated_testCaseModelElements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FirstImmatureElementUuid = input.ReadString();
            break;
          }
          case 18: {
            testCaseModelElements_.AddEntriesFrom(ref input, _repeated_testCaseModelElements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// One Mature TestCaseElement which hold type, reference to previous, next and parent elements
  /// </summary>
  public sealed partial class MatureTestCaseModelElementMessage : pb::IMessage<MatureTestCaseModelElementMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatureTestCaseModelElementMessage> _parser = new pb::MessageParser<MatureTestCaseModelElementMessage>(() => new MatureTestCaseModelElementMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatureTestCaseModelElementMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestCaseModelElementMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestCaseModelElementMessage(MatureTestCaseModelElementMessage other) : this() {
      originalElementUuid_ = other.originalElementUuid_;
      originalElementName_ = other.originalElementName_;
      matureElementUuid_ = other.matureElementUuid_;
      previousElementUuid_ = other.previousElementUuid_;
      nextElementUuid_ = other.nextElementUuid_;
      firstChildElementUuid_ = other.firstChildElementUuid_;
      parentElementUuid_ = other.parentElementUuid_;
      testCaseModelElementType_ = other.testCaseModelElementType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatureTestCaseModelElementMessage Clone() {
      return new MatureTestCaseModelElementMessage(this);
    }

    /// <summary>Field number for the "OriginalElementUuid" field.</summary>
    public const int OriginalElementUuidFieldNumber = 1;
    private string originalElementUuid_ = "";
    /// <summary>
    /// The original elements UUID, e.g. a TestInstruction unique UUID set by client system
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalElementUuid {
      get { return originalElementUuid_; }
      set {
        originalElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalElementName" field.</summary>
    public const int OriginalElementNameFieldNumber = 2;
    private string originalElementName_ = "";
    /// <summary>
    /// The original elements Name, e.g. a TestInstruction Name set by client system
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalElementName {
      get { return originalElementName_; }
      set {
        originalElementName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MatureElementUuid" field.</summary>
    public const int MatureElementUuidFieldNumber = 3;
    private string matureElementUuid_ = "";
    /// <summary>
    /// The UUID that is created in the TestCase to give it a unique id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatureElementUuid {
      get { return matureElementUuid_; }
      set {
        matureElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PreviousElementUuid" field.</summary>
    public const int PreviousElementUuidFieldNumber = 4;
    private string previousElementUuid_ = "";
    /// <summary>
    /// The UUID of the previous element. When there are no previous element then this field is populated with 'MatureElementUuid'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviousElementUuid {
      get { return previousElementUuid_; }
      set {
        previousElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NextElementUuid" field.</summary>
    public const int NextElementUuidFieldNumber = 5;
    private string nextElementUuid_ = "";
    /// <summary>
    /// The UUID of the previous element. When there are no next element then this field is populated with current element UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextElementUuid {
      get { return nextElementUuid_; }
      set {
        nextElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstChildElementUuid" field.</summary>
    public const int FirstChildElementUuidFieldNumber = 6;
    private string firstChildElementUuid_ = "";
    /// <summary>
    /// The UUID of the first child element. Only applicable when this is a TestInstructionContainer. When there are no child element then this field is populated with 'MatureElementUuid'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstChildElementUuid {
      get { return firstChildElementUuid_; }
      set {
        firstChildElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParentElementUuid" field.</summary>
    public const int ParentElementUuidFieldNumber = 7;
    private string parentElementUuid_ = "";
    /// <summary>
    /// The UUID of the parent, TestInstructionContainer. When there are no parent element then this field is populated with 'MatureElementUuid'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentElementUuid {
      get { return parentElementUuid_; }
      set {
        parentElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestCaseModelElementType" field.</summary>
    public const int TestCaseModelElementTypeFieldNumber = 8;
    private global::SubCustodyServer.TestCaseModelElementTypeEnum testCaseModelElementType_ = global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond;
    /// <summary>
    /// The specific type of this TestCase-element
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseModelElementTypeEnum TestCaseModelElementType {
      get { return testCaseModelElementType_; }
      set {
        testCaseModelElementType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatureTestCaseModelElementMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatureTestCaseModelElementMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginalElementUuid != other.OriginalElementUuid) return false;
      if (OriginalElementName != other.OriginalElementName) return false;
      if (MatureElementUuid != other.MatureElementUuid) return false;
      if (PreviousElementUuid != other.PreviousElementUuid) return false;
      if (NextElementUuid != other.NextElementUuid) return false;
      if (FirstChildElementUuid != other.FirstChildElementUuid) return false;
      if (ParentElementUuid != other.ParentElementUuid) return false;
      if (TestCaseModelElementType != other.TestCaseModelElementType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OriginalElementUuid.Length != 0) hash ^= OriginalElementUuid.GetHashCode();
      if (OriginalElementName.Length != 0) hash ^= OriginalElementName.GetHashCode();
      if (MatureElementUuid.Length != 0) hash ^= MatureElementUuid.GetHashCode();
      if (PreviousElementUuid.Length != 0) hash ^= PreviousElementUuid.GetHashCode();
      if (NextElementUuid.Length != 0) hash ^= NextElementUuid.GetHashCode();
      if (FirstChildElementUuid.Length != 0) hash ^= FirstChildElementUuid.GetHashCode();
      if (ParentElementUuid.Length != 0) hash ^= ParentElementUuid.GetHashCode();
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) hash ^= TestCaseModelElementType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OriginalElementUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OriginalElementUuid);
      }
      if (OriginalElementName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OriginalElementName);
      }
      if (MatureElementUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MatureElementUuid);
      }
      if (PreviousElementUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PreviousElementUuid);
      }
      if (NextElementUuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NextElementUuid);
      }
      if (FirstChildElementUuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FirstChildElementUuid);
      }
      if (ParentElementUuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParentElementUuid);
      }
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TestCaseModelElementType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OriginalElementUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OriginalElementUuid);
      }
      if (OriginalElementName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OriginalElementName);
      }
      if (MatureElementUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MatureElementUuid);
      }
      if (PreviousElementUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PreviousElementUuid);
      }
      if (NextElementUuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NextElementUuid);
      }
      if (FirstChildElementUuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FirstChildElementUuid);
      }
      if (ParentElementUuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParentElementUuid);
      }
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TestCaseModelElementType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OriginalElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalElementUuid);
      }
      if (OriginalElementName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalElementName);
      }
      if (MatureElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatureElementUuid);
      }
      if (PreviousElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviousElementUuid);
      }
      if (NextElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextElementUuid);
      }
      if (FirstChildElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstChildElementUuid);
      }
      if (ParentElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentElementUuid);
      }
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestCaseModelElementType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatureTestCaseModelElementMessage other) {
      if (other == null) {
        return;
      }
      if (other.OriginalElementUuid.Length != 0) {
        OriginalElementUuid = other.OriginalElementUuid;
      }
      if (other.OriginalElementName.Length != 0) {
        OriginalElementName = other.OriginalElementName;
      }
      if (other.MatureElementUuid.Length != 0) {
        MatureElementUuid = other.MatureElementUuid;
      }
      if (other.PreviousElementUuid.Length != 0) {
        PreviousElementUuid = other.PreviousElementUuid;
      }
      if (other.NextElementUuid.Length != 0) {
        NextElementUuid = other.NextElementUuid;
      }
      if (other.FirstChildElementUuid.Length != 0) {
        FirstChildElementUuid = other.FirstChildElementUuid;
      }
      if (other.ParentElementUuid.Length != 0) {
        ParentElementUuid = other.ParentElementUuid;
      }
      if (other.TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        TestCaseModelElementType = other.TestCaseModelElementType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OriginalElementUuid = input.ReadString();
            break;
          }
          case 18: {
            OriginalElementName = input.ReadString();
            break;
          }
          case 26: {
            MatureElementUuid = input.ReadString();
            break;
          }
          case 34: {
            PreviousElementUuid = input.ReadString();
            break;
          }
          case 42: {
            NextElementUuid = input.ReadString();
            break;
          }
          case 50: {
            FirstChildElementUuid = input.ReadString();
            break;
          }
          case 58: {
            ParentElementUuid = input.ReadString();
            break;
          }
          case 64: {
            TestCaseModelElementType = (global::SubCustodyServer.TestCaseModelElementTypeEnum) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OriginalElementUuid = input.ReadString();
            break;
          }
          case 18: {
            OriginalElementName = input.ReadString();
            break;
          }
          case 26: {
            MatureElementUuid = input.ReadString();
            break;
          }
          case 34: {
            PreviousElementUuid = input.ReadString();
            break;
          }
          case 42: {
            NextElementUuid = input.ReadString();
            break;
          }
          case 50: {
            FirstChildElementUuid = input.ReadString();
            break;
          }
          case 58: {
            ParentElementUuid = input.ReadString();
            break;
          }
          case 64: {
            TestCaseModelElementType = (global::SubCustodyServer.TestCaseModelElementTypeEnum) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// One Immature TestCaseElement which hold type, reference to previous, next and parent elements
  /// </summary>
  public sealed partial class ImmatureTestCaseModelElementMessage : pb::IMessage<ImmatureTestCaseModelElementMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ImmatureTestCaseModelElementMessage> _parser = new pb::MessageParser<ImmatureTestCaseModelElementMessage>(() => new ImmatureTestCaseModelElementMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImmatureTestCaseModelElementMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SubCustodyServer.FenixTestCaseBuilderServerGrpcApiTestCaseModelMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestCaseModelElementMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestCaseModelElementMessage(ImmatureTestCaseModelElementMessage other) : this() {
      originalElementUuid_ = other.originalElementUuid_;
      originalElementName_ = other.originalElementName_;
      immatureElementUuid_ = other.immatureElementUuid_;
      previousElementUuid_ = other.previousElementUuid_;
      nextElementUuid_ = other.nextElementUuid_;
      firstChildElementUuid_ = other.firstChildElementUuid_;
      parentElementUuid_ = other.parentElementUuid_;
      testCaseModelElementType_ = other.testCaseModelElementType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImmatureTestCaseModelElementMessage Clone() {
      return new ImmatureTestCaseModelElementMessage(this);
    }

    /// <summary>Field number for the "OriginalElementUuid" field.</summary>
    public const int OriginalElementUuidFieldNumber = 1;
    private string originalElementUuid_ = "";
    /// <summary>
    /// The original elements UUID, e.g. a TestInstruction unique UUID set by client system
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalElementUuid {
      get { return originalElementUuid_; }
      set {
        originalElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OriginalElementName" field.</summary>
    public const int OriginalElementNameFieldNumber = 2;
    private string originalElementName_ = "";
    /// <summary>
    /// The original elements Name, e.g. a TestInstruction Name set by client system
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalElementName {
      get { return originalElementName_; }
      set {
        originalElementName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImmatureElementUuid" field.</summary>
    public const int ImmatureElementUuidFieldNumber = 3;
    private string immatureElementUuid_ = "";
    /// <summary>
    /// The UUID that is used for creating a TestInstructionContainer structure to be able to hold together the structure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImmatureElementUuid {
      get { return immatureElementUuid_; }
      set {
        immatureElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PreviousElementUuid" field.</summary>
    public const int PreviousElementUuidFieldNumber = 4;
    private string previousElementUuid_ = "";
    /// <summary>
    /// The UUID of the previous element. When there are no previous element then this field is populated with 'ImmatureElementUuid'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreviousElementUuid {
      get { return previousElementUuid_; }
      set {
        previousElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NextElementUuid" field.</summary>
    public const int NextElementUuidFieldNumber = 5;
    private string nextElementUuid_ = "";
    /// <summary>
    /// The UUID of the previous element. When there are no next element then this field is populated with 'ImmatureElementUuid'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextElementUuid {
      get { return nextElementUuid_; }
      set {
        nextElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstChildElementUuid" field.</summary>
    public const int FirstChildElementUuidFieldNumber = 6;
    private string firstChildElementUuid_ = "";
    /// <summary>
    /// The UUID of the first child element. Only applicable when this is a TestInstructionContainer. When there are no child element then this field is populated with 'ImmatureElementUuid'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstChildElementUuid {
      get { return firstChildElementUuid_; }
      set {
        firstChildElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ParentElementUuid" field.</summary>
    public const int ParentElementUuidFieldNumber = 7;
    private string parentElementUuid_ = "";
    /// <summary>
    /// The UUID of the parent, TestInstructionContainer. When there are no parent element then this field is populated with 'ImmatureElementUuid'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentElementUuid {
      get { return parentElementUuid_; }
      set {
        parentElementUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestCaseModelElementType" field.</summary>
    public const int TestCaseModelElementTypeFieldNumber = 8;
    private global::SubCustodyServer.TestCaseModelElementTypeEnum testCaseModelElementType_ = global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond;
    /// <summary>
    /// The specific type of this TestCase-element
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SubCustodyServer.TestCaseModelElementTypeEnum TestCaseModelElementType {
      get { return testCaseModelElementType_; }
      set {
        testCaseModelElementType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImmatureTestCaseModelElementMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImmatureTestCaseModelElementMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginalElementUuid != other.OriginalElementUuid) return false;
      if (OriginalElementName != other.OriginalElementName) return false;
      if (ImmatureElementUuid != other.ImmatureElementUuid) return false;
      if (PreviousElementUuid != other.PreviousElementUuid) return false;
      if (NextElementUuid != other.NextElementUuid) return false;
      if (FirstChildElementUuid != other.FirstChildElementUuid) return false;
      if (ParentElementUuid != other.ParentElementUuid) return false;
      if (TestCaseModelElementType != other.TestCaseModelElementType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OriginalElementUuid.Length != 0) hash ^= OriginalElementUuid.GetHashCode();
      if (OriginalElementName.Length != 0) hash ^= OriginalElementName.GetHashCode();
      if (ImmatureElementUuid.Length != 0) hash ^= ImmatureElementUuid.GetHashCode();
      if (PreviousElementUuid.Length != 0) hash ^= PreviousElementUuid.GetHashCode();
      if (NextElementUuid.Length != 0) hash ^= NextElementUuid.GetHashCode();
      if (FirstChildElementUuid.Length != 0) hash ^= FirstChildElementUuid.GetHashCode();
      if (ParentElementUuid.Length != 0) hash ^= ParentElementUuid.GetHashCode();
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) hash ^= TestCaseModelElementType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OriginalElementUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OriginalElementUuid);
      }
      if (OriginalElementName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OriginalElementName);
      }
      if (ImmatureElementUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ImmatureElementUuid);
      }
      if (PreviousElementUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PreviousElementUuid);
      }
      if (NextElementUuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NextElementUuid);
      }
      if (FirstChildElementUuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FirstChildElementUuid);
      }
      if (ParentElementUuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParentElementUuid);
      }
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TestCaseModelElementType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OriginalElementUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OriginalElementUuid);
      }
      if (OriginalElementName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OriginalElementName);
      }
      if (ImmatureElementUuid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ImmatureElementUuid);
      }
      if (PreviousElementUuid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PreviousElementUuid);
      }
      if (NextElementUuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NextElementUuid);
      }
      if (FirstChildElementUuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FirstChildElementUuid);
      }
      if (ParentElementUuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ParentElementUuid);
      }
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        output.WriteRawTag(64);
        output.WriteEnum((int) TestCaseModelElementType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OriginalElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalElementUuid);
      }
      if (OriginalElementName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalElementName);
      }
      if (ImmatureElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImmatureElementUuid);
      }
      if (PreviousElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreviousElementUuid);
      }
      if (NextElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextElementUuid);
      }
      if (FirstChildElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstChildElementUuid);
      }
      if (ParentElementUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentElementUuid);
      }
      if (TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestCaseModelElementType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImmatureTestCaseModelElementMessage other) {
      if (other == null) {
        return;
      }
      if (other.OriginalElementUuid.Length != 0) {
        OriginalElementUuid = other.OriginalElementUuid;
      }
      if (other.OriginalElementName.Length != 0) {
        OriginalElementName = other.OriginalElementName;
      }
      if (other.ImmatureElementUuid.Length != 0) {
        ImmatureElementUuid = other.ImmatureElementUuid;
      }
      if (other.PreviousElementUuid.Length != 0) {
        PreviousElementUuid = other.PreviousElementUuid;
      }
      if (other.NextElementUuid.Length != 0) {
        NextElementUuid = other.NextElementUuid;
      }
      if (other.FirstChildElementUuid.Length != 0) {
        FirstChildElementUuid = other.FirstChildElementUuid;
      }
      if (other.ParentElementUuid.Length != 0) {
        ParentElementUuid = other.ParentElementUuid;
      }
      if (other.TestCaseModelElementType != global::SubCustodyServer.TestCaseModelElementTypeEnum.B0Bond) {
        TestCaseModelElementType = other.TestCaseModelElementType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OriginalElementUuid = input.ReadString();
            break;
          }
          case 18: {
            OriginalElementName = input.ReadString();
            break;
          }
          case 26: {
            ImmatureElementUuid = input.ReadString();
            break;
          }
          case 34: {
            PreviousElementUuid = input.ReadString();
            break;
          }
          case 42: {
            NextElementUuid = input.ReadString();
            break;
          }
          case 50: {
            FirstChildElementUuid = input.ReadString();
            break;
          }
          case 58: {
            ParentElementUuid = input.ReadString();
            break;
          }
          case 64: {
            TestCaseModelElementType = (global::SubCustodyServer.TestCaseModelElementTypeEnum) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OriginalElementUuid = input.ReadString();
            break;
          }
          case 18: {
            OriginalElementName = input.ReadString();
            break;
          }
          case 26: {
            ImmatureElementUuid = input.ReadString();
            break;
          }
          case 34: {
            PreviousElementUuid = input.ReadString();
            break;
          }
          case 42: {
            NextElementUuid = input.ReadString();
            break;
          }
          case 50: {
            FirstChildElementUuid = input.ReadString();
            break;
          }
          case 58: {
            ParentElementUuid = input.ReadString();
            break;
          }
          case 64: {
            TestCaseModelElementType = (global::SubCustodyServer.TestCaseModelElementTypeEnum) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
