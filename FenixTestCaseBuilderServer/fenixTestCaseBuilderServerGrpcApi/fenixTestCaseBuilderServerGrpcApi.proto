syntax = "proto3";
package fenixTestCaseBuilderServerGrpcApi;
option go_package ="./go_grpc_api";
import "google/protobuf/timestamp.proto";


// ****************************************************************************************************
// General messages and Enumerations

// Used to have client and server in sync with using the same proto file version
enum CurrentFenixTestCaseBuilderProtoFileVersionEnum {
    VERSION_0_0 = 0 [deprecated = true];
    VERSION_0_1 = 1 [deprecated = true];
    VERSION_0_2 = 2; // Current version
}

// Error codes - for now a test
enum ErrorCodesEnum {
    OK = 0;
    ERROR_UNKNOWN_CALLER = 1;
    ERROR_WRONG_PROTO_FILE_VERSION = 2;
    ERROR_UNSPECIFIED = 3;
    ERROR_DATABASE_PROBLEM = 4;
}

// How a TestInstructionContainer is processed
enum TestInstructionContainerExecutionTypeEnum {
    PARALLELLED_PROCESSED = 0; // Children in container is parallelled processed
    SERIAL_PROCESSED = 1; // Children in container is serial processed
}

// TestInstructionContainer Child Type
enum TestInstructionContainerChildTypeEnum {
    TESTINSTRUCTION = 0; // Child os of type TestInstruction
    TESTINSTRUCTIONCONTAINER = 1; // Child os of type TestInstructionContainer
}

// Parameter used for Empty inputs, only containing current proto-file version
message EmptyParameter {
    CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient = 1; // The latest proto file version number to be used
}

// Ack/Nack- Response message with comment
message AckNackResponse {
    bool AckNack = 1; // True=Ack, False=Nack
    string Comments = 2; //Comments if needed
    repeated ErrorCodesEnum ErrorCodes = 3; // List of Error codes
}

// ****************************************************************************************************
// Fenix TestCase-builder server service definition. (Will support Test Suite building in feature, and will then be renamed)

service FenixTestCaseBuilderServerGrpcServices {

    // Admin

    //Anyone can check if Fenix TestCase Builder server is alive with this service
    rpc AreYouAlive (EmptyParameter) returns (AckNackResponse) {
    }

    // *** Get data from server ***

    // * Available for user to use in TestCase *

    // The TestCase Builder asks for all TestInstructions and Pre-defined TestInstructionContainer that the user can add to a TestCase
    rpc GetTestInstructionsAndTestContainers (UserIdentificationMessage) returns (TestInstructionsAndTestContainersMessage) {
    }

    // The TestCase Builder asks for which TestInstructions and Pre-defined TestInstructionContainer that the user has pinned in the GUI
    rpc GetPinnedTestInstructionsAndTestContainers (UserIdentificationMessage) returns (TestInstructionsAndTestContainersMessage) {
    }

    // * Used in a TestCase *

    // The TestCase Builder asks for all TestInstructions and TestInstructionContainer that is in a specific TestCase
    rpc GetTestInstructionsAndTestContainersInTestCase (UserIdentificationMessage) returns (TestInstructionsAndTestContainersInTestCaseMessage) {
    }

    // The TestCase Builder asks for one TestInstructionAttribute that belongs to a TestInstruction
    rpc GetTestInstructionAttributes (UserIdentificationMessage) returns (TestInstructionAttributeMessages) {
    }



    // *** Send data to server ***

    // * Available for user to use in TestCase *

    // The TestCase Builder sends all TestInstructions and Pre-defined TestInstructionContainer that the user has pinned in the GUI
    rpc SavePinnedTestInstructionsAndTestContainers (PinnedTestInstructionsAndTestContainersMessage) returns (AckNackResponse) {
    }

    // * Used in a TestCase *

    // The TestCase Builder send for all TestInstructions and TestInstructionContainer that is in a specific TestCase
    rpc SaveTestInstructionsAndTestContainersFromTestCase (TestInstructionsAndTestContainersInTestCaseToBeSavedMessage) returns (AckNackResponse) {
    }



}

// ****************************************************************************************************
// Client Identification Message

// Message Holding information about who is the calling client
message UserIdentificationMessage {
    string UserId = 1; // The Users Id, SEB S-id will be used for SEB
    CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient = 2; // The latest proto file version number to be used
}

// ****************************************************************************************************
// TestInstructionsAndTestContainersMessage

// Message holding all supported TestInstructions and Pre-defined TestInstructionContainers that the user can use when building TestCases
message TestInstructionsAndTestContainersMessage {
    repeated TestInstructionMessage TestInstructionMessages = 1; // List of all TestInstruction
    repeated TestInstructionContainerMessage TestInstructionContainerMessages = 2; // List of all pre-defined TestInstructionContainers
    AckNackResponse ackNackResponse = 3; // Hold all error messages, if there are any. Message also gives of everything was OK or not
}

// ****************************************************************************************************
// PinnedTestInstructionsAndTestContainersMessage

// Message holding TestInstructions and Pre-defined TestInstructionContainers that the user can has pinned in the GUI
message PinnedTestInstructionsAndTestContainersMessage {
    string UserId = 1; // The Users Id, SEB S-id will be used for SEB
    CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient = 2; // The latest proto file version number to be used
    repeated PinnedTestInstructionMessage PinnedTestInstructionMessages = 3; // List of all pinned, by user, TestInstructions
    repeated PinnedTestInstructionContainerMessage PinnedTestInstructionContainerMessages = 4; //  List of all pinned, by user, pre-defined TestInstructionContainers
}

// ****************************************************************************************************
// TestInstructionMessage

// Message holding one TestInstruction
message TestInstructionMessage {
    string DomainUuid = 1; // The Domain, UUID, to be tested with this TestInstruction
    string DomainName = 2; // The Domain, Name, to be tested with this TestInstruction
    string TestInstructionUuid = 3; // TestInstruction UUID
    string TestInstructionName = 4; // TestInstruction Name
    string TestInstructionTypeUuid = 5; // The Type(Group), Uuid, of TestInstruction
    string TestInstructionTypeName = 6; // The Type(Group), Name, of TestInstruction
    string TestInstructionDescription = 7; // The description of the TestInstruction
    string TestInstructionMouseOverText = 8; // The mouse over text when hovering over TestInstruction
    bool Deprecated = 9; // Indicates that this TestInstruction shouldn't be used anymore
    bool Enabled = 10; // TestInstruction can be disabled when the user shouldn't use it anymore
    uint32 MajorVersionNumber = 11; // Change in Major Version Number means that user must act on change
    uint32 MinorVersionNumber = 12; // Change in Minor Version Number means that user must NOT act on change
    google.protobuf.Timestamp UpdatedTimeStamp = 13; // The TimeStamp when the TestInstruction was last updated
}

// ****************************************************************************************************
// Pre-created TestInstructionContainerMessage

// Message holding one TestInstructionContainer and reference to its children
message TestInstructionContainerMessage {
    string DomainUuid = 1; // The Domain, UUID, to be tested with this TestInstruction
    string DomainName = 2; // The Domain, Name, to be tested with this TestInstruction
    string TestInstructionContainerUuid = 3; // TestInstructionContainer UUID
    string TestInstructionContainerName = 4; // TestInstructionContainer Name
    string TestInstructionContainerTypeUuid = 5; // The Type(Group), Uuid, of TestInstructionContainer
    string TestInstructionContainerTypeName = 6; // The Type(Group), Name, of TestInstructionContainer
    string TestInstructionContainerDescription = 7; // The description of the TestInstructionContainer
    string TestInstructionContainerMouseOverText = 8; // The mouse over text when hovering over TestInstructionContainer
    bool Deprecated = 9; // Indicates that this TestInstructionContainer shouldn't be used anymore
    bool Enabled = 10; // TestInstructionContainer can be disabled when the user shouldn't use it anymore
    uint32 MajorVersionNumber = 11; // Change in Major Version Number means that user must act on change
    uint32 MinorVersionNumber = 12; // Change in Minor Version Number means that user must NOT act on change
    google.protobuf.Timestamp UpdatedTimeStamp = 13; // The TimeStamp when the TestInstructionContainer was last updated
    TestInstructionContainerExecutionTypeEnum TestInstructionContainerExecutionType = 14; // Defines if the children of TestInstructionContainer is processed in parallel or in seral
    repeated TestInstructionContainerChildMessage TestInstructionContainerChildren = 15; // A list of the children[UUID's] in the this container. Can be TestInstructions or TestInstructionContainers. Order is specified by the order in the array
}

// ****************************************************************************************************
// TestInstructionInTestCaseMessage

// Message holding one TestInstruction that exists in a TestCase
message TestInstructionInTestCaseMessage {
    string TestCaseUuid = 1; // The TestCase, UUID, for the TestInstruction
    string TestCaseName = 2; // The TestCase, NAme, for the TestInstruction
    string DomainUuid = 3; // The Domain, UUID, to be tested with this TestInstruction
    string DomainName = 4; // The Domain, Name, to be tested with this TestInstruction
    string TestInstructionUuid = 5; // TestInstruction UUID
    string TestInstructionName = 6; // TestInstruction Name
    string TestInstructionTypeUuid = 7; // The Type(Group), Uuid, of TestInstruction
    string TestInstructionTypeName = 8; // The Type(Group), Name, of TestInstruction
    string TestInstructionDescription = 9; // The description of the TestInstruction
    string TestInstructionMouseOverText = 10; // The mouse over text when hovering over TestInstruction
    bool Deprecated = 11; // Indicates that this TestInstruction shouldn't be used anymore
    bool Enabled = 12; // TestInstruction can be disabled when the user shouldn't use it anymore
    uint32 MajorVersionNumber = 13; // Change in Major Version Number means that user must act on change
    uint32 MinorVersionNumber = 14; // Change in Minor Version Number means that user must NOT act on change
    google.protobuf.Timestamp UpdatedTimeStamp = 15; // The TimeStamp when the TestInstruction was last updated
    string ParentTestInstructionContainerUuid = 16;// A UUID-reference to TestInstructionContainer where this TestInstruction exists
}

// ****************************************************************************************************
// TestInstructionContainerInTestCaseMessage

// Message holding one TestInstructionContainer, and reference to its children, that Exists in a TestCase
message TestInstructionContainerInTestCaseMessage {
    string TestCaseUuid = 1; // The TestCase, UUID, for the TestInstructionContainer
    string TestCaseName = 2; // The TestCase, NAme, for the TestInstructionContainer
    string DomainUuid = 3; // The Domain, UUID, to be tested with this TestInstruction
    string DomainName = 4; // The Domain, Name, to be tested with this TestInstruction
    string TestInstructionContainerUuid = 5; // TestInstructionContainer UUID
    string TestInstructionContainerName = 6; // TestInstructionContainer Name
    string TestInstructionContainerTypeUuid = 7; // The Type(Group), Uuid, of TestInstructionContainer
    string TestInstructionContainerTypeName = 8; // The Type(Group), Name, of TestInstructionContainer
    string TestInstructionContainerDescription = 9; // The description of the TestInstructionContainer
    string TestInstructionContainerMouseOverText = 10; // The mouse over text when hovering over TestInstructionContainer
    bool Deprecated = 11; // Indicates that this TestInstructionContainer shouldn't be used anymore
    bool Enabled = 12; // TestInstructionContainer can be disabled when the user shouldn't use it anymore
    uint32 MajorVersionNumber = 13; // Change in Major Version Number means that user must act on change
    uint32 MinorVersionNumber = 14; // Change in Minor Version Number means that user must NOT act on change
    google.protobuf.Timestamp UpdatedTimeStamp = 15; // The TimeStamp when the TestInstructionContainer was last updated
    TestInstructionContainerExecutionTypeEnum TestInstructionContainerExecutionType = 16; // Defines if the children of TestInstructionContainer is processed in parallel or in seral
    repeated TestInstructionContainerChildMessage TestInstructionContainerChildren = 17; // A list of the children[UUID's] in the this container. Can be TestInstructions or TestInstructionContainers. Order is specified by the order in the array
    string ParentTestInstructionContainerUuid = 18; // A UUID-reference to TestInstructionContainer where this TestInstructionContainer exists. If this UUID == TestCaseUuid the it's the main (first) TestInstructionContainer of the TestCase
}

// ****************************************************************************************************
// TestInstructionContainerChildrenMessage

//Message holding one child and its type (TestInstruction or TestInstructionContainer)
message TestInstructionContainerChildMessage {
    string TestInstructionContainerChildUuid = 1; // The UUID for the child, can be from a TestInstruction or a TestInstructionContainer
    TestInstructionContainerChildTypeEnum TestInstructionContainerChildType = 2; // The type of the child, 'TestInstruction' or 'TestInstructionContainer'
}

// ****************************************************************************************************
// PinnedTestInstructionMessage

// Message holding one Pinned TestInstruction
message PinnedTestInstructionMessage {
    string TestInstructionUuid = 1; // TestInstruction UUID
    string TestInstructionName = 2; // TestInstruction Name
}

// ****************************************************************************************************
// PinnedTestInstructionContainerMessage

// Message holding one Pinned TestInstructionContainer
message PinnedTestInstructionContainerMessage {
    string TestInstructionContainerUuid = 1; // TestInstruction UUID
    string TestInstructionContainerName = 2; // TestInstruction Name
}

// ****************************************************************************************************
// TestInstructionsAndTestContainersInTestCaseMessage

// Message holding all TestInstructions and TestInstructionContainers that is in the TestCases
message TestInstructionsAndTestContainersInTestCaseMessage {
    string UserId = 1; // The Users Id, SEB S-id will be used for SEB
    CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient = 2; // The latest proto file version number to be used
    repeated TestInstructionInTestCaseMessage TestInstructionMessages = 1; // List of all TestInstruction
    repeated TestInstructionContainerInTestCaseMessage TestInstructionContainerMessages = 2; // List of all pre-defined TestInstructionContainers
}


// ****************************************************************************************************
// TestInstructionAttributeMessages

// Message holding one Pinned TestInstructionContainer
message TestInstructionAttributeMessages {
    repeated TestInstructionAttribute TestInstructionAttributes = 1; // A list of all TestInstructionAttributes that belongs to one TestInstruction
    AckNackResponse ackNackResponse = 2; // Hold all error messages, if there are any. Message also gives if everything was OK or not
}


// A specific Attribute for a Test Instruction
message TestInstructionAttribute {
    string TestInstructionAttributeGuid = 1; // The unique guid for the TestInstructionAttribute, set by plugin
    string TestInstructionAttributeName = 2; // The name of the TestInstructionAttribute
    string TestInstructionAttributeTypeGuid = 3; // The unique guid for the TestInstructionAttribute-type, set by plugin
    string TestInstructionAttributeTypeName = 4; // The name for the TestInstructionAttribute-type, set by plugin
    string TestInstructionAttributeDescription = 5; // The description of the TestInstructionAttribute
    string TestInstructionAttributeMouseOver = 6; // The mouse over text for the TestInstructionAttribute
    bool TestInstructionAttributeVisible = 7; // Should the TestInstructionAttribute be visible in attributes list in GUI or not
    bool TestInstructionAttributeEnable = 8; // Should the TestInstructionAttribute be enabled or not
    bool TestInstructionAttributeMandatory = 9; // Should the TestInstructionAttribute be mandatory or not
    bool TestInstructionAttributeVisibleInTestCaseArea = 10; // Should the TestInstructionAttribute be visible in TestInstruction at TestCase Area in GUI or not
    bool TestInstructionAttributeIsDeprecated = 11; // Indicates that this TestInstruction attribute shouldn't be used anymore
    TestInstructionAttributeTypeEnum TestInstructionAttributeType = 12; // The choosen Enum value for what type the instruction attribute should be

    // The TestInstructionAttribute can one of the folowing type: "TextBox", "ComboBox", "FileSelector", "FunctionSelector"
    enum TestInstructionAttributeTypeEnum {
        TEXTBOX = 0; // Defines that TestInstructionAttribute of type "TextBox"
        COMBOBOX = 1; // Defines that TestInstructionAttriebute of type ComboBox
        FILESELECTOR = 2; // Defines that TestInstructionAttribute of type FileSelector
        FUNCTIONSLECTOR = 3; // Defines that TestInstructionAttribute of type FunctionSelector
    }

    TestInstructionAttributeInputTextBoxProperty inputTextBoxProperty = 13; // If the attribute is a textbox then all properties can be found in structure
    // Properties for TextBox attribute
    message TestInstructionAttributeInputTextBoxProperty {
        string TestInstructionAttributeInputTextBoxGuid = 1; // The unique guid for the TestInstructionAttributeInputTextBoxProperties, set by plugin
        string TestInstructionAttributeInputTextBoxName = 2; // The name of the TestInstructionAttributeInputTextBoxProperties
        bool TextBoxEditable = 3; // Should the the TextBox be editable or not
        string TextBoxInputMask = 4; // Input mask for the TextBox
        string TextBoxAttributeTypeGuid = 5; // The unique guid for the Type of the TextBox. Used for data manipulation
        string TextBoxAttributeTypeName = 6; // The Name for the Type of the TextBox.
        string TextBoxAttributeValue = 7; // The value for the the TextBox, used for preset values
    }

    TestInstructionAttributeInputComboBoxProperty InputComboBoxProperty = 14; // If the attribute is a combobox then all properties can be found in structure
    // Properties for ComboBox attribute
    message TestInstructionAttributeInputComboBoxProperty {
        string TestInstructionAttributeComboBoxGuid = 1; // The unique guid for the TestInstructionAttributeComboBoxProperties, set by plugin
        string TestInstructionAttributeComboBoxName = 2; // The name of the TestInstructionAttributeComboBoxProperties
        bool ComboBoxEditable = 3; // Should the the ComboBox be editable or not
        string ComboBoxInputMask = 4; // Input mask for the ComboBox
        string ComboBoxAttributeTypeGuid = 5; // The unique guid for the Type of the ComboBox Used for data manipulation
        string ComboBoxAttributeTypeName = 6; // The Name for the Type of the ComboBox
        string ComboBoxAttributeValueGuid = 7; // The guid of the value for the the ComboBox, used for preset values
        string ComboBoxAttributeValue = 8; // The value for the the ComboBox, used for preset values
    }

    TestInstructionAttributeInputFileSelectorProperty InputFileSelectorProperty = 15; // If the attribute is a combobox then all properties can be found in structure
    // Properties for FileSelector attribute
    message TestInstructionAttributeInputFileSelectorProperty {
        string TestInstructionAttributeFileSelectorGuid = 1; // The unique guid for the TestInstructionAttributeFileSelectorProperties, set by plugin
        string TestInstructionAttributeFileSelectorName = 2; // The name of the TestInstructionAttributeFileSelectorProperties
    }




    //TODO Create Attribute property for functions
}




