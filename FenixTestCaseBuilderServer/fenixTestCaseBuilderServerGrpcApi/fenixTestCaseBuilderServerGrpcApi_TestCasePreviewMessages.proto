syntax = "proto3";
package fenixTestCaseBuilderServerGrpcApi;
option go_package = "./go_grpc_api";
//import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_GeneralMessagesAndEnums.proto";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_MetaDataInTestCaseAndTestSuite.proto";


// Message holden a preview and the hash of the preview  of the TestCase. Only used for looking at and no editing
message TestCasePreviewMessage {
  TestCasePreviewStructureMessage TestCasePreview = 1; // The Preview message of the TestCase
    string TestCasePreviewHash = 2; // The hash of the Preview message
}

// Message holding the full preview of the TestCase
// Update and sync with 'fenixExecutionServerGrpcApi_Messages.proto'
message TestCasePreviewStructureMessage {
  string TestCaseName = 1; // The name of the TestCase
  string DomainThatOwnTheTestCase = 2; // The Domain that owns the TestCase
  string TestCaseDescription = 3; // The Description of the TestCase
  repeated TestCaseStructureObjectMessage TestCaseStructureObjects = 4; // A list of the different components of the TestCase, TIC, TI and Attributes
  string ComplexTextualDescription = 5; // A textual description of the TestCase-model
  string TestCaseUuid = 6; // The TestCaseUuid
  string TestCaseVersion = 7; // The version of the TestCase
  string LastSavedByUserOnComputer = 12; // The logged in user on the computer that last saved the TestCase
  string LastSavedByUserGCPAuthorization = 13; // The authorized user towards GCP that last saved the TestCase
  string LastSavedTimeStamp = 14; // The Timestamp when the TestCase first was last saved
  map<string, SelectedMetaDataValueMessage> SelectedMetaDataValuesMap = 15; // Map containing all selected MetaDataValues. For MultiSelect each values is added.  The Map key = 'OwnerDomainUuid.MetaDataGroupName.MetaDataName.MetaDataNameValue'


  // A message holding one TestCaseStructureObject, like TIC, TI or TI's attributes
  message TestCaseStructureObjectMessage {
    TestCaseStructureObjectTypeEnum TestCaseStructureObjectType = 1; // The type of TestCaseStructureObject, TIC, TI, Attribute
    uint32 IndentationLevel = 2; // How much should the object be move to create the tree like structure
    string TestInstructionContainerName = 3; // The Name of the TestInstructionContainer
    string TestInstructionContainerUuid = 4; // The Uuid of the TestInstructionContainer
    bool TestInstructionIsSerialProcessed = 5; // Is the TestInstructionContainer 'serial' or 'parallel' processed
    string TestInstructionName = 6; // The Name of the TestInstruction
    string TestInstructionUuid = 7; // The Uuid of the TestInstruction
    string TestInstructionColor = 8; // The color code used for the TestInstruction
    repeated TestInstructionAttributeMessage TestInstructionAttributes = 9; // The Attributes for the TestInstruction

    // Message holding one TestInstructionAttribute
    message TestInstructionAttributeMessage {
      string AttributeName = 1; // The name of the Attribute
      string AttributeValue = 2; // The value of the Attribute
      string AttributeGroupName = 3; // The Group name for the Attribute in the UI
    }
  }

  // The Type of object in the PreView
  enum TestCaseStructureObjectTypeEnum {
    TestCaseStructureObjectTypeEnum_DEFAULT_NOT_SET = 0; //Value used for when the variable is not actively set
    TestInstructionContainer = 1; // Type is a TestInstructionContainer
    TestInstruction = 2; // Type is a TestInstruction
    TestInstructionAttribute = 3; // Type is a TestInstructionAttribute
  }

  // The Selected MetaData with all its values
  message SelectedMetaDataValueMessage {
    string OwnerDomainUuid = 1; // The Domain, Uuid, that owns the TestCase
    string OwnerDomainName = 2; // The Domain, Name, that owns the TestCase
    string MetaDataGroupName = 3; // The name of the MetaData-Group
    string MetaDataName = 4; // The name of the MetaData-post
    string MetaDataNameValue = 5; // The MetaDataValue
    MetaDataSelectTypeEnum SelectType = 6;  // Is the MetaData-post single- or multi-select
    bool IsMandatory = 7;
  }

}

/*
TestCaseName
Domain that 'Own' the TestCase
TestCaseDescription
:::TestCaseStructure:::
TIC-Serial - Name
  TIC-Parallel - Name
    TI - Name, Color
      :::Attributes-list:::
      AttributeName
      AttributeValue
      AttributeType
Complex Textual Description

TestCaseUuid
TestCaseVersion
Create by (Logged into computer)
Create by (Logged into GCP)
Created TimeStamp
Last saved by (Logged into computer)
Last saved by (Logged into GCP)
Last saved TimeStamp
 */