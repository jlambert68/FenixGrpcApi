syntax = "proto3";
package fenixTestCaseBuilderServerGrpcApi;
option go_package = "./go_grpc_api";
option csharp_namespace = "SubCustodyServer";

import "google/protobuf/timestamp.proto";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_GeneralMessagesAndEnums.proto";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestCaseModelMessages.proto";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionMessages.proto";
import "FenixTestCaseBuilderServer/fenixTestCaseBuilderServerGrpcApi/fenixTestCaseBuilderServerGrpcApi_TestInstructionContainerMessages.proto";

// All messages in this file is used to define the TestCase

// ****************************************************************************************************
// Get TestCase Request Message

// Message holding information about who is the user and which TestCase that is requested
message GetTestCaseRequestMessage {
  string UserId = 1; // The Users Id, SEB S-id will be used for SEB
  CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient = 2; // The latest proto file version number to be used
  string TestCaseUuid = 3; // The TestCase, UUID, that is requested from DB-Server
}
// ****************************************************************************************************
// List all TestCases Request Message

// Message holding information about who is the user and which TestCase that is requested
message ListTestCasesRequestMessage {
  string UserId = 1; // The Users Id, SEB S-id will be used for SEB
  CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient = 2; // The latest proto file version number to be used

}

// ****************************************************************************************************
// List all TestCases Response Message

// Message a list of TestCase
message ListTestCasesResponseMessage {
  repeated BasicTestCaseInformationMessage BasicTestCaseInformation = 1; // List of TestCases with their Basic information
}


// ****************************************************************************************************
// Get MetadataItems-Request Message

// Message holding information about who is the user and from which Domain and System to request the MetaDataItems
message GetTestCaseMetaDataItemsRequestMessage {
  string UserId = 1; // The Users Id, SEB S-id will be used for SEB
  CurrentFenixTestCaseBuilderProtoFileVersionEnum ProtoFileVersionUsedByClient = 2; // The latest proto file version number to be used
  string DomainUuid = 3; // The Domain, UUID, who has the MetaDataItems
  string DomainName = 4; // The Domain, Name, who has the MetaDataItems
}

// ****************************************************************************************************
// The list of all Meta MetadataItems Message that belongs to a certain Domain

// Message holding all MetaDataItems for a specific Domain
message GetTestCaseMetaDataItemsResponseMessage {
  TestCaseMetaDataMessage TestCaseMetaData = 1; // A list of all available MetaData that must be filled in by the user
}


// ****************************************************************************************************
// TestCaseMessage

// A message holding one TestCase
message TestCaseBasicInformationMessage {

  BasicTestCaseInformationMessage BasicTestCaseInformation = 1; // All Basic information about the TestCase

  CreatedAndUpdatedInformationMessage CreatedAndUpdatedInformation = 2; // Information regarding who did what and when
  // Message holding information about changes to the TestCase, who and when
  message CreatedAndUpdatedInformationMessage  {
    google.protobuf.Timestamp AddedToTestCaseTimeStamp = 1; // The TimeStamp when the TestCase was first created
    string AddedToTestCaseByUserId = 2; // Which user added the TestCase
    google.protobuf.Timestamp LastUpdatedInTestCaseTimeStamp = 3; // The TimeStamp when the TestCase was updated
    string LastUpdatedInTestCaseByUserId = 4; // Which user was the last to update the TestCase
    google.protobuf.Timestamp DeletedFromTestCaseTimeStamp = 5; // The TimeStamp when the TestCase was deleted
    string DeletedFromTestCaseByUserId = 6; // Which user deleted the the TestCase
  }

  TestCaseModelMessage TestCaseModel = 3; // Hold the model of how the TestCase is constructed
  TestCaseMetaDataMessage TestCaseMetaData = 4; // Holds the metadata for the TestCase, set by the user to classify the TestCase
  TestCaseFilesMessage TestCaseFiles = 5; // All files connected to the TestCase

  UserIdentificationMessage UserIdentification = 6; // Identifies the current user and which proto-file version that is used by client
}

// ****************************************************************************************************
// BasicTestCaseInformationMessage

// Message holding Basic information for one TestCase
message BasicTestCaseInformationMessage {
  NonEditableBasicInformationMessage NonEditableInformation = 1; // All Basic information that can be shown in GUI but can't be changed by the user
  EditableBasicInformationMessage EditableInformation = 2; // All Basic information that can be shown in GUI and can be changed by the user
  // Not used right now - InvisibleBasicInformationMessage InvisibleBasicInformation = 3; // All Basic information that is not directly shown in GUI and can't be changed by the user

  // Message holding All basic information that can be shown in GUI but can't be changed by the user
  message NonEditableBasicInformationMessage {
    string TestCaseUuid = 1; // The TestCase, UUID, set by TestCase-builder
    string DomainUuid = 2; // The Domain, UUID, where the TestCase 'has its home'
    string DomainName = 3; // The Domain, Name, where the TestCase 'has its home'
    uint32  TestCaseVersion = 4; // Each time a TestCase is saved then the 'TestCaseVersion' will be incremented by +1
  }

  // Message holding all Basic information that can be shown in GUI and can be changed by the user
  message EditableBasicInformationMessage {
    string TestCaseName = 1; // The TestCase, Name, set in TestCase-builder
    string TestCaseDescription = 2; // The description of the TestCase
    //string TestCaseMouseOverText = 2; // The mouse over text when hovering over TestCase
  }

  // Message holding all Basic information that is not directly shown in GUI and can't be changed by the user
  /* Not used right now
    message InvisibleBasicInformationMessage{
      bool Enabled = 1; // TestCase can be disabled when the user shouldn't use it anymore
    }

   */
}


// ****************************************************************************************************
// TestCaseMetaDataMessage

// Message holding all MetaDataparameters for the TestCase
message TestCaseMetaDataMessage {
  repeated MetaDataItemMessage MetaDataItems = 1; // List of all MetaDataItems with their values

  message MetaDataItemMessage {
    string MetaDataUuid = 1; // UUID for this MetaDataItem
    string MetaDataName = 2; // Name for this MetaDataItem
    string MetaDataGroupUuid = 3; // The group, UUID,  for this MetaDataItem, used to group stuff in the GUI
    string MetaDataGroupName = 4; // The group, Name  for this MetaDataItem, used as Label for the group in the GUI
    repeated MetaDataItemMessage AvailableMetaDataItems = 5; // A list of the available MetaDataItems that the user can chose from
    MetaDataItemMessage ChosenMetaDataItem = 6; // The chosen, by user, MetaDataItems

    // Message holding one MetaDataItem
    message MetaDataItemMessage {
      string MetaDataItemUuid = 1; // Unique UUID for the MetaDataItem
      string MetaDataItemValue = 2; // The value presented in the GUI and for the user to pick
      uint32 MetaDataItemIndex = 3; // A number deciding the presentation order
    }

  }

}


// ****************************************************************************************************
// TestCaseFilesMessage

// Message holding all that is added to the TestCase, either using 'File picker' or add in some other way
message TestCaseFilesMessage {
  repeated TestCaseFileMessage TestCaseFiles = 1; // A list of files that is added to the TestCase, in some way
  // Message holding one file and information about who did what and when
  message TestCaseFileMessage {
    string FileReferenceUuid = 1; // A unique, UUID, for file
    string FileReferenceName = 2; // A Name, for the file
    repeated bytes FileAsByteArray = 3; // The file encoded as byte array
  }

  CreatedAndUpdatedInformationMessage CreatedAndUpdatedInformation = 2; // Information regarding who did what and when
  // Message holding information about changes to the File, who and when
  message CreatedAndUpdatedInformationMessage  {
    google.protobuf.Timestamp AddedToTestCaseTimeStamp = 1; // The TimeStamp when the File was first added to the TestCase
    string AddedToTestCaseByUserId = 2; // Which user added the File to the TestCase
    google.protobuf.Timestamp LastUpdatedInTestCaseTimeStamp = 3; // The TimeStamp when the File was updated in the TestCase
    string LastUpdatedInTestCaseByUserId = 4; // Which user was the last to update the File in the TestCase
    google.protobuf.Timestamp DeletedFromTestCaseTimeStamp = 5; // The TimeStamp when the File was deleted from the TestCase
    string DeletedFromTestCaseByUserId = 6; // Which user deleted the File from the TestCase
  }


}


// ****************************************************************************************************
//  FullTestCaseMessage

// Message containing the full TestCase with all of its information

message FullTestCaseMessage {
  TestCaseBasicInformationMessage TestCaseBasicInformation = 1; // The basic information regarding the TestCase
  MatureTestInstructionsMessage MatureTestInstructions = 2; // All TestInstructions to be saved
  MatureTestInstructionContainersMessage MatureTestInstructionContainers = 3; // All TestInstructionContainers to be saved
  string MessageHash = 4; // Holds the hash of the above parts. Used for checking if something is changed in TestCase
}


// ****************************************************************************************************
//  GetDetailedTestCaseResponse

// Message response when TesterGui request a saved TestCase from Database

message GetDetailedTestCaseResponse {
  AckNackResponse ackNackResponse = 1; // Hold all error messages, if there are any. Message also gives of everything was OK or not
  FullTestCaseMessage DetailedTestCase = 2; // Holds one full TestCase with all data belonging to that TestCase
}

// ****************************************************************************************************
//  TestCasesHashRequest

// Message containing a list of TestCaseUuid's for which to get their Hashes as response

message TestCasesHashRequest {
  UserIdentificationMessage UserIdentification = 1; // User identification and users proto-file version
 repeated string TestCaseUuids = 2; // Holds a list of UUIDs for TestCases
}

// ****************************************************************************************************
//  TestCasesHashResponse

// Message containing a list of TestCase-Hash's

message TestCasesHashResponse {
  AckNackResponse AckNack = 1; // User identification and users proto-file version
  repeated TestCasesHashMessage TestCasesHashes = 2; // Holds a list of UUIDs and Hashes for TestCases

  message TestCasesHashMessage {
    string  TestCaseUuid = 1; // Holds the Uuid for the TestCase
    string  TestCaseHash = 2; // Holds the Hash for the TestCase
  }
}
