// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: FenixExecutionServer/fenixExecutionWorkerGrpcApi/fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub.proto

package go_grpc_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The TestInstructionAttribute can have one of the following types: "TextBox", "ComboBox", "FileSelector", "FunctionSelector"
// *** Must be synced with enum in 'fenixExecutionWorkerGrpcApi_GeneralMessagesAndEnums.proto'
type ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum int32

const (
	ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum_DEFAULT_NOT_SET ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum = 0 //Value used for when the variable is not actively set
	ProcessTestInstructionExecutionPubSubRequest_TEXTBOX                                          ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum = 1 // Defines that TestInstructionAttribute of type "TextBox"
	ProcessTestInstructionExecutionPubSubRequest_COMBOBOX                                         ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum = 2 // Defines that TestInstructionAttriebute of type ComboBox
	ProcessTestInstructionExecutionPubSubRequest_FILE_SELECTOR                                    ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum = 3 // Defines that TestInstructionAttribute of type FileSelector
	ProcessTestInstructionExecutionPubSubRequest_FUNCTION_SELECTOR                                ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum = 4 // Defines that TestInstructionAttribute of type FunctionSelector
)

// Enum value maps for ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum.
var (
	ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum_name = map[int32]string{
		0: "TestInstructionAttributeTypeEnum_DEFAULT_NOT_SET",
		1: "TEXTBOX",
		2: "COMBOBOX",
		3: "FILE_SELECTOR",
		4: "FUNCTION_SELECTOR",
	}
	ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum_value = map[string]int32{
		"TestInstructionAttributeTypeEnum_DEFAULT_NOT_SET": 0,
		"TEXTBOX":           1,
		"COMBOBOX":          2,
		"FILE_SELECTOR":     3,
		"FUNCTION_SELECTOR": 4,
	}
)

func (x ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum) Enum() *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum {
	p := new(ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum)
	*p = x
	return p
}

func (x ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_enumTypes[0].Descriptor()
}

func (ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum) Type() protoreflect.EnumType {
	return &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_enumTypes[0]
}

func (x ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum.Descriptor instead.
func (ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0, 0}
}

// Used to have client and server in sync with using the same proto file version
// *** Must be synced with enum in 'fenixExecutionWorkerGrpcApi_GeneralMessagesAndEnums.proto'
type ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum int32

const (
	ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum_DEFAULT_NOT_SET ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum = 0 //Value used for when the variable is not actively set
	// Deprecated: Marked as deprecated in FenixExecutionServer/fenixExecutionWorkerGrpcApi/fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub.proto.
	ProcessTestInstructionExecutionPubSubRequest_VERSION_0_0 ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum = 1
	// Deprecated: Marked as deprecated in FenixExecutionServer/fenixExecutionWorkerGrpcApi/fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub.proto.
	ProcessTestInstructionExecutionPubSubRequest_VERSION_0_1 ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum = 2
	// Deprecated: Marked as deprecated in FenixExecutionServer/fenixExecutionWorkerGrpcApi/fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub.proto.
	ProcessTestInstructionExecutionPubSubRequest_VERSION_0_2 ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum = 3
	// Deprecated: Marked as deprecated in FenixExecutionServer/fenixExecutionWorkerGrpcApi/fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub.proto.
	ProcessTestInstructionExecutionPubSubRequest_VERSION_0_3 ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum = 4
	ProcessTestInstructionExecutionPubSubRequest_VERSION_0_4 ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum = 5 // Current version
)

// Enum value maps for ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum.
var (
	ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum_name = map[int32]string{
		0: "CurrentFenixExecutionWorkerProtoFileVersionEnum_DEFAULT_NOT_SET",
		1: "VERSION_0_0",
		2: "VERSION_0_1",
		3: "VERSION_0_2",
		4: "VERSION_0_3",
		5: "VERSION_0_4",
	}
	ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum_value = map[string]int32{
		"CurrentFenixExecutionWorkerProtoFileVersionEnum_DEFAULT_NOT_SET": 0,
		"VERSION_0_0": 1,
		"VERSION_0_1": 2,
		"VERSION_0_2": 3,
		"VERSION_0_3": 4,
		"VERSION_0_4": 5,
	}
)

func (x ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum) Enum() *ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum {
	p := new(ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum)
	*p = x
	return p
}

func (x ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_enumTypes[1].Descriptor()
}

func (ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum) Type() protoreflect.EnumType {
	return &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_enumTypes[1]
}

func (x ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum.Descriptor instead.
func (ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum) EnumDescriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0, 1}
}

// Same format is used within PubSub-schema
// Request used by Execution Server to initiate an TestInstruction Execution by Execution Client
type ProcessTestInstructionExecutionPubSubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoFileVersionUsedByClient ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum `protobuf:"varint,1,opt,name=ProtoFileVersionUsedByClient,proto3,enum=fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum" json:"ProtoFileVersionUsedByClient,omitempty"` // The latest proto file version number to be used
	TestInstruction              *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage                `protobuf:"bytes,2,opt,name=TestInstruction,proto3" json:"TestInstruction,omitempty"`                                                                                                                                                          // The TestInstruction itself an its attributes
	TestData                     *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage                                `protobuf:"bytes,7,opt,name=TestData,proto3" json:"TestData,omitempty"`                                                                                                                                                                        // TestData used in TestExecution
}

func (x *ProcessTestInstructionExecutionPubSubRequest) Reset() {
	*x = ProcessTestInstructionExecutionPubSubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTestInstructionExecutionPubSubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTestInstructionExecutionPubSubRequest) ProtoMessage() {}

func (x *ProcessTestInstructionExecutionPubSubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest.ProtoReflect.Descriptor instead.
func (*ProcessTestInstructionExecutionPubSubRequest) Descriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessTestInstructionExecutionPubSubRequest) GetProtoFileVersionUsedByClient() ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum {
	if x != nil {
		return x.ProtoFileVersionUsedByClient
	}
	return ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum_DEFAULT_NOT_SET
}

func (x *ProcessTestInstructionExecutionPubSubRequest) GetTestInstruction() *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage {
	if x != nil {
		return x.TestInstruction
	}
	return nil
}

func (x *ProcessTestInstructionExecutionPubSubRequest) GetTestData() *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage {
	if x != nil {
		return x.TestData
	}
	return nil
}

type ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestInstructionExecutionUuid string                                                                          `protobuf:"bytes,1,opt,name=TestInstructionExecutionUuid,proto3" json:"TestInstructionExecutionUuid,omitempty"` // The unique uuid for the TestInstructionExecution, set by Fenix Execution Server
	TestInstructionUuid          string                                                                          `protobuf:"bytes,2,opt,name=TestInstructionUuid,proto3" json:"TestInstructionUuid,omitempty"`                   // TestInstruction UUID, set by Client system
	TestInstructionName          string                                                                          `protobuf:"bytes,3,opt,name=TestInstructionName,proto3" json:"TestInstructionName,omitempty"`                   // TestInstruction Name, set by Client system
	MajorVersionNumber           uint32                                                                          `protobuf:"varint,4,opt,name=MajorVersionNumber,proto3" json:"MajorVersionNumber,omitempty"`                    // Major Version Number
	MinorVersionNumber           uint32                                                                          `protobuf:"varint,5,opt,name=MinorVersionNumber,proto3" json:"MinorVersionNumber,omitempty"`                    // Minor Version Number
	TestInstructionAttributes    []*ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage `protobuf:"bytes,6,rep,name=TestInstructionAttributes,proto3" json:"TestInstructionAttributes,omitempty"`       // A list of all attributes for the TestInstruction
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) Reset() {
	*x = ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) ProtoMessage() {}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage.ProtoReflect.Descriptor instead.
func (*ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) Descriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) GetTestInstructionExecutionUuid() string {
	if x != nil {
		return x.TestInstructionExecutionUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) GetTestInstructionUuid() string {
	if x != nil {
		return x.TestInstructionUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) GetTestInstructionName() string {
	if x != nil {
		return x.TestInstructionName
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) GetMajorVersionNumber() uint32 {
	if x != nil {
		return x.MajorVersionNumber
	}
	return 0
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) GetMinorVersionNumber() uint32 {
	if x != nil {
		return x.MinorVersionNumber
	}
	return 0
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage) GetTestInstructionAttributes() []*ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage {
	if x != nil {
		return x.TestInstructionAttributes
	}
	return nil
}

type ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestInstructionAttributeType     ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum `protobuf:"varint,1,opt,name=TestInstructionAttributeType,proto3,enum=fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum" json:"TestInstructionAttributeType,omitempty"` // Defines witch type attribute; TEXTBOX, COMBOBOX...
	TestInstructionAttributeUuid     string                                                                        `protobuf:"bytes,2,opt,name=TestInstructionAttributeUuid,proto3" json:"TestInstructionAttributeUuid,omitempty"`                                                                                                                 // The unique uuid for the TestInstructionAttribute, set by client system
	TestInstructionAttributeName     string                                                                        `protobuf:"bytes,3,opt,name=TestInstructionAttributeName,proto3" json:"TestInstructionAttributeName,omitempty"`                                                                                                                 // The name of the TestInstructionAttribute
	AttributeValueAsString           string                                                                        `protobuf:"bytes,4,opt,name=AttributeValueAsString,proto3" json:"AttributeValueAsString,omitempty"`                                                                                                                             // The String-representation of the value
	AttributeValueUuid               string                                                                        `protobuf:"bytes,5,opt,name=AttributeValueUuid,proto3" json:"AttributeValueUuid,omitempty"`                                                                                                                                     // Combo-boxes can us a UUID as unique value behind the text visible in the combo-box
	TestInstructionAttributeTypeUuid string                                                                        `protobuf:"bytes,7,opt,name=TestInstructionAttributeTypeUuid,proto3" json:"TestInstructionAttributeTypeUuid,omitempty"`                                                                                                         // The unique uuid for the TestInstructionAttribute-type, used to extract certain attributes types in Connector (CA)
	TestInstructionAttributeTypeName string                                                                        `protobuf:"bytes,8,opt,name=TestInstructionAttributeTypeName,proto3" json:"TestInstructionAttributeTypeName,omitempty"`                                                                                                         // The name for the TestInstructionAttribute-type, used to group attributes in GUI
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) Reset() {
	*x = ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) ProtoMessage() {}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage.ProtoReflect.Descriptor instead.
func (*ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) Descriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) GetTestInstructionAttributeType() ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum {
	if x != nil {
		return x.TestInstructionAttributeType
	}
	return ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum_DEFAULT_NOT_SET
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) GetTestInstructionAttributeUuid() string {
	if x != nil {
		return x.TestInstructionAttributeUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) GetTestInstructionAttributeName() string {
	if x != nil {
		return x.TestInstructionAttributeName
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) GetAttributeValueAsString() string {
	if x != nil {
		return x.AttributeValueAsString
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) GetAttributeValueUuid() string {
	if x != nil {
		return x.AttributeValueUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) GetTestInstructionAttributeTypeUuid() string {
	if x != nil {
		return x.TestInstructionAttributeTypeUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage) GetTestInstructionAttributeTypeName() string {
	if x != nil {
		return x.TestInstructionAttributeTypeName
	}
	return ""
}

type ProcessTestInstructionExecutionPubSubRequest_TestDataMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestDataSetUuid           string                                                                                           `protobuf:"bytes,1,opt,name=TestDataSetUuid,proto3" json:"TestDataSetUuid,omitempty"`                     // Reference to TestDataSet held by client system to understand what testdata to use
	ManualOverrideForTestData []*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage `protobuf:"bytes,2,rep,name=ManualOverrideForTestData,proto3" json:"ManualOverrideForTestData,omitempty"` // If the user has done manual changes to testdata then that is specified here
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage) Reset() {
	*x = ProcessTestInstructionExecutionPubSubRequest_TestDataMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage) ProtoMessage() {}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest_TestDataMessage.ProtoReflect.Descriptor instead.
func (*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage) Descriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage) GetTestDataSetUuid() string {
	if x != nil {
		return x.TestDataSetUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage) GetManualOverrideForTestData() []*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage {
	if x != nil {
		return x.ManualOverrideForTestData
	}
	return nil
}

// Message Holding information about who is the calling client system
type ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainUuid                   string                                                                                       `protobuf:"bytes,1,opt,name=DomainUuid,proto3" json:"DomainUuid,omitempty"`                                                                                                                                                                    // The Domain that sends the message
	ExecutionDomainUuid          string                                                                                       `protobuf:"bytes,2,opt,name=ExecutionDomainUuid,proto3" json:"ExecutionDomainUuid,omitempty"`                                                                                                                                                  // The SubDomain, UUID, that executes this TestInstruction
	ProtoFileVersionUsedByClient ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum `protobuf:"varint,3,opt,name=ProtoFileVersionUsedByClient,proto3,enum=fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum" json:"ProtoFileVersionUsedByClient,omitempty"` // The latest proto file version number to be used
}

func (x *ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) Reset() {
	*x = ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) ProtoMessage() {
}

func (x *ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage.ProtoReflect.Descriptor instead.
func (*ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) Descriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) GetDomainUuid() string {
	if x != nil {
		return x.DomainUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) GetExecutionDomainUuid() string {
	if x != nil {
		return x.ExecutionDomainUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage) GetProtoFileVersionUsedByClient() ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum {
	if x != nil {
		return x.ProtoFileVersionUsedByClient
	}
	return ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum_DEFAULT_NOT_SET
}

type ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestDataSetAttributeUuid  string `protobuf:"bytes,1,opt,name=TestDataSetAttributeUuid,proto3" json:"TestDataSetAttributeUuid,omitempty"`   // A unique reference for the specified TestDataSetAttribute
	TestDataSetAttributeName  string `protobuf:"bytes,2,opt,name=TestDataSetAttributeName,proto3" json:"TestDataSetAttributeName,omitempty"`   // The name of the TestDataSetAttribute
	TestDataSetAttributeValue string `protobuf:"bytes,3,opt,name=TestDataSetAttributeValue,proto3" json:"TestDataSetAttributeValue,omitempty"` // The value for the TestDataSetAttribute to be used within the test
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) Reset() {
	*x = ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) ProtoMessage() {
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) ProtoReflect() protoreflect.Message {
	mi := &file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage.ProtoReflect.Descriptor instead.
func (*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) Descriptor() ([]byte, []int) {
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) GetTestDataSetAttributeUuid() string {
	if x != nil {
		return x.TestDataSetAttributeUuid
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) GetTestDataSetAttributeName() string {
	if x != nil {
		return x.TestDataSetAttributeName
	}
	return ""
}

func (x *ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage) GetTestDataSetAttributeValue() string {
	if x != nil {
		return x.TestDataSetAttributeValue
	}
	return ""
}

var File_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto protoreflect.FileDescriptor

var file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDesc = []byte{
	0x0a, 0x71, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41,
	0x70, 0x69, 0x2f, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x55, 0x73, 0x65, 0x64, 0x54, 0x6f, 0x67, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69,
	0x22, 0xb8, 0x15, 0x0a, 0x2c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0xbd, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x79, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47,
	0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x6e, 0x69, 0x78,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x93, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x69, 0x2e, 0x66, 0x65,
	0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x59, 0x2e, 0x66, 0x65, 0x6e, 0x69,
	0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd3,
	0x03, 0x0a, 0x1f, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x4d, 0x61,
	0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x4d, 0x69,
	0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0xa7, 0x01, 0x0a, 0x19, 0x54,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x69,
	0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x53,
	0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x19, 0x54, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x1a, 0xda, 0x04, 0x0a, 0x1f, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0xae, 0x01, 0x0a, 0x1c, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x6a, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62,
	0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x1c, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x1c, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x42, 0x0a,
	0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x20, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x20, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x20, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x20, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0xd1, 0x03, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12,
	0xb8, 0x01, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69,
	0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x7a, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x46, 0x6f, 0x72,
	0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x19, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x46,
	0x6f, 0x72, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xd8, 0x01, 0x0a, 0x20, 0x4d,
	0x61, 0x6e, 0x75, 0x61, 0x6c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x46, 0x6f, 0x72,
	0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x18, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x54, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x54,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x54,
	0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x54, 0x65, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x54, 0x65, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xb5, 0x02, 0x0a, 0x21, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x55, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0xbd, 0x01,
	0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x79, 0x2e, 0x66, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x47, 0x72, 0x70, 0x63, 0x41,
	0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x75, 0x62, 0x53, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x64, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x9d, 0x01,
	0x0a, 0x20, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x34, 0x0a, 0x30, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x45, 0x58, 0x54,
	0x42, 0x4f, 0x58, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x42, 0x4f, 0x42, 0x4f,
	0x58, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x45,
	0x43, 0x54, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x10, 0x04, 0x22, 0xdb, 0x01,
	0x0a, 0x2f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x6e, 0x69, 0x78, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x43, 0x0a, 0x3f, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x65, 0x6e, 0x69,
	0x78, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0b, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x30, 0x5f, 0x30, 0x10, 0x01, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x13, 0x0a, 0x0b, 0x56,
	0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x30, 0x5f, 0x31, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x01,
	0x12, 0x13, 0x0a, 0x0b, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x30, 0x5f, 0x32, 0x10,
	0x03, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x13, 0x0a, 0x0b, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x30, 0x5f, 0x33, 0x10, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x45,
	0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x30, 0x5f, 0x34, 0x10, 0x05, 0x42, 0x0f, 0x5a, 0x0d, 0x2e,
	0x2f, 0x67, 0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescOnce sync.Once
	file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescData = file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDesc
)

func file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescGZIP() []byte {
	file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescOnce.Do(func() {
		file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescData = protoimpl.X.CompressGZIP(file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescData)
	})
	return file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDescData
}

var file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_goTypes = []interface{}{
	(ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeTypeEnum)(0),                    // 0: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionAttributeTypeEnum
	(ProcessTestInstructionExecutionPubSubRequest_CurrentFenixExecutionWorkerProtoFileVersionEnum)(0),     // 1: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.CurrentFenixExecutionWorkerProtoFileVersionEnum
	(*ProcessTestInstructionExecutionPubSubRequest)(nil),                                                  // 2: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest
	(*ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage)(nil),                  // 3: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionExecutionMessage
	(*ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage)(nil),                  // 4: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionAttributeMessage
	(*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage)(nil),                                  // 5: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestDataMessage
	(*ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage)(nil),                // 6: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.ClientSystemIdentificationMessage
	(*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage)(nil), // 7: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestDataMessage.ManualOverrideForTestDataMessage
}
var file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_depIdxs = []int32{
	1, // 0: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.ProtoFileVersionUsedByClient:type_name -> fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.CurrentFenixExecutionWorkerProtoFileVersionEnum
	3, // 1: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstruction:type_name -> fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionExecutionMessage
	5, // 2: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestData:type_name -> fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestDataMessage
	4, // 3: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionExecutionMessage.TestInstructionAttributes:type_name -> fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionAttributeMessage
	0, // 4: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionAttributeMessage.TestInstructionAttributeType:type_name -> fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestInstructionAttributeTypeEnum
	7, // 5: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestDataMessage.ManualOverrideForTestData:type_name -> fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.TestDataMessage.ManualOverrideForTestDataMessage
	1, // 6: fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.ClientSystemIdentificationMessage.ProtoFileVersionUsedByClient:type_name -> fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionPubSubRequest.CurrentFenixExecutionWorkerProtoFileVersionEnum
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() {
	file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_init()
}
func file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_init() {
	if File_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTestInstructionExecutionPubSubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTestInstructionExecutionPubSubRequest_TestInstructionExecutionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTestInstructionExecutionPubSubRequest_TestInstructionAttributeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTestInstructionExecutionPubSubRequest_ClientSystemIdentificationMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessTestInstructionExecutionPubSubRequest_TestDataMessage_ManualOverrideForTestDataMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_goTypes,
		DependencyIndexes: file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_depIdxs,
		EnumInfos:         file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_enumTypes,
		MessageInfos:      file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_msgTypes,
	}.Build()
	File_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto = out.File
	file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_rawDesc = nil
	file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_goTypes = nil
	file_FenixExecutionServer_fenixExecutionWorkerGrpcApi_fenixExecutionWorkerGrpcApi_MessagesUsedTogetherWithPubSub_proto_depIdxs = nil
}
