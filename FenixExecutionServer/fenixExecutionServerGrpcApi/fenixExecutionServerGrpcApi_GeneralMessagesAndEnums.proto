syntax = "proto3";
package fenixExecutionServerGrpcApi;
option go_package = "./go_grpc_api";
option csharp_namespace = "ExecutionServerGrpc";


// ****************************************************************************************************
// General messages and Enumerations

// Used to have client and server in sync with using the same proto file version
enum CurrentFenixExecutionServerProtoFileVersionEnum {
  VERSION_0_0 = 0 [deprecated = true];
  VERSION_0_1 = 1; // Current version
}

// Error codes - for now a test
enum ErrorCodesEnum {
  OK = 0;
  ERROR_UNKNOWN_CALLER = 1;
  ERROR_WRONG_PROTO_FILE_VERSION = 2;
  ERROR_UNSPECIFIED = 3;
  ERROR_DATABASE_PROBLEM = 4;
}

// Execution Enum for a TestCase Execution
enum TestCaseExecutionStatusEnum {
  TCE_INITIATED = 0; // All set up for execution, but has not been triggered to start execution
  TCE_EXECUTING = 1; // TestCase is execution
  TCE_CONTROLLED_INTERRUPTION = 2; // Interrupted by in a controlled way
  TCE_FINISHED_OK = 3; // Finnish as expected to TestCase definition
  TCE_FINISHED_NOT_OK = 4; // Finnish with errors in validations
  TCE_UNEXPECTED_INTERRUPTION = 5; // The TestCase stopped executed in an unexpected way
}

// Execution Enum for a TestInstruction Execution
enum TestInstructionExecutionStatusEnum {
  TIE_INITIATED = 0; // All set up for execution, but has not been triggered to start execution
  TIE_EXECUTING = 1; // TestCase is execution
  TIE_CONTROLLED_INTERRUPTION = 2; // Interrupted by in a controlled way
  TIE_FINISHED_OK = 3; // Finnish as expected to TestCase definition
  TIE_FINISHED_NOT_OK = 4; // Finnish with errors in validations
  TIE_UNEXPECTED_INTERRUPTION = 5; // The TestCase stopped executed in an unexpected way
}

// How a Client is able to process requests in serial or parallell, regarding TestInstructions, TestCases and/or TestSuites
enum    ProcessingCapabilityForClientSystemEnum {
  CAN_PROCESS_IN_PARALLELL = 0; // Can be processed in parallell, by the Client system
  CAN_ONLY_PROCESS_IN_SERIAL = 1; // Can only be processed in serial, by the Client system
  STOP_SEND_NEW_EXECUTION_TASKS = 2; // Stopp sending new tasks for execution
}

// Each log post row is classified with the following
enum LogPostStatusEnum {
  INFO = 0; // The Log-post row is of Information Type
  WARNING = 1; // The Log-post row is of Warning Type, to inform user that something is not like it should
  VALIDATION_OK = 2; // The Log-post row is of Validation OK Type and should be used when the validation of the TestExecution matched expected result
  VALIDATION_ERROR = 3; // The Log-post row is of Validation Error Type and should be used when the validation of the TestExecution didn't matched expected result
}

// Execution priority for TestInstructions, TestCases and TestSuites
enum ExecutionPriorityEnum {
  HIGHEST_PROBES = 0; // Only triggered by system that need to trigger probes ');
  HIGH_SINGLE_TESTCASE = 1; // Used for execution of single TestCases triggered by the user');
  HIGH_SINGLE_TESTSUITE = 2; // Used for execution of single TestSuite triggered by the user');
  MEDIUM_MULTIPLE_TESTCASES = 3; // Used for execution of multiple TestCases triggered by the user');
  MEDIUM_MULTIPLE_TESTSUITES = 4; // Used for execution of Multiple TestSuites triggered by the user');
  LOW_SCHEDULED_TESTSUITES = 5; //Scheduled Suites use this priority');

}

// Parameter used for Empty inputs, only containing current proto-file version
message EmptyParameter {
  CurrentFenixExecutionServerProtoFileVersionEnum ProtoFileVersionUsedByClient = 1; // The latest proto file version number to be used
}

// Ack/Nack- Response message with comment
message AckNackResponse {
  bool AckNack = 1; // True=Ack, False=Nack
  string Comments = 2; //Comments if needed
  repeated ErrorCodesEnum ErrorCodes = 3; // List of Error codes
  CurrentFenixExecutionServerProtoFileVersionEnum ProtoFileVersionUsedByClient = 4; // The latest proto file version number to be used
}


// ****************************************************************************************************
// Client System Identification Message

// Message Holding information about who is the calling client system
message ClientSystemIdentificationMessage {
  string DomainUuid = 1; // The Users Id, SEB S-id will be used for SEB
  CurrentFenixExecutionServerProtoFileVersionEnum ProtoFileVersionUsedByClient = 2; // The latest proto file version number to be used
}

