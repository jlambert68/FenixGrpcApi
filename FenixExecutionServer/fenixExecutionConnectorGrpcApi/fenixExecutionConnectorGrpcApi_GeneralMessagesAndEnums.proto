syntax = "proto3";
package fenixExecutionConnectorGrpcApi;
option go_package = "./go_grpc_api";
option csharp_namespace = "FenixExecutionConnectorGrpcApi";


// ****************************************************************************************************
// General messages and Enumerations

// Used to have client and server in sync with using the same proto file version
enum CurrentFenixExecutionConnectorProtoFileVersionEnum {
  CurrentFenixExecutionConnectorProtoFileVersionEnum_DEFAULT_NOT_SET = 0; //Value used for when the variable is not actively set
  VERSION_0_0 = 1 [deprecated = true];
  VERSION_0_1 = 2 [deprecated = true];
  VERSION_0_2 = 3 [deprecated = true];
  VERSION_0_3 = 4; // Current version
}

// Error codes - for now a test
enum ErrorCodesEnum {
  ErrorCodesEnum_DEFAULT_NOT_SET = 0; //Value used for when the variable is not actively set
  OK = 1;
  ERROR_UNKNOWN_CALLER = 2;
  ERROR_WRONG_PROTO_FILE_VERSION = 3;
  ERROR_UNSPECIFIED = 4;
  ERROR_DATABASE_PROBLEM = 5;
  ERROR_EXECUTION_CONNECTOR_PROBLEM = 6;
}

// Execution Enum for a TestInstruction Execution
enum TestInstructionExecutionStatusEnum {
  TestInstructionExecutionStatusEnum_DEFAULT_NOT_SET = 0; //Value used for when the variable is not actively set
  TIE_INITIATED = 1; // All set up for execution, but has not been triggered to start execution
  TIE_EXECUTING = 2; // TestInstruction is execution
  TIE_CONTROLLED_INTERRUPTION = 3; // Interrupted by in a controlled way
  TIE_CONTROLLED_INTERRUPTION_CAN_BE_RERUN = 4; // Interrupted by in a controlled way, but can be rerun
  TIE_FINISHED_OK = 5; // Finish as expected to TestInstruction definition
  TIE_FINISHED_OK_CAN_BE_RERUN = 6; // Finish as expected to TestInstruction definition, but can be rerun
  TIE_FINISHED_NOT_OK = 7; // Finish with errors in validations
  TIE_FINISHED_NOT_OK_CAN_BE_RERUN = 8; // Finish with errors in validations, but can be rerun
  TIE_UNEXPECTED_INTERRUPTION = 9; // The TestInstruction stopped executed in an unexpected way
  TIE_UNEXPECTED_INTERRUPTION_CAN_BE_RERUN = 10; // The TestInstruction stopped executed in an unexpected way, but can be rerun
  TIE_TIMEOUT_INTERRUPTION = 11; // The TestInstruction had a forced stop because of timeout due to {time.Now() > 'ExpectedExecutionEndTimeStamp'}
  TIE_TIMEOUT_INTERRUPTION_CAN_BE_RERUN = 12; // The TestInstruction had a forced stop because of timeout due to {time.Now() > 'ExpectedExecutionEndTimeStamp'}, but can be rerun


}

// How a Client is able to process requests in serial or parallell, regarding TestInstructions, TestCases and/or TestSuites
enum    ProcessingCapabilityForClientSystemEnum {
  ProcessingCapabilityForClientSystemEnum_DEFAULT_NOT_SET = 0; //Value used for when the variable is not actively set
  CAN_PROCESS_IN_PARALLELL = 1; // Can be processed in parallell, by the Client system
  CAN_ONLY_PROCESS_IN_SERIAL = 2; // Can only be processed in serial, by the Client system
  STOP_SEND_NEW_EXECUTION_TASKS = 3; // Stopp sending new tasks for execution
}

// Execution priority for TestInstructions, TestCases and TestSuites
enum ExecutionPriorityEnum {
  ExecutionPriorityEnum_DEFAULT_NOT_SET = 0; //Value used for when the variable is not actively set
  HIGHEST_PROBES = 1; // Only triggered by system that need to trigger probes ');
  HIGH_SINGLE_TESTCASE = 2; // Used for execution of single TestCases triggered by the user');
  HIGH_SINGLE_TESTSUITE = 3; // Used for execution of single TestSuite triggered by the user');
  MEDIUM_MULTIPLE_TESTCASES = 4; // Used for execution of multiple TestCases triggered by the user');
  MEDIUM_MULTIPLE_TESTSUITES = 5; // Used for execution of Multiple TestSuites triggered by the user');
  LOW_SCHEDULED_TESTSUITES = 6; //Scheduled Suites use this priority');

}

// The TestInstructionAttribute can have one of the following types: "TextBox", "ComboBox", "FileSelector", "FunctionSelector"
enum TestInstructionAttributeTypeEnum {
  TestInstructionAttributeTypeEnum_DEFAULT_NOT_SET = 0; //Value used for when the variable is not actively set
  TEXTBOX = 1; // Defines that TestInstructionAttribute of type "TextBox"
  COMBOBOX = 2; // Defines that TestInstructionAttriebute of type ComboBox
  FILE_SELECTOR = 3; // Defines that TestInstructionAttribute of type FileSelector
  FUNCTION_SELECTOR = 4; // Defines that TestInstructionAttribute of type FunctionSelector
}

// Parameter used for Empty inputs, only containing current proto-file version
message EmptyParameter {
  CurrentFenixExecutionConnectorProtoFileVersionEnum ProtoFileVersionUsedByCaller = 1; // The latest proto file version number to be used
}

// Ack/Nack- Response message with comment
message AckNackResponse {
  bool AckNack = 1; // True=Ack, False=Nack
  string Comments = 2; //Comments if needed
  repeated ErrorCodesEnum ErrorCodes = 3; // List of Error codes
  CurrentFenixExecutionConnectorProtoFileVersionEnum ProtoFileVersionUsedByConnector = 4; // The latest proto file version number to be used
}


// ****************************************************************************************************
// Client System Identification Message

// Message Holding information about who is the calling client system
message ClientSystemIdentificationMessage {
  string DomainUuid = 1; // The Users Id, SEB S-id will be used for SEB
  CurrentFenixExecutionConnectorProtoFileVersionEnum ProtoFileVersionUsedByCaller = 2; // The latest proto file version number to be used
}
