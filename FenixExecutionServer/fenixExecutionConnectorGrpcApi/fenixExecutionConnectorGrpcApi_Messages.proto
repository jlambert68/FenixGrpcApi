syntax = "proto3";
package fenixExecutionConnectorGrpcApi;
option go_package = "./go_grpc_api";
option csharp_namespace = "FenixExecutionConnectorGrpcApi";

import "FenixExecutionServer/fenixExecutionConnectorGrpcApi/fenixExecutionConnectorGrpcApi_GeneralMessagesAndEnums.proto";
import "FenixExecutionServer/fenixExecutionWorkerGrpcApi/fenixExecutionWorkerGrpcApi_GeneralMessagesAndEnums.proto";
import "FenixExecutionServer/fenixExecutionWorkerGrpcApi/fenixExecutionWorkerGrpcApi_Messages.proto";


// Message used for Triggering messages from Connector to Worker
message TriggerTestInstructionExecutionResultMessage {
  CurrentFenixExecutionConnectorProtoFileVersionEnum ProtoFileVersionUsedByCaller = 1; // The latest proto file version number to be used
  string TestInstructionExecutionUuid = 2; // The unique uuid for the TestInstructionExecution, set by Fenix Execution Server
  TestInstructionExecutionStatusEnum TestInstructionExecutionStatus = 3; // The final status for the TestInstruction-execution

}

// Message used for Triggering simulation that Connector received message from  Worker, used for testing
message TriggerPostRestCallForTestInstructionExecutionResponse {
  fenixExecutionWorkerGrpcApi.AckNackResponse ackNackResponse = 1; // Ack/Nack- Response message with comment
  fenixExecutionWorkerGrpcApi.ProcessTestInstructionExecutionReversedResponse processTestInstructionExecutionReversedResponse = 2; // Response from execution client to execution worker using direct gRPC call instead of doing response on call, due to it is not possible to call Worker from Connector
  fenixExecutionWorkerGrpcApi.FinalTestInstructionExecutionResultMessage finalTestInstructionExecutionResultMessage = 3; // This message is sent from Client System, to Fenix Execution Server via a Execution Worker, when a TestExecution has stopped executed, and the result is final (OK or not OK result)

}